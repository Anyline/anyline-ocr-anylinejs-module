!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.anylinejs=t():e.anylinejs=t()}(self,(()=>(()=>{var e,t,n={2045:(e,t,n)=>{var r,o=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(e){var t,o,i;"OCR"==(t=void 0!==(e=e||{})?e:{}).anyline.__any_module_id.toUpperCase()&&((t=void 0!==e?e:{}).expectedDataFileDownloads||(t.expectedDataFileDownloads=0),t.expectedDataFileDownloads++,function(e){"object"==typeof window?window.encodeURIComponent(window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/"):"undefined"==typeof process&&"undefined"!=typeof location&&encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/");var r="data_ocr.data";"function"!=typeof t.locateFilePackage||t.locateFile||(t.locateFile=t.locateFilePackage,O("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));var o=t.locateFile?t.locateFile(r,""):r,i=e.remote_package_size;e.package_uuid;var a=null,s=t.getPreloadedPackage?t.getPreloadedPackage(o,i):null;function c(){function n(e,t){if(!e)throw t+(new Error).stack}function r(r){n(r,"Loading data file failed."),n(r instanceof ArrayBuffer,"bad input to processPackageData");var o=new Uint8Array(r),i={data:null,cachedOffset:1939339,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[0,2048,4096,6144,8192,10240,12288,14336,16384,18432,20480,22528,24576,26624,28672,30720,32768,34816,36864,38912,40960,43008,45056,47104,49152,51200,53248,55296,57344,59392,61440,63488,65536,67584,69632,71680,73728,75776,77824,79872,81920,83968,86016,88064,90112,92160,94208,96256,98304,100352,102400,104448,106496,108544,110592,112640,114688,116736,118784,120832,122880,124928,126976,129024,131072,133120,135168,137216,139264,141312,143360,145408,147456,149504,151552,153600,155648,157696,159744,161792,163840,165888,167936,169984,172032,174080,176128,178176,180224,182272,184320,186368,188416,190464,192512,194560,196608,198656,200704,202752,204800,206848,208896,210944,212992,215040,217088,219136,221184,223232,225280,227328,229376,231424,233472,235520,237568,239616,241664,243712,245760,247808,249856,251904,253952,256e3,258048,260096,262144,264192,266240,268288,270336,272384,274432,276480,278528,280576,282624,284672,286720,288768,290816,292864,294912,296960,299008,301056,303104,305152,307200,309248,311296,313344,315392,317440,319488,321536,323584,325632,327680,329728,331776,333824,335872,337920,339968,342016,344064,346112,348160,350208,352256,354304,356352,358400,360448,362496,364544,366592,368640,370688,372736,374784,376832,378880,380928,382976,385024,387072,389120,391168,393216,395264,397312,399360,401408,403456,405504,407552,409600,411648,413696,415744,417792,419840,421888,423936,425984,428032,430080,432128,434176,436224,438272,440320,442368,444416,446464,448512,450560,452608,454656,456704,458752,460800,462848,464896,466944,468992,471040,473088,475136,477184,479232,481280,483328,485376,487424,489472,491520,493568,495616,497664,499712,501760,503808,505856,507904,509952,512e3,514048,516096,518144,520192,522240,524288,526336,528384,530432,532480,534528,536576,538624,540672,542720,544768,546816,548864,550912,552960,555008,557056,559104,561152,563200,565248,567296,569344,571392,573440,575488,577536,579584,581632,583680,585728,587776,589824,591872,593920,595968,598016,600064,602112,604160,606208,608256,610304,612352,614400,616448,618496,620544,622592,624640,626688,628736,630784,632832,634880,636928,638976,641024,643072,645120,647168,649216,651264,653312,655360,657408,659456,661504,663552,665600,667648,669696,671744,673792,675840,677888,679936,681984,684032,686080,688128,690176,692224,694272,696320,698368,700416,702464,704512,706560,708608,710656,712704,714752,716800,718848,720896,722944,724992,727040,729088,731136,733184,735232,737280,739328,741376,743424,745472,747520,749568,751616,753664,755712,757760,759808,761856,763904,765952,768e3,770048,772096,774144,776192,778240,780288,782336,784384,786432,788480,790528,792576,794624,796672,798720,800768,802816,804864,806912,808960,811008,813056,815104,817152,819200,821248,823296,825344,827392,829440,831488,833536,835584,837632,839680,841728,843776,845824,847872,849920,851968,854016,856064,858112,860160,862208,864256,866304,868352,870400,872448,874496,876544,878592,880640,882688,884736,886784,888832,890880,892928,894976,897024,899072,901120,903168,905216,907264,909312,911360,913408,915456,917504,919552,921600,923648,925696,927744,929792,931840,933888,935936,937984,940032,942080,944128,946176,948224,950272,952320,954368,956416,958464,960512,962560,964608,966656,968704,970752,972800,974848,976896,978944,980992,983040,985088,987136,989184,991232,993280,995328,997376,999424,1001472,1003520,1005568,1007616,1009664,1011712,1013760,1015808,1017856,1019904,1021952,1024e3,1026048,1028096,1030144,1032192,1034240,1036288,1038336,1040384,1042432,1044480,1046528,1048576,1050624,1052672,1054720,1056768,1058816,1060864,1062912,1064960,1067008,1069056,1071104,1073152,1075200,1077248,1079296,1081344,1083392,1085440,1087488,1089536,1091584,1093632,1095680,1097728,1099776,1101824,1103872,1105920,1107968,1110016,1112064,1114112,1116160,1118208,1120256,1122304,1124352,1126400,1128448,1130496,1132544,1134592,1136640,1138688,1140736,1142784,1144832,1146880,1148928,1150976,1153024,1155072,1157120,1159168,1161216,1163264,1165312,1167360,1169408,1171456,1173504,1175552,1177600,1179648,1181696,1183744,1185792,1187840,1189888,1191936,1193984,1196032,1198080,1200128,1202176,1204224,1206272,1208320,1210368,1212416,1214464,1216512,1218560,1220608,1222656,1224704,1226752,1228800,1230848,1232896,1234944,1236992,1239040,1241088,1243136,1245184,1247232,1249280,1251328,1253376,1255424,1257472,1259520,1261568,1263616,1265664,1267712,1269760,1271808,1273856,1275904,1277952,128e4,1282048,1284096,1286144,1288192,1290240,1292288,1294336,1296384,1298432,1300480,1302528,1304576,1306624,1308672,1310720,1312768,1314816,1316864,1318912,1320960,1323008,1325056,1327104,1329152,1331200,1333248,1335296,1337344,1339392,1341440,1343488,1345536,1347584,1349632,1351680,1353728,1355776,1357824,1359872,1361920,1363968,1366016,1368064,1370112,1372160,1374208,1376256,1378304,1380352,1382400,1384448,1386496,1388544,1390592,1392640,1394688,1396736,1398784,1400832,1402880,1404928,1406976,1409024,1411072,1413120,1415168,1417216,1419264,1421312,1423360,1425408,1427456,1429504,1431552,1433600,1435648,1437696,1439744,1441792,1443840,1445888,1447936,1449984,1452032,1454080,1456128,1458176,1460224,1462272,1464320,1466368,1468416,1470464,1472512,1474560,1476608,1478656,1480704,1482752,1484800,1486848,1488896,1490944,1492992,1495040,1497088,1499136,1501184,1503232,1505280,1507328,1509376,1511424,1513472,1515520,1517568,1519616,1521664,1523712,1525760,1527808,1529856,1531904,1533952,1536e3,1538048,1540096,1542144,1544192,1546240,1548288,1550336,1552384,1554432,1556480,1558528,1560576,1562624,1564672,1566720,1568768,1570816,1572864,1574912,1576960,1579008,1581056,1583104,1585152,1587200,1589248,1591296,1593344,1595392,1597440,1599488,1601536,1603584,1605632,1607680,1609728,1611776,1613824,1615872,1617920,1619968,1622016,1624064,1626112,1628160,1630208,1632256,1634304,1636352,1638400,1640448,1642496,1644544,1646592,1648640,1650688,1652736,1654784,1656832,1658880,1660928,1662976,1665024,1667072,1669120,1671168,1673216,1675264,1677312,1679360,1681408,1683456,1685504,1687552,1689600,1691648,1693696,1695744,1697792,1699840,1701888,1703936,1705984,1708032,1710080,1712128,1714176,1716224,1718272,1720320,1722368,1724416,1726464,1728512,1730560,1732608,1734656,1736704,1738752,1740800,1742848,1744896,1746944,1748992,1751040,1753088,1755136,1757184,1759232,1761280,1763328,1765376,1767424,1769472,1771520,1773568,1775616,1777664,1779712,1781760,1783808,1785856,1787904,1789952,1792e3,1794048,1796096,1798144,1800192,1802240,1804288,1806336,1808384,1810432,1812480,1814528,1816576,1818624,1820672,1822720,1824768,1826816,1828864,1830912,1832960,1835008,1837056,1839104,1841152,1843200,1845248,1847296,1849344,1851392,1853440,1855488,1857536,1859584,1861632,1863680,1865728,1867776,1869824,1871872,1873920,1875968,1878016,1880064,1882112,1884160,1886208,1888256,1890304,1892352,1894400,1896448,1898496,1900544,1902592,1904640,1906688,1908736,1910784,1912832,1914880,1916928,1918976,1921024,1923072,1925120,1927168,1929216,1931264,1933312,1935360,1937408],sizessuccesses:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};i.data=o,n("object"==typeof t.LZ4,"LZ4 not present - was your app build with  -s LZ4=1  ?"),t.LZ4.loadPackage({metadata:e,compressedData:i},!1),t.removeRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_ocr.data")}t.FS_createPath("/","root",!0,!0),t.FS_createPath("/root","module_anyline_ocr",!0,!0),t.FS_createPath("/root/module_anyline_ocr","trained_models",!0,!0),t.FS_createPath("/root/module_anyline_ocr","config_files",!0,!0),t.addRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_ocr.data"),t.preloadResults||(t.preloadResults={}),t.preloadResults["/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_ocr.data"]={fromCache:!1},s?(r(s),s=null):a=r}s||function(e,r,o,i){if("object"!=typeof process||"object"!=typeof process.versions||"string"!=typeof process.versions.node){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onprogress=function(n){var o=e,i=r;if(n.total&&(i=n.total),n.loaded){a.addedTotal?t.dataFileDownloads[o].loaded=n.loaded:(a.addedTotal=!0,t.dataFileDownloads||(t.dataFileDownloads={}),t.dataFileDownloads[o]={loaded:n.loaded,total:i});var s=0,c=0,d=0;for(var l in t.dataFileDownloads){var u=t.dataFileDownloads[l];s+=u.total,c+=u.loaded,d++}s=Math.ceil(s*t.expectedDataFileDownloads/d),t.setStatus&&t.setStatus("Downloading data... ("+c+"/"+s+")")}else t.dataFileDownloads||t.setStatus&&t.setStatus("Downloading data...")},a.onerror=function(t){throw new Error("NetworkError for: "+e)},a.onload=function(e){if(!(200==a.status||304==a.status||206==a.status||0==a.status&&a.response))throw new Error(a.statusText+" : "+a.responseURL);var t=a.response;o(t)},a.send(null)}else n(9061).readFile(e,(function(e,t){e?i(e):o(t.buffer)}))}(t.anyline.__any_module_loc_f(o),i,(function(e){a?(a(e),a=null):s=e}),(function(e){console.error("package error:",e)})),t.calledRun?c():(t.preRun||(t.preRun=[]),t.preRun.push(c))}({files:[{filename:"/root/module_anyline_ocr/vin.ale",start:0,end:18336},{filename:"/root/module_anyline_ocr/container_scanner_vertical.ale",start:18336,end:40236},{filename:"/root/module_anyline_ocr/e_card_scanner.ale",start:40236,end:78564},{filename:"/root/module_anyline_ocr/container_scanner.ale",start:78564,end:93188},{filename:"/root/module_anyline_ocr/verbund_meter_point_number.ale",start:93188,end:105828},{filename:"/root/module_anyline_ocr/anyline_ocr_auto_any.ale",start:105828,end:131332},{filename:"/root/module_anyline_ocr/trained_models/USNr.any",start:131332,end:1036044},{filename:"/root/module_anyline_ocr/trained_models/VIN.any",start:1036044,end:1939188},{filename:"/root/module_anyline_ocr/config_files/EHIC_default_start_variables.json",start:1939188,end:1939339}],remote_package_size:1943435,package_uuid:"8bddb12b-a63c-41c6-ad43-acfd1bc0f60a"})),"ID"==t.anyline.__any_module_id.toUpperCase()&&((t=void 0!==e?e:{}).expectedDataFileDownloads||(t.expectedDataFileDownloads=0),t.expectedDataFileDownloads++,function(e){"object"==typeof window?window.encodeURIComponent(window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/"):"undefined"==typeof process&&"undefined"!=typeof location&&encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/");var r="data_id.data";"function"!=typeof t.locateFilePackage||t.locateFile||(t.locateFile=t.locateFilePackage,O("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));var o=t.locateFile?t.locateFile(r,""):r,i=e.remote_package_size;e.package_uuid;var a=null,s=t.getPreloadedPackage?t.getPreloadedPackage(o,i):null;function c(){function n(e,t){if(!e)throw t+(new Error).stack}function r(r){n(r,"Loading data file failed."),n(r instanceof ArrayBuffer,"bad input to processPackageData");var o=new Uint8Array(r),i={data:null,cachedOffset:4063680,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[0,2048,4096,6144,8192,10240,12288,14336,16384,18432,20480,22528,24576,26624,28672,30720,32768,34816,36864,38912,40960,43008,45056,47104,49152,51200,53248,55296,57344,59392,61440,63488,65536,67584,69632,71680,73728,75776,77824,79872,81920,83968,86016,88064,90112,92160,94208,96256,98304,100352,102400,104448,106496,108544,110592,112640,114688,116736,118784,120832,122880,124928,126976,129024,131072,133120,135168,137216,139264,141312,143360,145408,147456,149504,151552,153600,155648,157696,159744,161792,163840,165888,167936,169984,172032,174080,176128,178176,180224,182272,184320,186368,188416,190464,192512,194560,196608,198656,200704,202752,204800,206848,208896,210944,212992,215040,217088,219136,221184,223232,225280,227328,229376,231424,233472,235520,237568,239616,241664,243712,245760,247808,249856,251904,253952,256e3,258048,260096,262144,264192,266240,268288,270336,272384,274432,276480,278528,280576,282624,284672,286720,288768,290816,292864,294912,296960,299008,301056,303104,305152,307200,309248,311296,313344,315392,317440,319488,321536,323584,325632,327680,329728,331776,333824,335872,337920,339968,342016,344064,346112,348160,350208,352256,354304,356352,358400,360448,362496,364552,366600,368648,370696,372744,374792,376840,378888,380936,382984,385032,387080,389128,391176,393224,395272,397320,399368,401416,403464,405512,407560,409608,411656,413704,415752,417800,419848,421896,423944,425992,428040,430088,432136,434184,436232,438280,440328,442376,444424,446472,448520,450568,452616,454664,456712,458760,460808,462856,464904,466952,469e3,471048,473096,475144,477192,479240,481288,483336,485384,487432,489480,491528,493576,495624,497672,499720,501768,503816,505864,507912,509960,512008,514056,516104,518152,520200,522248,524296,526344,528392,530440,532488,534536,536584,538632,540680,542728,544776,546824,548872,550920,552968,555016,557064,559112,561160,563208,565256,567304,569352,571400,573448,575496,577544,579592,581640,583688,585736,587784,589832,591880,593928,595976,598024,600072,602120,604168,606216,608264,610312,612360,614408,616456,618504,620552,622600,624648,626696,628744,630792,632840,634888,636936,638984,641032,643080,645128,647176,649224,651272,653320,655368,657416,659464,661512,663560,665608,667656,669704,671752,673800,675848,677896,679944,681992,684040,686088,688136,690184,692232,694280,696328,698376,700424,702472,704520,706568,708616,710664,712712,714760,716808,718856,720904,722952,725e3,727048,729096,731144,733192,735240,737288,739336,741384,743432,745480,747528,749576,751624,753672,755720,757768,759816,761864,763912,765960,768008,770056,772104,774152,776200,778248,780296,782344,784392,786440,788488,790536,792584,794632,796680,798728,800776,802824,804872,806920,808968,811016,813064,815112,817160,819208,821256,823304,825352,827400,829448,831496,833544,835592,837640,839688,841736,843784,845832,847880,849928,851976,854024,856072,858120,860168,862216,864264,866312,868360,870408,872456,874504,876552,878600,880648,882696,884744,886792,888840,890888,892936,894984,897032,899080,901128,903176,905224,907272,909320,911368,913416,915464,917512,919560,921608,923656,925704,927752,929800,931848,933896,935944,937992,940040,942088,944136,946184,948232,950280,952328,954376,956424,958472,960520,962568,964616,966664,968712,970760,972808,974856,976904,978952,981e3,983048,985096,987144,989192,991240,993288,995336,997384,999432,1001480,1003528,1005576,1007624,1009672,1011720,1013768,1015816,1017864,1019912,1021960,1024008,1026056,1028104,1030152,1032200,1034248,1036296,1038344,1040392,1042440,1044488,1046536,1048584,1050632,1052680,1054728,1056776,1058824,1060872,1062920,1064968,1067016,1069064,1071112,1073160,1075208,1077256,1079304,1081352,1083400,1085448,1087496,1089544,1091592,1093640,1095688,1097736,1099784,1101832,1103880,1105928,1107976,1110024,1112072,1114120,1116168,1118216,1120264,1122312,1124360,1126408,1128456,1130504,1132552,1134600,1136648,1138696,1140744,1142792,1144840,1146888,1148936,1150984,1153032,1155080,1157128,1159176,1161224,1163272,1165320,1167368,1169416,1171464,1173512,1175560,1177608,1179656,1181704,1183752,1185800,1187848,1189896,1191944,1193992,1196040,1198088,1200136,1202184,1204232,1206280,1208328,1210376,1212424,1214472,1216520,1218568,1220616,1222664,1224712,1226760,1228808,1230856,1232904,1234952,1237e3,1239048,1241096,1243144,1245192,1247240,1249288,1251336,1253384,1255432,1257480,1259528,1261576,1263624,1265672,1267720,1269768,1271816,1273864,1275912,1277960,1280008,1282056,1284104,1286152,1288200,1290248,1292296,1294344,1296392,1298440,1300488,1302536,1304584,1306632,1308680,1310728,1312776,1314824,1316872,1318920,1320968,1323016,1325064,1327112,1329160,1331208,1333256,1335304,1337352,1339400,1341448,1343496,1345544,1347592,1349640,1351688,1353736,1355784,1357832,1359880,1361928,1363976,1366024,1368072,1370120,1372168,1374216,1376264,1378312,1380360,1382408,1384456,1386504,1388552,1390600,1392648,1394696,1396744,1398792,1400840,1402888,1404936,1406984,1409032,1411080,1413128,1415176,1417224,1419272,1421320,1423368,1425416,1427464,1429512,1431560,1433608,1435656,1437704,1439752,1441800,1443848,1445896,1447944,1449992,1452040,1454088,1456136,1458184,1460232,1462280,1464328,1466376,1468424,1470472,1472520,1474568,1476616,1478664,1480712,1482760,1484808,1486856,1488904,1490952,1493e3,1495048,1497096,1499144,1501192,1503240,1505288,1507336,1509384,1511432,1513480,1515528,1517576,1519624,1521672,1523720,1525768,1527816,1529864,1531912,1533960,1536008,1538056,1540104,1542152,1544200,1546248,1548296,1550344,1552392,1554440,1556488,1558536,1560584,1562632,1564680,1566728,1568776,1570824,1572872,1574920,1576968,1579016,1581064,1583112,1585160,1587208,1589256,1591304,1593352,1595400,1597448,1599496,1601544,1603592,1605640,1607688,1609736,1611784,1613832,1615880,1617928,1619976,1622024,1624072,1626120,1628168,1630216,1632264,1634312,1636360,1638408,1640456,1642504,1644552,1646600,1648648,1650696,1652744,1654792,1656840,1658888,1660936,1662984,1665032,1667080,1669128,1671176,1673224,1675272,1677320,1679368,1681416,1683464,1685512,1687560,1689608,1691656,1693704,1695752,1697800,1699848,1701896,1703944,1705992,1708040,1710088,1712136,1714184,1716232,1718280,1720328,1722376,1724424,1726472,1728520,1730568,1732616,1734664,1736712,1738760,1740808,1742856,1744904,1746952,1749e3,1751048,1753096,1755144,1757192,1759240,1761288,1763336,1765384,1767432,1769480,1771528,1773576,1775624,1777672,1779720,1781768,1783816,1785864,1787912,1789960,1792008,1794056,1796104,1798152,1800200,1802248,1804296,1806344,1808392,1810440,1812488,1814536,1816584,1818632,1820680,1822728,1824776,1826824,1828872,1830920,1832968,1835016,1837064,1839112,1841160,1843208,1845256,1847304,1849352,1851400,1853448,1855496,1857544,1859592,1861640,1863688,1865736,1867784,1869832,1871880,1873928,1875976,1878024,1880072,1882120,1884168,1886216,1888264,1890312,1892360,1894408,1896456,1898504,1900552,1902600,1904648,1906696,1908744,1910792,1912840,1914888,1916936,1918984,1921032,1923080,1925128,1927176,1929224,1931272,1933320,1935368,1937416,1939464,1941512,1943560,1945608,1947656,1949704,1951752,1953800,1955848,1957896,1959944,1961992,1964040,1966088,1968136,1970184,1972232,1974280,1976328,1978376,1980424,1982472,1984520,1986568,1988616,1990664,1992712,1994760,1996808,1998856,2000904,2002952,2005e3,2007048,2009096,2011144,2013192,2015240,2017288,2019336,2021384,2023432,2025480,2027528,2029576,2031624,2033672,2035720,2037768,2039816,2041864,2043912,2045960,2048008,2050056,2052104,2054152,2056200,2058248,2060296,2062344,2064392,2066440,2068488,2070536,2072584,2074632,2076680,2078728,2080776,2082824,2084872,2086920,2088968,2091016,2093064,2095112,2097160,2099208,2101256,2103304,2105352,2107400,2109448,2111496,2113544,2115592,2117640,2119688,2121736,2123784,2125832,2127880,2129928,2131976,2134024,2136072,2138120,2140168,2142216,2144264,2146312,2148360,2150408,2152456,2154504,2156552,2158600,2160648,2162696,2164744,2166792,2168840,2170888,2172936,2174984,2177032,2179080,2181128,2183176,2185224,2187272,2189320,2191368,2193416,2195464,2197512,2199560,2201608,2203656,2205704,2207752,2209800,2211848,2213896,2215944,2217992,2220040,2222088,2224136,2226184,2228232,2230280,2232328,2234376,2236424,2238472,2240520,2242568,2244616,2246664,2248712,2250760,2252808,2254856,2256904,2258952,2261e3,2263048,2265096,2267144,2269192,2271240,2273288,2275336,2277384,2279432,2281480,2283528,2285576,2287624,2289672,2291720,2293768,2295816,2297864,2299912,2301960,2304008,2306056,2308104,2310152,2312200,2314248,2316296,2318344,2320392,2322440,2324488,2326536,2328584,2330632,2332680,2334728,2336776,2338824,2340872,2342920,2344968,2347016,2349064,2351112,2353160,2355208,2357256,2359304,2361352,2363400,2365448,2367496,2369544,2371592,2373640,2375688,2377736,2379784,2381832,2383880,2385928,2387976,2390024,2392072,2394120,2396168,2398216,2400264,2402312,2404360,2406408,2408456,2410504,2412552,2414600,2416648,2418696,2420744,2422792,2424840,2426888,2428936,2430984,2433032,2435080,2437128,2439176,2441224,2443272,2445320,2447368,2449416,2451464,2453512,2455560,2457608,2459656,2461704,2463752,2465800,2467848,2469896,2471944,2473992,2476040,2478088,2480136,2482184,2484232,2486280,2488328,2490376,2492424,2494472,2496520,2498568,2500616,2502664,2504712,2506760,2508808,2510856,2512904,2514952,2517e3,2519048,2521096,2523144,2525192,2527240,2529288,2531336,2533384,2535432,2537480,2539528,2541576,2543624,2545672,2547720,2549768,2551816,2553864,2555912,2557960,2560008,2562056,2564104,2566152,2568200,2570248,2572296,2574344,2576392,2578440,2580488,2582536,2584584,2586632,2588680,2590728,2592776,2594824,2596872,2598920,2600968,2603016,2605064,2607112,2609160,2611208,2613256,2615304,2617352,2619400,2621448,2623496,2625544,2627592,2629640,2631688,2633736,2635784,2637832,2639880,2641928,2643976,2646024,2648072,2650120,2652168,2654216,2656264,2658312,2660360,2662408,2664456,2666504,2668552,2670600,2672648,2674696,2676744,2678792,2680840,2682888,2684936,2686984,2689032,2691080,2693128,2695176,2697224,2699272,2701320,2703368,2705416,2707464,2709512,2711560,2713608,2715656,2717704,2719752,2721800,2723848,2725896,2727944,2729992,2732040,2734088,2736136,2738184,2740232,2742280,2744328,2746376,2748424,2750472,2752520,2754568,2756616,2758664,2760712,2762760,2764808,2766856,2768904,2770952,2773e3,2775048,2777096,2779144,2781192,2783240,2785288,2787336,2789384,2791432,2793480,2795528,2797576,2799624,2801672,2803720,2805768,2807816,2809864,2811912,2813960,2816008,2818056,2820104,2822152,2824200,2826248,2828296,2830344,2832392,2834440,2836488,2838536,2840584,2842632,2844680,2846728,2848776,2850824,2852872,2854920,2856968,2859016,2861064,2863112,2865160,2867208,2869256,2871304,2873352,2875400,2877448,2879496,2881544,2883592,2885640,2887688,2889736,2891784,2893832,2895880,2897928,2899976,2902024,2904072,2906120,2908168,2910216,2912264,2914312,2916360,2918408,2920456,2922504,2924552,2926600,2928648,2930696,2932744,2934792,2936840,2938888,2940936,2942984,2945032,2947080,2949128,2951176,2953224,2955272,2957320,2959368,2961416,2963464,2965512,2967560,2969608,2971656,2973704,2975752,2977800,2979848,2981896,2983944,2985992,2988040,2990088,2992136,2994184,2996232,2998280,3000328,3002376,3004424,3006472,3008520,3010568,3012616,3014664,3016712,3018760,3020808,3022856,3024904,3026952,3029e3,3031048,3033096,3035144,3037192,3039240,3041288,3043336,3045384,3047432,3049480,3051528,3053576,3055624,3057672,3059720,3061768,3063816,3065864,3067912,3069960,3072008,3074056,3076104,3078152,3080200,3082248,3084296,3086344,3088392,3090440,3092488,3094536,3096584,3098632,3100680,3102728,3104776,3106824,3108872,3110920,3112968,3115016,3117064,3119112,3121160,3123208,3125256,3127304,3129352,3131400,3133448,3135496,3137544,3139592,3141640,3143688,3145736,3147784,3149832,3151880,3153928,3155976,3158024,3160072,3162120,3164168,3166216,3168264,3170312,3172360,3174408,3176456,3178504,3180552,3182600,3184648,3186696,3188744,3190792,3192840,3194888,3196936,3198984,3201032,3203080,3205128,3207176,3209224,3211272,3213320,3215368,3217416,3219464,3221512,3223560,3225608,3227656,3229704,3231752,3233800,3235848,3237896,3239944,3241992,3244040,3246088,3248136,3250184,3252232,3254280,3256328,3258376,3260424,3262472,3264520,3266568,3268616,3270664,3272712,3274760,3276808,3278856,3280904,3282952,3285e3,3287048,3289096,3291144,3293192,3295240,3297288,3299336,3301384,3303432,3305480,3307528,3309576,3311624,3313672,3315720,3317768,3319816,3321864,3323912,3325960,3328008,3330056,3332104,3334152,3336200,3338248,3340296,3342344,3344392,3346440,3348488,3350536,3352584,3354632,3356680,3358728,3360776,3362824,3364872,3366920,3368968,3371016,3373064,3375112,3377160,3379208,3381256,3383304,3385352,3387400,3389448,3391496,3393544,3395592,3397640,3399688,3401736,3403784,3405832,3407880,3409928,3411976,3414024,3416072,3418120,3420168,3422216,3424264,3426312,3428360,3430408,3432456,3434504,3436552,3438600,3440648,3442696,3444744,3446792,3448840,3450888,3452936,3454984,3457032,3459080,3461128,3463176,3465224,3467272,3469320,3471368,3473416,3475464,3477512,3479560,3481608,3483656,3485704,3487752,3489800,3491848,3493896,3495944,3497992,3500040,3502088,3504136,3506184,3508232,3510280,3512328,3514376,3516424,3518472,3520520,3522568,3524616,3526664,3528712,3530760,3532808,3534856,3536904,3538952,3541e3,3543048,3545096,3547144,3549192,3551240,3553288,3555336,3557384,3559432,3561480,3563528,3565576,3567624,3569672,3571720,3573768,3575816,3577864,3579912,3581960,3584008,3586056,3588104,3590152,3592200,3594248,3596296,3598344,3600392,3602440,3604488,3606536,3608584,3610632,3612680,3614728,3616776,3618824,3620872,3622920,3624968,3627016,3629064,3631112,3633160,3635208,3637256,3639304,3641352,3643400,3645448,3647496,3649544,3651592,3653640,3655688,3657736,3659784,3661832,3663880,3665928,3667976,3670024,3672072,3674120,3676168,3678216,3680264,3682312,3684360,3686408,3688456,3690504,3692552,3694600,3696648,3698696,3700744,3702792,3704840,3706888,3708936,3710984,3713032,3715080,3717128,3719176,3721224,3723272,3725320,3727368,3729416,3731464,3733512,3735560,3737608,3739656,3741704,3743752,3745800,3747848,3749896,3751944,3753992,3756040,3758088,3760136,3762184,3764232,3766280,3768328,3770376,3772424,3774472,3776520,3778568,3780616,3782664,3784712,3786760,3788808,3790856,3792904,3794952,3797e3,3799048,3801096,3803144,3805192,3807240,3809288,3811336,3813384,3815432,3817480,3819528,3821576,3823624,3825672,3827720,3829768,3831816,3833864,3835912,3837960,3840008,3842056,3844104,3846152,3848200,3850248,3852296,3854344,3856392,3858440,3860488,3862536,3864584,3866632,3868680,3870728,3872776,3874824,3876872,3878920,3880968,3883016,3885064,3887112,3889160,3891208,3893256,3895304,3897352,3899400,3901448,3903496,3905544,3907592,3909640,3911688,3913736,3915784,3917832,3919880,3921928,3923976,3926024,3928072,3930120,3932168,3934216,3936264,3938312,3940360,3942408,3944456,3946504,3948552,3950600,3952648,3954696,3956744,3958792,3960840,3962888,3964936,3966984,3969032,3971080,3973128,3975176,3977224,3979272,3981320,3983368,3985416,3987464,3989512,3991560,3993608,3995656,3997704,3999752,4001800,4003848,4005896,4007944,4009992,4012040,4014088,4016136,4018184,4020232,4022280,4024328,4026376,4028424,4030472,4032520,4034568,4036616,4038664,4040712,4042760,4044808,4046856,4048904,4050952,4053e3,4055048,4057096,4059144,4061192,4063240],sizessuccesses:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};i.data=o,n("object"==typeof t.LZ4,"LZ4 not present - was your app build with  -s LZ4=1  ?"),t.LZ4.loadPackage({metadata:e,compressedData:i},!1),t.removeRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_id.data")}t.FS_createPath("/","root",!0,!0),t.FS_createPath("/root","module_id",!0,!0),t.FS_createPath("/root/module_id","trained_models",!0,!0),t.addRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_id.data"),t.preloadResults||(t.preloadResults={}),t.preloadResults["/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_id.data"]={fromCache:!1},s?(r(s),s=null):a=r}s||function(e,r,o,i){if("object"!=typeof process||"object"!=typeof process.versions||"string"!=typeof process.versions.node){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onprogress=function(n){var o=e,i=r;if(n.total&&(i=n.total),n.loaded){a.addedTotal?t.dataFileDownloads[o].loaded=n.loaded:(a.addedTotal=!0,t.dataFileDownloads||(t.dataFileDownloads={}),t.dataFileDownloads[o]={loaded:n.loaded,total:i});var s=0,c=0,d=0;for(var l in t.dataFileDownloads){var u=t.dataFileDownloads[l];s+=u.total,c+=u.loaded,d++}s=Math.ceil(s*t.expectedDataFileDownloads/d),t.setStatus&&t.setStatus("Downloading data... ("+c+"/"+s+")")}else t.dataFileDownloads||t.setStatus&&t.setStatus("Downloading data...")},a.onerror=function(t){throw new Error("NetworkError for: "+e)},a.onload=function(e){if(!(200==a.status||304==a.status||206==a.status||0==a.status&&a.response))throw new Error(a.statusText+" : "+a.responseURL);var t=a.response;o(t)},a.send(null)}else n(9061).readFile(e,(function(e,t){e?i(e):o(t.buffer)}))}(t.anyline.__any_module_loc_f(o),i,(function(e){a?(a(e),a=null):s=e}),(function(e){console.error("package error:",e)})),t.calledRun?c():(t.preRun||(t.preRun=[]),t.preRun.push(c))}({files:[{filename:"/root/module_id/anyline_driving_license.ale",start:0,end:251488},{filename:"/root/module_id/mrz_scanning.ale",start:251488,end:639212},{filename:"/root/module_id/main_id_scanner.ale",start:639212,end:661540},{filename:"/root/module_id/anyline_german_id_front.ale",start:661540,end:792304},{filename:"/root/module_id/trained_models/IDDe.any",start:792304,end:1441960},{filename:"/root/module_id/trained_models/DL_AT.any",start:1441960,end:2091616},{filename:"/root/module_id/trained_models/IDDeSticker.any",start:2091616,end:2741288},{filename:"/root/module_id/trained_models/OCRb.any",start:2741288,end:3158960},{filename:"/root/module_id/trained_models/USNr.any",start:3158960,end:4063672}],remote_package_size:4067776,package_uuid:"2f27ddfd-295f-4d0e-8b78-343e21d808c7"})),"METER"==t.anyline.__any_module_id.toUpperCase()&&((t=void 0!==e?e:{}).expectedDataFileDownloads||(t.expectedDataFileDownloads=0),t.expectedDataFileDownloads++,function(e){"object"==typeof window?window.encodeURIComponent(window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/"):"undefined"==typeof process&&"undefined"!=typeof location&&encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/");var r="data_meter.data";"function"!=typeof t.locateFilePackage||t.locateFile||(t.locateFile=t.locateFilePackage,O("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));var o=t.locateFile?t.locateFile(r,""):r,i=e.remote_package_size;e.package_uuid;var a=null,s=t.getPreloadedPackage?t.getPreloadedPackage(o,i):null;function c(){function n(e,t){if(!e)throw t+(new Error).stack}function r(r){n(r,"Loading data file failed."),n(r instanceof ArrayBuffer,"bad input to processPackageData");var o=new Uint8Array(r),i={data:null,cachedOffset:11039736,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[0,2048,4096,6144,8192,10240,12288,14336,16384,18432,20480,22528,24576,26624,28672,30720,32768,34816,36864,38912,40960,43008,45056,47104,49152,51200,53248,55296,57344,59392,61440,63488,65536,67584,69632,71680,73728,75776,77824,79872,81920,83968,86016,88064,90112,92160,94208,96256,98304,100352,102400,104448,106496,108544,110592,112640,114688,116736,118784,120832,122880,124928,126976,129024,131072,133120,135168,137216,139264,141312,143360,145408,147456,149504,151552,153600,155648,157696,159744,161792,163840,165888,167936,169984,172032,174080,176128,178176,180224,182272,184320,186368,188416,190464,192512,194560,196608,198656,200704,202752,204800,206848,208896,210944,212992,215040,217088,219136,221184,223232,225280,227328,229376,231424,233472,235520,237568,239616,241664,243712,245760,247808,249856,251904,253952,256e3,258048,260096,262144,264192,266240,268288,270336,272384,274432,276480,278528,280576,282624,284672,286720,288768,290816,292864,294912,296960,299008,301056,303104,305152,307200,309248,311296,313344,315392,317440,319488,321536,323584,325632,327680,329728,331776,333824,335872,337920,339968,342016,344064,346112,348160,350208,352256,354304,356352,358400,360448,362496,364544,366592,368640,370688,372736,374784,376832,378880,380928,382976,385024,387072,389120,391168,393216,395264,397312,399360,401408,403456,405504,407552,409600,411648,413696,415744,417792,419840,421888,423936,425984,428032,430080,432128,434176,436224,438272,440320,442368,444416,446464,448512,450560,452608,454656,456704,458752,460800,462848,464896,466944,468992,471040,473088,475136,477184,479232,481280,483328,485376,487424,489472,491520,493568,495616,497664,499712,501760,503808,505856,507904,509952,512e3,514048,516096,518144,520192,522240,524288,526336,528384,530432,532480,534528,536576,538624,540672,542720,544768,546816,548864,550912,552960,555008,557056,559104,561152,563200,565248,567296,569344,571392,573440,575488,577536,579584,581632,583680,585728,587776,589824,591872,593920,595968,598016,600064,602112,604160,606208,608256,610304,612352,614400,616448,618496,620544,622592,624640,626688,628736,630784,632832,634880,636928,638976,641024,643072,645120,647168,649216,651264,653312,655360,657408,659456,661504,663552,665600,667648,669696,671744,673792,675840,677888,679936,681984,684032,686080,688128,690176,692224,694272,696320,698368,700416,702464,704512,706560,708608,710656,712704,714752,716800,718848,720896,722944,724992,727040,729088,731136,733184,735232,737280,739328,741376,743424,745472,747520,749568,751616,753664,755712,757760,759808,761856,763904,765952,768e3,770048,772096,774144,776192,778240,780288,782336,784384,786432,788480,790528,792576,794624,796672,798720,800768,802816,804864,806912,808960,811008,813056,815104,817152,819200,821248,823296,825344,827392,829440,831488,833536,835584,837632,839680,841728,843776,845824,847872,849920,851968,854016,856064,858112,860160,862208,864256,866304,868352,870400,872448,874496,876544,878592,880640,882688,884736,886784,888832,890880,892928,894976,897024,899072,901120,903168,905216,907264,909312,911360,913408,915456,917504,919552,921600,923648,925696,927744,929792,931840,933888,935936,937984,940032,942080,944128,946176,948224,950272,952320,954368,956416,958464,960512,962560,964608,966656,968704,970752,972800,974848,976896,978944,980992,983040,985088,987136,989184,991232,993280,995328,997376,999424,1001472,1003520,1005568,1007616,1009664,1011712,1013760,1015808,1017856,1019904,1021952,1024e3,1026048,1028096,1030144,1032192,1034240,1036288,1038336,1040384,1042432,1044480,1046528,1048576,1050624,1052672,1054720,1056768,1058816,1060864,1062912,1064960,1067008,1069056,1071104,1073152,1075200,1077248,1079296,1081344,1083392,1085440,1087488,1089536,1091584,1093632,1095680,1097728,1099776,1101824,1103872,1105920,1107968,1110016,1112064,1114112,1116160,1118208,1120256,1122304,1124352,1126400,1128448,1130496,1132544,1134592,1136640,1138688,1140736,1142784,1144832,1146880,1148928,1150976,1153024,1155072,1157120,1159168,1161216,1163264,1165312,1167360,1169408,1171456,1173504,1175552,1177600,1179648,1181696,1183744,1185792,1187840,1189888,1191936,1193984,1196032,1198080,1200128,1202176,1204224,1206272,1208320,1210368,1212416,1214464,1216512,1218560,1220608,1222656,1224704,1226752,1228800,1230848,1232896,1234944,1236992,1239040,1241088,1243136,1245184,1247232,1249280,1251328,1253376,1255424,1257472,1259520,1261568,1263616,1265664,1267712,1269760,1271808,1273856,1275904,1277952,128e4,1282048,1284096,1286144,1288192,1290240,1292288,1294336,1296384,1298432,1300480,1302528,1304576,1306624,1308672,1310720,1312768,1314816,1316864,1318912,1320960,1323008,1325056,1327104,1329152,1331200,1333248,1335296,1337344,1339392,1341440,1343488,1345536,1347584,1349632,1351680,1353728,1355776,1357824,1359872,1361920,1363968,1366016,1368064,1370112,1372160,1374208,1376256,1378304,1380352,1382400,1384448,1386496,1388544,1390592,1392640,1394688,1396736,1398784,1400832,1402880,1404928,1406976,1409024,1411072,1413120,1415168,1417216,1419264,1421312,1423360,1425408,1427456,1429504,1431552,1433600,1435648,1437696,1439744,1441792,1443840,1445888,1447936,1449984,1452032,1454080,1456128,1458176,1460224,1462272,1464320,1466368,1468416,1470464,1472512,1474560,1476608,1478656,1480704,1482752,1484800,1486848,1488896,1490944,1492992,1495040,1497088,1499136,1501184,1503232,1505280,1507328,1509376,1511424,1513472,1515520,1517568,1519616,1521664,1523712,1525760,1527808,1529856,1531904,1533952,1536e3,1538048,1540096,1542144,1544192,1546240,1548288,1550336,1552384,1554432,1556480,1558528,1560576,1562624,1564672,1566720,1568768,1570816,1572864,1574912,1576960,1579008,1581056,1583104,1585152,1587200,1589248,1591296,1593344,1595392,1597440,1599488,1601536,1603584,1605632,1607680,1609728,1611776,1613824,1615872,1617920,1619968,1622016,1624064,1626112,1628160,1630208,1632256,1634304,1636352,1638400,1640448,1642496,1644544,1646592,1648640,1650688,1652736,1654784,1656832,1658880,1660928,1662976,1665024,1667072,1669120,1671168,1673216,1675264,1677312,1679360,1681408,1683456,1685504,1687552,1689600,1691648,1693696,1695744,1697792,1699840,1701888,1703936,1705984,1708032,1710080,1712128,1714176,1716224,1718272,1720320,1722368,1724416,1726464,1728512,1730560,1732608,1734656,1736704,1738752,1740800,1742848,1744896,1746944,1748992,1751040,1753088,1755136,1757184,1759232,1761280,1763328,1765376,1767424,1769472,1771520,1773568,1775616,1777664,1779712,1781760,1783808,1785856,1787904,1789952,1792e3,1794048,1796096,1798144,1800192,1802240,1804288,1806336,1808384,1810432,1812480,1814528,1816576,1818624,1820672,1822720,1824768,1826816,1828864,1830912,1832960,1835008,1837056,1839104,1841152,1843200,1845248,1847296,1849344,1851392,1853440,1855488,1857536,1859584,1861632,1863680,1865728,1867776,1869824,1871872,1873920,1875968,1878016,1880064,1882112,1884160,1886208,1888256,1890304,1892352,1894400,1896448,1898496,1900544,1902592,1904640,1906688,1908736,1910784,1912832,1914880,1916928,1918976,1921024,1923072,1925120,1927168,1929216,1931264,1933312,1935360,1937408,1939456,1941504,1943552,1945600,1947648,1949696,1951744,1953792,1955840,1957888,1959936,1961984,1964032,1966080,1968128,1970176,1972224,1974272,1976320,1978368,1980416,1982464,1984512,1986560,1988608,1990656,1992704,1994752,1996800,1998848,2000896,2002944,2004992,2007040,2009088,2011136,2013184,2015232,2017280,2019328,2021376,2023424,2025472,2027520,2029568,2031616,2033664,2035712,2037760,2039808,2041856,2043904,2045952,2048e3,2050048,2052096,2054144,2056192,2058240,2060288,2062336,2064384,2066432,2068480,2070528,2072576,2074624,2076672,2078720,2080768,2082816,2084864,2086912,2088960,2091008,2093056,2095104,2097152,2099200,2101248,2103296,2105344,2107392,2109440,2111488,2113536,2115584,2117632,2119680,2121728,2123776,2125824,2127872,2129920,2131968,2134016,2136064,2138112,2140160,2142208,2144256,2146304,2148352,2150400,2152448,2154496,2156544,2158592,2160640,2162688,2164736,2166784,2168832,2170880,2172928,2174976,2177024,2179072,2181120,2183168,2185216,2187264,2189312,2191360,2193408,2195456,2197504,2199552,2201600,2203648,2205696,2207744,2209792,2211840,2213888,2215936,2217984,2220032,2222080,2224128,2226176,2228224,2230272,2232320,2234368,2236416,2238464,2240512,2242560,2244608,2246656,2248704,2250752,2252800,2254848,2256896,2258944,2260992,2263040,2265088,2267136,2269184,2271232,2273280,2275328,2277376,2279424,2281472,2283520,2285568,2287616,2289664,2291712,2293760,2295808,2297856,2299904,2301952,2304e3,2306048,2308096,2310144,2312192,2314240,2316288,2318336,2320384,2322432,2324480,2326528,2328576,2330624,2332672,2334720,2336768,2338816,2340864,2342912,2344960,2347008,2349056,2351104,2353152,2355200,2357248,2359296,2361344,2363392,2365440,2367488,2369536,2371584,2373632,2375680,2377728,2379776,2381824,2383872,2385920,2387968,2390016,2392064,2394112,2396160,2398208,2400256,2402304,2404352,2406400,2408448,2410496,2412544,2414592,2416640,2418688,2420736,2422784,2424832,2426880,2428928,2430976,2433024,2435072,2437120,2439168,2441216,2443264,2445312,2447360,2449408,2451456,2453504,2455552,2457600,2459648,2461696,2463744,2465792,2467840,2469888,2471936,2473984,2476032,2478080,2480128,2482176,2484224,2486272,2488320,2490368,2492416,2494464,2496512,2498560,2500608,2502656,2504704,2506752,2508800,2510848,2512896,2514944,2516992,2519040,2521088,2523136,2525184,2527232,2529280,2531328,2533376,2535424,2537472,2539520,2541568,2543616,2545664,2547712,2549760,2551808,2553856,2555904,2557952,256e4,2562048,2564096,2566144,2568192,2570240,2572288,2574336,2576384,2578432,2580480,2582528,2584576,2586624,2588672,2590720,2592768,2594816,2596864,2598912,2600960,2603008,2605056,2607104,2609152,2611200,2613248,2615296,2617344,2619392,2621440,2623488,2625536,2627584,2629632,2631680,2633728,2635776,2637824,2639872,2641920,2643968,2646016,2648064,2650112,2652160,2654208,2656256,2658304,2660352,2662400,2664448,2666496,2668544,2670592,2672640,2674688,2676736,2678784,2680832,2682880,2684928,2686976,2689024,2691072,2693120,2695168,2697216,2699264,2701312,2703360,2705408,2707456,2709504,2711552,2713600,2715648,2717696,2719744,2721792,2723840,2725888,2727936,2729984,2732032,2734080,2736128,2738176,2740224,2742272,2744320,2746368,2748416,2750464,2752512,2754560,2756608,2758656,2760704,2762752,2764800,2766848,2768896,2770944,2772992,2775040,2777088,2779136,2781184,2783232,2785280,2787328,2789376,2791424,2793472,2795520,2797568,2799616,2801664,2803712,2805760,2807808,2809856,2811904,2813952,2816e3,2818048,2820096,2822144,2824192,2826240,2828288,2830336,2832384,2834432,2836480,2838528,2840576,2842624,2844672,2846720,2848768,2850816,2852864,2854912,2856960,2859008,2861056,2863104,2865152,2867200,2869248,2871296,2873344,2875392,2877440,2879488,2881536,2883584,2885632,2887680,2889728,2891776,2893824,2895872,2897920,2899968,2902016,2904064,2906112,2908160,2910208,2912256,2914304,2916352,2918400,2920448,2922496,2924544,2926592,2928640,2930688,2932736,2934784,2936832,2938880,2940928,2942976,2945024,2947072,2949120,2951168,2953216,2955264,2957312,2959360,2961408,2963456,2965504,2967552,2969600,2971648,2973696,2975744,2977792,2979840,2981888,2983936,2985984,2988032,2990080,2992128,2994176,2996224,2998272,3000320,3002368,3004416,3006464,3008512,3010560,3012608,3014656,3016704,3018752,3020800,3022848,3024896,3026944,3028992,3031040,3033088,3035136,3037184,3039232,3041280,3043328,3045376,3047424,3049472,3051520,3053568,3055616,3057664,3059712,3061760,3063808,3065856,3067904,3069952,3072e3,3074048,3076096,3078144,3080192,3082240,3084288,3086336,3088384,3090432,3092480,3094528,3096576,3098624,3100672,3102720,3104768,3106816,3108864,3110912,3112960,3115008,3117056,3119104,3121152,3123200,3125248,3127296,3129344,3131392,3133440,3135488,3137536,3139584,3141632,3143680,3145728,3147776,3149824,3151872,3153920,3155968,3158016,3160064,3162112,3164160,3166208,3168256,3170304,3172352,3174400,3176448,3178496,3180544,3182592,3184640,3186688,3188736,3190784,3192832,3194880,3196928,3198976,3201024,3203072,3205120,3207168,3209216,3211264,3213312,3215360,3217408,3219456,3221504,3223552,3225600,3227648,3229696,3231744,3233792,3235840,3237888,3239936,3241984,3244032,3246080,3248128,3250176,3252224,3254272,3256320,3258368,3260416,3262464,3264512,3266560,3268608,3270656,3272704,3274752,3276800,3278848,3280896,3282944,3284992,3287040,3289088,3291136,3293184,3295232,3297280,3299328,3301376,3303424,3305472,3307520,3309568,3311616,3313664,3315712,3317760,3319808,3321856,3323904,3325952,3328e3,3330048,3332096,3334144,3336192,3338240,3340288,3342336,3344384,3346432,3348480,3350528,3352576,3354624,3356672,3358720,3360768,3362816,3364864,3366912,3368960,3371008,3373056,3375104,3377152,3379200,3381248,3383296,3385344,3387392,3389440,3391488,3393536,3395584,3397632,3399680,3401728,3403776,3405824,3407872,3409920,3411968,3414016,3416064,3418112,3420160,3422208,3424256,3426304,3428352,3430400,3432448,3434496,3436544,3438592,3440640,3442688,3444736,3446784,3448832,3450880,3452928,3454976,3457024,3459072,3461120,3463168,3465216,3467264,3469312,3471360,3473408,3475456,3477504,3479552,3481600,3483648,3485696,3487744,3489792,3491840,3493888,3495936,3497984,3500032,3502080,3504128,3506176,3508224,3510272,3512320,3514368,3516416,3518464,3520512,3522560,3524608,3526656,3528704,3530752,3532800,3534848,3536896,3538944,3540992,3543040,3545088,3547136,3549184,3551232,3553280,3555328,3557376,3559424,3561472,3563520,3565568,3567616,3569664,3571712,3573760,3575808,3577856,3579904,3581952,3584e3,3586048,3588096,3590144,3592192,3594240,3596288,3598336,3600384,3602432,3604480,3606528,3608576,3610624,3612672,3614720,3616768,3618816,3620864,3622912,3624960,3627008,3629056,3631104,3633152,3635200,3637248,3639296,3641344,3643392,3645440,3647488,3649536,3651584,3653632,3655680,3657728,3659776,3661824,3663872,3665920,3667968,3670016,3672064,3674112,3676160,3678208,3680256,3682304,3684352,3686400,3688448,3690496,3692544,3694592,3696640,3698688,3700736,3702784,3704832,3706880,3708928,3710976,3713024,3715072,3717120,3719168,3721216,3723264,3725312,3727360,3729408,3731456,3733504,3735552,3737600,3739648,3741696,3743744,3745792,3747840,3749888,3751936,3753984,3756032,3758080,3760128,3762176,3764224,3766272,3768320,3770368,3772416,3774464,3776512,3778560,3780608,3782656,3784704,3786752,3788800,3790848,3792896,3794944,3796992,3799040,3801088,3803136,3805184,3807232,3809280,3811328,3813376,3815424,3817472,3819520,3821568,3823616,3825664,3827712,3829760,3831808,3833856,3835904,3837952,384e4,3842048,3844096,3846144,3848192,3850240,3852288,3854336,3856384,3858432,3860480,3862528,3864576,3866624,3868672,3870720,3872768,3874816,3876864,3878912,3880960,3883008,3885056,3887104,3889152,3891200,3893248,3895296,3897344,3899392,3901440,3903488,3905536,3907584,3909632,3911680,3913728,3915776,3917824,3919872,3921920,3923968,3926016,3928064,3930112,3932160,3934208,3936256,3938304,3940352,3942400,3944448,3946496,3948544,3950592,3952640,3954688,3956736,3958784,3960832,3962880,3964928,3966976,3969024,3971072,3973120,3975168,3977216,3979264,3981312,3983360,3985408,3987456,3989504,3991552,3993600,3995648,3997696,3999744,4001792,4003840,4005888,4007936,4009984,4012032,4014080,4016128,4018176,4020224,4022272,4024320,4026368,4028416,4030464,4032512,4034560,4036608,4038656,4040704,4042752,4044800,4046848,4048896,4050944,4052992,4055040,4057088,4059136,4061184,4063232,4065280,4067328,4069376,4071424,4073472,4075520,4077568,4079616,4081664,4083712,4085760,4087808,4089856,4091904,4093952,4096e3,4098048,4100096,4102144,4104192,4106240,4108288,4110336,4112384,4114432,4116480,4118528,4120576,4122624,4124672,4126720,4128768,4130816,4132864,4134912,4136960,4139008,4141056,4143104,4145152,4147200,4149248,4151296,4153344,4155392,4157440,4159488,4161536,4163584,4165632,4167680,4169728,4171776,4173824,4175872,4177920,4179968,4182016,4184064,4186112,4188160,4190208,4192256,4194304,4196352,4198400,4200448,4202496,4204544,4206592,4208640,4210688,4212736,4214784,4216832,4218880,4220928,4222976,4225024,4227072,4229120,4231168,4233216,4235264,4237312,4239360,4241408,4243456,4245504,4247552,4249600,4251648,4253696,4255744,4257792,4259840,4261888,4263936,4265984,4268032,4270080,4272128,4274176,4276224,4278272,4280320,4282368,4284416,4286464,4288512,4290560,4292608,4294656,4296704,4298752,4300800,4302848,4304896,4306944,4308992,4311040,4313088,4315136,4317184,4319232,4321280,4323328,4325376,4327424,4329472,4331520,4333568,4335616,4337664,4339712,4341760,4343808,4345856,4347904,4349952,4352e3,4354048,4356096,4358144,4360192,4362240,4364288,4366336,4368384,4370432,4372480,4374528,4376576,4378624,4380672,4382720,4384768,4386816,4388864,4390912,4392960,4395008,4397056,4399104,4401152,4403200,4405248,4407296,4409344,4411392,4413440,4415488,4417536,4419584,4421632,4423680,4425728,4427776,4429824,4431872,4433920,4435968,4438016,4440064,4442112,4444160,4446208,4448256,4450304,4452352,4454400,4456448,4458496,4460544,4462592,4464640,4466688,4468736,4470784,4472832,4474880,4476928,4478976,4481024,4483072,4485120,4487168,4489216,4491264,4493312,4495360,4497408,4499456,4501504,4503552,4505600,4507648,4509696,4511744,4513792,4515840,4517888,4519936,4521984,4524032,4526080,4528128,4530176,4532224,4534272,4536320,4538368,4540416,4542464,4544512,4546560,4548608,4550656,4552704,4554752,4556800,4558848,4560896,4562944,4564992,4567040,4569088,4571136,4573184,4575232,4577280,4579328,4581376,4583424,4585472,4587520,4589568,4591616,4593664,4595712,4597760,4599808,4601856,4603904,4605952,4608e3,4610048,4612096,4614144,4616192,4618240,4620288,4622336,4624384,4626432,4628480,4630528,4632576,4634624,4636672,4638720,4640768,4642816,4644864,4646912,4648960,4651008,4653056,4655104,4657152,4659200,4661248,4663296,4665344,4667392,4669440,4671488,4673536,4675584,4677632,4679680,4681728,4683776,4685824,4687872,4689920,4691968,4694016,4696064,4698112,4700160,4702208,4704256,4706304,4708352,4710400,4712448,4714496,4716544,4718592,4720640,4722688,4724736,4726784,4728832,4730880,4732928,4734976,4737024,4739072,4741120,4743168,4745216,4747264,4749312,4751360,4753408,4755456,4757504,4759552,4761600,4763648,4765696,4767744,4769792,4771840,4773888,4775936,4777984,4780032,4782080,4784128,4786176,4788224,4790272,4792320,4794368,4796416,4798464,4800512,4802560,4804608,4806656,4808704,4810752,4812800,4814848,4816896,4818944,4820992,4823040,4825088,4827136,4829184,4831232,4833280,4835328,4837376,4839424,4841472,4843520,4845568,4847616,4849664,4851712,4853760,4855808,4857856,4859904,4861952,4864e3,4866048,4868096,4870144,4872192,4874240,4876288,4878336,4880384,4882432,4884480,4886528,4888576,4890624,4892672,4894720,4896768,4898816,4900864,4902912,4904960,4907008,4909056,4911104,4913152,4915200,4917248,4919296,4921344,4923392,4925440,4927488,4929536,4931584,4933632,4935680,4937728,4939776,4941824,4943872,4945920,4947968,4950016,4952064,4954112,4956160,4958208,4960256,4962304,4964352,4966400,4968448,4970496,4972544,4974592,4976640,4978688,4980736,4982784,4984832,4986880,4988928,4990976,4993024,4995072,4997120,4999168,5001216,5003264,5005312,5007360,5009408,5011456,5013504,5015552,5017600,5019648,5021696,5023744,5025792,5027840,5029888,5031936,5033984,5036032,5038080,5040128,5042176,5044224,5046272,5048320,5050368,5052416,5054464,5056512,5058560,5060608,5062656,5064704,5066752,5068800,5070848,5072896,5074944,5076992,5079040,5081088,5083136,5085184,5087232,5089280,5091328,5093376,5095424,5097472,5099520,5101568,5103616,5105664,5107712,5109760,5111808,5113856,5115904,5117952,512e4,5122048,5124096,5126144,5128192,5130240,5132288,5134336,5136384,5138432,5140480,5142528,5144576,5146624,5148672,5150720,5152768,5154816,5156864,5158912,5160960,5163008,5165056,5167104,5169152,5171200,5173248,5175296,5177344,5179392,5181440,5183488,5185536,5187584,5189632,5191680,5193728,5195776,5197824,5199872,5201920,5203968,5206016,5208064,5210112,5212160,5214208,5216256,5218304,5220352,5222400,5224448,5226496,5228544,5230592,5232640,5234688,5236736,5238784,5240832,5242880,5244928,5246976,5249024,5251072,5253120,5255168,5257216,5259264,5261312,5263360,5265408,5267456,5269504,5271552,5273600,5275648,5277696,5279744,5281792,5283840,5285888,5287936,5289984,5292032,5294080,5296128,5298176,5300224,5302272,5304320,5306368,5308416,5310464,5312512,5314560,5316608,5318656,5320704,5322752,5324800,5326848,5328896,5330944,5332992,5335040,5337088,5339136,5341184,5343232,5345280,5347328,5349376,5351424,5353472,5355520,5357568,5359616,5361664,5363712,5365760,5367808,5369856,5371904,5373952,5376e3,5378048,5380096,5382144,5384192,5386240,5388288,5390336,5392384,5394432,5396480,5398528,5400576,5402624,5404672,5406720,5408768,5410816,5412864,5414912,5416960,5419008,5421056,5423104,5425152,5427200,5429248,5431296,5433344,5435392,5437440,5439488,5441536,5443584,5445632,5447680,5449728,5451776,5453824,5455872,5457920,5459968,5462016,5464064,5466112,5468160,5470208,5472256,5474304,5476352,5478400,5480448,5482496,5484544,5486592,5488640,5490688,5492736,5494784,5496832,5498880,5500928,5502976,5505024,5507072,5509120,5511168,5513216,5515264,5517312,5519360,5521408,5523456,5525504,5527552,5529600,5531648,5533696,5535744,5537792,5539840,5541888,5543936,5545984,5548032,5550080,5552128,5554176,5556224,5558272,5560320,5562368,5564416,5566464,5568512,5570560,5572608,5574656,5576704,5578752,5580800,5582848,5584896,5586944,5588992,5591040,5593088,5595136,5597184,5599232,5601280,5603328,5605376,5607424,5609472,5611520,5613568,5615616,5617664,5619712,5621760,5623808,5625856,5627904,5629952,5632e3,5634048,5636096,5638144,5640192,5642240,5644288,5646336,5648384,5650432,5652480,5654528,5656576,5658624,5660672,5662720,5664768,5666816,5668864,5670912,5672960,5675008,5677056,5679104,5681152,5683200,5685248,5687296,5689344,5691392,5693440,5695488,5697536,5699584,5701632,5703680,5705728,5707776,5709824,5711872,5713920,5715968,5718016,5720064,5722112,5724160,5726208,5728256,5730304,5732352,5734400,5736448,5738496,5740544,5742592,5744640,5746688,5748736,5750784,5752832,5754880,5756928,5758976,5761024,5763072,5765120,5767168,5769216,5771264,5773312,5775360,5777408,5779456,5781504,5783552,5785600,5787648,5789696,5791744,5793792,5795840,5797888,5799936,5801984,5804032,5806080,5808128,5810176,5812224,5814272,5816320,5818368,5820416,5822464,5824512,5826560,5828608,5830656,5832704,5834752,5836800,5838848,5840896,5842944,5844992,5847040,5849088,5851136,5853184,5855232,5857280,5859328,5861376,5863424,5865472,5867520,5869568,5871616,5873664,5875712,5877760,5879808,5881856,5883904,5885952,5888e3,5890048,5892096,5894144,5896192,5898240,5900288,5902336,5904384,5906432,5908480,5910528,5912576,5914624,5916672,5918720,5920768,5922816,5924864,5926912,5928960,5931008,5933056,5935104,5937152,5939200,5941248,5943296,5945344,5947392,5949440,5951488,5953536,5955584,5957632,5959680,5961728,5963776,5965824,5967872,5969920,5971968,5974016,5976064,5978112,5980160,5982208,5984256,5986304,5988352,5990400,5992448,5994496,5996544,5998592,6000640,6002688,6004736,6006784,6008832,6010880,6012928,6014976,6017024,6019072,6021120,6023168,6025216,6027264,6029312,6031360,6033408,6035456,6037504,6039552,6041600,6043648,6045696,6047744,6049792,6051840,6053888,6055936,6057984,6060032,6062080,6064128,6066176,6068224,6070272,6072320,6074368,6076416,6078464,6080512,6082560,6084608,6086656,6088704,6090752,6092800,6094848,6096896,6098944,6100992,6103040,6105088,6107136,6109184,6111232,6113280,6115328,6117376,6119424,6121472,6123520,6125568,6127616,6129664,6131712,6133760,6135808,6137856,6139904,6141952,6144e3,6146048,6148096,6150144,6152192,6154240,6156288,6158336,6160384,6162432,6164480,6166528,6168576,6170624,6172672,6174720,6176768,6178816,6180864,6182912,6184960,6187008,6189056,6191104,6193152,6195200,6197248,6199296,6201344,6203392,6205440,6207488,6209536,6211584,6213632,6215680,6217728,6219776,6221824,6223872,6225920,6227968,6230016,6232064,6234112,6236160,6238208,6240256,6242304,6244352,6246400,6248448,6250496,6252544,6254592,6256640,6258688,6260736,6262784,6264832,6266880,6268928,6270976,6273024,6275072,6277120,6279168,6281216,6283264,6285312,6287360,6289408,6291456,6293504,6295552,6297600,6299648,6301696,6303744,6305792,6307840,6309888,6311936,6313984,6316032,6318080,6320128,6322176,6324224,6326272,6328320,6330368,6332416,6334464,6336512,6338560,6340608,6342656,6344704,6346752,6348800,6350848,6352896,6354944,6356992,6359040,6361088,6363136,6365184,6367232,6369280,6371328,6373376,6375424,6377472,6379520,6381568,6383616,6385664,6387712,6389760,6391808,6393856,6395904,6397952,64e5,6402048,6404096,6406144,6408192,6410240,6412288,6414336,6416384,6418432,6420480,6422528,6424576,6426624,6428672,6430720,6432768,6434816,6436864,6438912,6440960,6443008,6445056,6447104,6449152,6451200,6453248,6455296,6457344,6459392,6461440,6463488,6465536,6467584,6469632,6471680,6473728,6475776,6477824,6479872,6481920,6483968,6486016,6488064,6490112,6492160,6494208,6496256,6498304,6500352,6502400,6504448,6506496,6508544,6510592,6512640,6514688,6516736,6518784,6520832,6522880,6524928,6526976,6529024,6531072,6533120,6535168,6537216,6539264,6541312,6543360,6545408,6547456,6549504,6551552,6553600,6555648,6557696,6559744,6561792,6563840,6565888,6567936,6569984,6572032,6574080,6576128,6578176,6580224,6582272,6584320,6586368,6588416,6590464,6592512,6594560,6596608,6598656,6600704,6602752,6604800,6606848,6608896,6610944,6612992,6615040,6617088,6619136,6621184,6623232,6625280,6627328,6629376,6631424,6633472,6635520,6637568,6639616,6641664,6643712,6645760,6647808,6649856,6651904,6653952,6656e3,6658048,6660096,6662144,6664192,6666240,6668288,6670336,6672384,6674432,6676480,6678528,6680576,6682624,6684672,6686720,6688768,6690816,6692864,6694912,6696960,6699008,6701056,6703104,6705152,6707200,6709248,6711296,6713344,6715392,6717440,6719488,6721536,6723584,6725632,6727680,6729728,6731776,6733824,6735872,6737920,6739968,6742016,6744064,6746112,6748160,6750208,6752256,6754304,6756352,6758400,6760448,6762496,6764544,6766592,6768640,6770688,6772736,6774784,6776832,6778880,6780928,6782976,6785024,6787072,6789120,6791168,6793216,6795264,6797312,6799360,6801408,6803456,6805504,6807552,6809600,6811648,6813696,6815744,6817792,6819840,6821888,6823936,6825984,6828032,6830080,6832128,6834176,6836224,6838272,6840320,6842368,6844416,6846464,6848512,6850560,6852608,6854656,6856704,6858752,6860800,6862848,6864896,6866944,6868992,6871040,6873088,6875136,6877184,6879232,6881280,6883328,6885376,6887424,6889472,6891520,6893568,6895616,6897664,6899712,6901760,6903808,6905856,6907904,6909952,6912e3,6914048,6916096,6918144,6920192,6922240,6924288,6926336,6928384,6930432,6932480,6934528,6936576,6938624,6940672,6942720,6944768,6946816,6948864,6950912,6952960,6955008,6957056,6959104,6961152,6963200,6965248,6967296,6969344,6971392,6973440,6975488,6977536,6979584,6981632,6983680,6985728,6987776,6989824,6991872,6993920,6995968,6998016,7000064,7002112,7004160,7006208,7008256,7010304,7012352,7014400,7016448,7018496,7020544,7022592,7024640,7026688,7028736,7030784,7032832,7034880,7036928,7038976,7041024,7043072,7045120,7047168,7049216,7051264,7053312,7055360,7057408,7059456,7061504,7063552,7065600,7067648,7069696,7071744,7073792,7075840,7077888,7079936,7081984,7084032,7086080,7088128,7090176,7092224,7094272,7096320,7098368,7100416,7102464,7104512,7106560,7108608,7110656,7112704,7114752,7116800,7118848,7120896,7122944,7124992,7127040,7129088,7131136,7133184,7135232,7137280,7139328,7141376,7143424,7145472,7147520,7149568,7151616,7153664,7155712,7157760,7159808,7161856,7163904,7165952,7168e3,7170048,7172096,7174144,7176192,7178240,7180288,7182336,7184384,7186432,7188480,7190528,7192576,7194624,7196672,7198720,7200768,7202816,7204864,7206912,7208960,7211008,7213056,7215104,7217152,7219200,7221248,7223296,7225344,7227392,7229440,7231488,7233536,7235584,7237632,7239680,7241728,7243776,7245824,7247872,7249920,7251968,7254016,7256064,7258112,7260160,7262208,7264256,7266304,7268352,7270400,7272448,7274496,7276544,7278592,7280640,7282688,7284736,7286784,7288832,7290880,7292928,7294976,7297024,7299072,7301120,7303168,7305216,7307264,7309312,7311360,7313408,7315456,7317504,7319552,7321600,7323648,7325696,7327744,7329792,7331840,7333888,7335936,7337984,7340032,7342080,7344128,7346176,7348224,7350272,7352320,7354368,7356416,7358464,7360512,7362560,7364608,7366656,7368704,7370752,7372800,7374848,7376896,7378944,7380992,7383040,7385088,7387136,7389184,7391232,7393280,7395328,7397376,7399424,7401472,7403520,7405568,7407616,7409664,7411712,7413760,7415808,7417856,7419904,7421952,7424e3,7426048,7428096,7430144,7432192,7434240,7436288,7438336,7440384,7442432,7444480,7446528,7448576,7450624,7452672,7454720,7456768,7458816,7460864,7462912,7464960,7467008,7469056,7471104,7473152,7475200,7477248,7479296,7481344,7483392,7485440,7487488,7489536,7491584,7493632,7495680,7497728,7499776,7501824,7503872,7505920,7507968,7510016,7512064,7514112,7516160,7518208,7520256,7522304,7524352,7526400,7528448,7530496,7532544,7534592,7536640,7538688,7540736,7542784,7544832,7546880,7548928,7550976,7553024,7555072,7557120,7559168,7561216,7563264,7565312,7567360,7569408,7571456,7573504,7575552,7577600,7579648,7581696,7583744,7585792,7587840,7589888,7591936,7593984,7596032,7598080,7600128,7602176,7604224,7606272,7608320,7610368,7612416,7614464,7616512,7618560,7620608,7622656,7624704,7626752,7628800,7630848,7632896,7634944,7636992,7639040,7641088,7643136,7645184,7647232,7649280,7651328,7653376,7655424,7657472,7659520,7661568,7663616,7665664,7667712,7669760,7671808,7673856,7675904,7677952,768e4,7682048,7684096,7686144,7688192,7690240,7692288,7694336,7696384,7698432,7700480,7702528,7704576,7706624,7708672,7710720,7712768,7714816,7716864,7718912,7720960,7723008,7725056,7727104,7729152,7731200,7733248,7735296,7737344,7739392,7741440,7743488,7745536,7747584,7749632,7751680,7753728,7755776,7757824,7759872,7761920,7763968,7766016,7768064,7770112,7772160,7774208,7776256,7778304,7780352,7782400,7784448,7786496,7788544,7790592,7792640,7794688,7796736,7798784,7800832,7802880,7804928,7806976,7809024,7811072,7813120,7815168,7817216,7819264,7821312,7823360,7825408,7827456,7829504,7831552,7833600,7835648,7837696,7839744,7841792,7843840,7845888,7847936,7849984,7852032,7854080,7856128,7858176,7860224,7862272,7864320,7866368,7868416,7870464,7872512,7874560,7876608,7878656,7880704,7882752,7884800,7886848,7888896,7890944,7892992,7895040,7897088,7899136,7901184,7903232,7905280,7907328,7909376,7911424,7913472,7915520,7917568,7919616,7921664,7923712,7925760,7927808,7929856,7931904,7933952,7936e3,7938048,7940096,7942144,7944192,7946240,7948288,7950336,7952384,7954432,7956480,7958528,7960576,7962624,7964672,7966720,7968768,7970816,7972864,7974912,7976960,7979008,7981056,7983104,7985152,7987200,7989248,7991296,7993344,7995392,7997440,7999488,8001536,8003584,8005632,8007680,8009728,8011776,8013824,8015872,8017920,8019968,8022016,8024064,8026112,8028160,8030208,8032256,8034304,8036352,8038400,8040448,8042496,8044544,8046592,8048640,8050688,8052736,8054784,8056832,8058880,8060928,8062976,8065024,8067072,8069120,8071168,8073216,8075264,8077312,8079360,8081408,8083456,8085504,8087552,8089600,8091648,8093696,8095744,8097792,8099840,8101888,8103936,8105984,8108032,8110080,8112128,8114176,8116224,8118272,8120320,8122368,8124416,8126464,8128512,8130560,8132608,8134656,8136704,8138752,8140800,8142848,8144896,8146944,8148992,8151040,8153088,8155136,8157184,8159232,8161280,8163328,8165376,8167424,8169472,8171520,8173568,8175616,8177664,8179712,8181760,8183808,8185856,8187904,8189952,8192e3,8194048,8196096,8198144,8200192,8202240,8204288,8206336,8208384,8210432,8212480,8214528,8216576,8218624,8220672,8222720,8224768,8226816,8228864,8230912,8232960,8235008,8237056,8239104,8241152,8243200,8245248,8247296,8249344,8251392,8253440,8255488,8257536,8259584,8261632,8263680,8265728,8267776,8269824,8271872,8273920,8275968,8278016,8280064,8282112,8284160,8286208,8288256,8290304,8292352,8294400,8296448,8298496,8300544,8302592,8304640,8306688,8308736,8310784,8312832,8314880,8316928,8318976,8321024,8323072,8325120,8327168,8329216,8331264,8333312,8335360,8337408,8339456,8341504,8343552,8345600,8347648,8349696,8351744,8353792,8355840,8357888,8359936,8361984,8364032,8366080,8368128,8370176,8372224,8374272,8376320,8378368,8380416,8382464,8384512,8386560,8388608,8390656,8392704,8394752,8396800,8398848,8400896,8402944,8404992,8407040,8409088,8411136,8413184,8415232,8417280,8419328,8421376,8423424,8425472,8427520,8429568,8431616,8433664,8435712,8437760,8439808,8441856,8443904,8445952,8448e3,8450048,8452096,8454144,8456192,8458240,8460288,8462336,8464384,8466432,8468480,8470528,8472576,8474624,8476672,8478720,8480768,8482816,8484864,8486912,8488960,8491008,8493056,8495104,8497152,8499200,8501248,8503296,8505344,8507392,8509440,8511488,8513536,8515584,8517632,8519680,8521728,8523776,8525824,8527872,8529920,8531968,8534016,8536064,8538112,8540160,8542208,8544256,8546304,8548352,8550400,8552448,8554496,8556544,8558592,8560640,8562688,8564736,8566784,8568832,8570880,8572928,8574976,8577024,8579072,8581120,8583168,8585216,8587264,8589312,8591360,8593408,8595456,8597504,8599552,8601600,8603648,8605696,8607744,8609792,8611840,8613888,8615936,8617984,8620032,8622080,8624128,8626176,8628224,8630272,8632320,8634368,8636416,8638464,8640512,8642560,8644608,8646656,8648704,8650752,8652800,8654848,8656896,8658944,8660992,8663040,8665088,8667136,8669184,8671232,8673280,8675328,8677376,8679424,8681472,8683520,8685568,8687616,8689664,8691712,8693760,8695808,8697856,8699904,8701952,8704e3,8706048,8708096,8710144,8712192,8714240,8716288,8718336,8720384,8722432,8724480,8726528,8728576,8730624,8732672,8734720,8736768,8738816,8740864,8742912,8744960,8747008,8749056,8751104,8753152,8755200,8757248,8759296,8761344,8763392,8765440,8767488,8769536,8771584,8773632,8775680,8777728,8779776,8781824,8783872,8785920,8787968,8790016,8792064,8794112,8796160,8798208,8800256,8802304,8804352,8806400,8808448,8810496,8812544,8814592,8816640,8818688,8820736,8822784,8824832,8826880,8828928,8830976,8833024,8835072,8837120,8839168,8841216,8843264,8845312,8847360,8849408,8851456,8853504,8855552,8857600,8859648,8861696,8863744,8865792,8867840,8869888,8871936,8873984,8876032,8878080,8880128,8882176,8884224,8886272,8888320,8890368,8892416,8894464,8896512,8898560,8900608,8902656,8904704,8906752,8908800,8910848,8912896,8914944,8916992,8919040,8921088,8923136,8925184,8927232,8929280,8931328,8933376,8935424,8937472,8939520,8941568,8943616,8945664,8947712,8949760,8951808,8953856,8955904,8957952,896e4,8962048,8964096,8966144,8968192,8970240,8972288,8974336,8976384,8978432,8980480,8982528,8984576,8986624,8988672,8990720,8992768,8994816,8996864,8998912,9000960,9003008,9005056,9007104,9009152,9011200,9013248,9015296,9017344,9019392,9021440,9023488,9025536,9027584,9029632,9031680,9033728,9035776,9037824,9039872,9041920,9043968,9046016,9048064,9050112,9052160,9054208,9056256,9058304,9060352,9062400,9064448,9066496,9068544,9070592,9072640,9074688,9076736,9078784,9080832,9082880,9084928,9086976,9089024,9091072,9093120,9095168,9097216,9099264,9101312,9103360,9105408,9107456,9109504,9111552,9113600,9115648,9117696,9119744,9121792,9123840,9125888,9127936,9129984,9132032,9134080,9136128,9138176,9140224,9142272,9144320,9146368,9148416,9150464,9152512,9154560,9156608,9158656,9160704,9162752,9164800,9166848,9168896,9170944,9172992,9175040,9177088,9179136,9181184,9183232,9185280,9187328,9189376,9191424,9193472,9195520,9197568,9199616,9201664,9203712,9205760,9207808,9209856,9211904,9213952,9216e3,9218048,9220096,9222144,9224192,9226240,9228288,9230336,9232384,9234432,9236480,9238528,9240576,9242624,9244672,9246720,9248768,9250816,9252864,9254912,9256960,9259008,9261056,9263104,9265152,9267200,9269248,9271296,9273344,9275392,9277440,9279488,9281536,9283584,9285632,9287680,9289728,9291776,9293824,9295872,9297920,9299968,9302016,9304064,9306112,9308160,9310208,9312256,9314304,9316352,9318400,9320448,9322496,9324544,9326592,9328640,9330688,9332736,9334784,9336832,9338880,9340928,9342976,9345024,9347072,9349120,9351168,9353216,9355264,9357312,9359360,9361408,9363456,9365504,9367552,9369600,9371648,9373696,9375744,9377792,9379840,9381888,9383936,9385984,9388032,9390080,9392128,9394176,9396224,9398272,9400320,9402368,9404416,9406464,9408512,9410560,9412608,9414656,9416704,9418752,9420800,9422848,9424896,9426944,9428992,9431040,9433088,9435136,9437184,9439232,9441280,9443328,9445376,9447424,9449472,9451520,9453568,9455616,9457664,9459712,9461760,9463808,9465856,9467904,9469952,9472e3,9474048,9476096,9478144,9480192,9482240,9484288,9486336,9488384,9490432,9492480,9494528,9496576,9498624,9500672,9502720,9504768,9506816,9508864,9510912,9512960,9515008,9517056,9519104,9521152,9523200,9525248,9527296,9529344,9531392,9533440,9535488,9537536,9539584,9541632,9543680,9545728,9547776,9549824,9551872,9553920,9555968,9558016,9560064,9562112,9564160,9566208,9568256,9570304,9572352,9574400,9576448,9578496,9580544,9582592,9584640,9586688,9588736,9590784,9592832,9594880,9596928,9598976,9601024,9603072,9605120,9607168,9609216,9611264,9613312,9615360,9617408,9619456,9621504,9623552,9625600,9627648,9629696,9631744,9633792,9635840,9637888,9639936,9641984,9644032,9646080,9648128,9650176,9652224,9654272,9656320,9658368,9660416,9662464,9664512,9666560,9668608,9670656,9672704,9674752,9676800,9678848,9680896,9682944,9684992,9687040,9689088,9691136,9693184,9695232,9697280,9699328,9701376,9703424,9705472,9707520,9709568,9711616,9713664,9715712,9717760,9719808,9721856,9723904,9725952,9728e3,9730048,9732096,9734144,9736192,9738240,9740288,9742336,9744384,9746432,9748480,9750528,9752576,9754624,9756672,9758720,9760768,9762816,9764864,9766912,9768960,9771008,9773056,9775104,9777152,9779200,9781248,9783296,9785344,9787392,9789440,9791488,9793536,9795584,9797632,9799680,9801728,9803776,9805824,9807872,9809920,9811968,9814016,9816064,9818112,9820160,9822208,9824256,9826304,9828352,9830400,9832448,9834496,9836544,9838592,9840640,9842688,9844736,9846784,9848832,9850880,9852928,9854976,9857024,9859072,9861120,9863168,9865216,9867264,9869312,9871360,9873408,9875456,9877504,9879552,9881600,9883648,9885696,9887744,9889792,9891840,9893888,9895936,9897984,9900032,9902080,9904128,9906176,9908224,9910272,9912320,9914368,9916416,9918464,9920512,9922560,9924608,9926656,9928704,9930752,9932800,9934848,9936896,9938944,9940992,9943040,9945088,9947136,9949184,9951232,9953280,9955328,9957376,9959424,9961472,9963520,9965568,9967616,9969664,9971712,9973760,9975808,9977856,9979904,9981952,9984e3,9986048,9988096,9990144,9992192,9994240,9996288,9998336,10000384,10002432,10004480,10006528,10008576,10010624,10012672,10014720,10016768,10018816,10020864,10022912,10024960,10027008,10029056,10031104,10033152,10035200,10037248,10039296,10041344,10043392,10045440,10047488,10049536,10051584,10053632,10055680,10057728,10059776,10061824,10063872,10065920,10067968,10070016,10072064,10074112,10076160,10078208,10080256,10082304,10084352,10086400,10088448,10090496,10092544,10094592,10096640,10098688,10100736,10102784,10104832,10106880,10108928,10110976,10113024,10115072,10117120,10119168,10121216,10123264,10125312,10127360,10129408,10131456,10133504,10135552,10137600,10139648,10141696,10143744,10145792,10147840,10149888,10151936,10153984,10156032,10158080,10160128,10162176,10164224,10166272,10168320,10170368,10172416,10174464,10176512,10178560,10180608,10182656,10184704,10186752,10188800,10190848,10192896,10194944,10196992,10199040,10201088,10203136,10205184,10207232,10209280,10211328,10213376,10215424,10217472,10219520,10221568,10223616,10225664,10227712,10229760,10231808,10233856,10235904,10237952,1024e4,10242048,10244096,10246144,10248192,10250240,10252288,10254336,10256384,10258432,10260480,10262528,10264576,10266624,10268672,10270720,10272768,10274816,10276864,10278912,10280960,10283008,10285056,10287104,10289152,10291200,10293248,10295296,10297344,10299392,10301440,10303488,10305536,10307584,10309632,10311680,10313728,10315776,10317824,10319872,10321920,10323968,10326016,10328064,10330112,10332160,10334208,10336256,10338304,10340352,10342400,10344448,10346496,10348544,10350592,10352640,10354688,10356736,10358784,10360832,10362880,10364928,10366976,10369024,10371072,10373120,10375168,10377216,10379264,10381312,10383360,10385408,10387456,10389504,10391552,10393600,10395648,10397696,10399744,10401792,10403840,10405888,10407936,10409984,10412032,10414080,10416128,10418176,10420224,10422272,10424320,10426368,10428416,10430464,10432512,10434560,10436608,10438656,10440704,10442752,10444800,10446848,10448896,10450944,10452992,10455040,10457088,10459136,10461184,10463232,10465280,10467328,10469376,10471424,10473472,10475520,10477568,10479616,10481664,10483712,10485760,10487808,10489856,10491904,10493952,10496e3,10498048,10500096,10502144,10504192,10506240,10508288,10510336,10512384,10514432,10516480,10518528,10520576,10522624,10524672,10526720,10528768,10530816,10532864,10534912,10536960,10539008,10541056,10543104,10545152,10547200,10549248,10551296,10553344,10555392,10557440,10559488,10561536,10563584,10565632,10567680,10569728,10571776,10573824,10575872,10577920,10579968,10582016,10584064,10586112,10588160,10590208,10592256,10594304,10596352,10598400,10600448,10602496,10604544,10606592,10608640,10610688,10612736,10614784,10616832,10618880,10620928,10622976,10625024,10627072,10629120,10631168,10633216,10635264,10637312,10639360,10641408,10643456,10645504,10647552,10649600,10651648,10653696,10655744,10657792,10659840,10661888,10663936,10665984,10668032,10670080,10672128,10674176,10676224,10678272,10680320,10682368,10684416,10686464,10688512,10690560,10692608,10694656,10696704,10698752,10700800,10702848,10704896,10706944,10708992,10711040,10713088,10715136,10717184,10719232,10721280,10723328,10725376,10727424,10729472,10731520,10733568,10735616,10737664,10739712,10741760,10743808,10745856,10747904,10749952,10752e3,10754048,10756096,10758144,10760192,10762240,10764288,10766336,10768384,10770432,10772480,10774528,10776576,10778624,10780672,10782720,10784768,10786816,10788864,10790912,10792960,10795008,10797056,10799104,10801152,10803200,10805248,10807296,10809344,10811392,10813440,10815488,10817536,10819584,10821632,10823680,10825728,10827776,10829824,10831872,10833920,10835968,10838016,10840064,10842112,10844160,10846208,10848256,10850304,10852352,10854400,10856448,10858496,10860544,10862592,10864640,10866688,10868736,10870784,10872832,10874880,10876928,10878976,10881024,10883072,10885120,10887168,10889216,10891264,10893312,10895360,10897408,10899456,10901504,10903552,10905600,10907648,10909696,10911744,10913792,10915840,10917888,10919936,10921984,10924032,10926080,10928128,10930176,10932224,10934272,10936320,10938368,10940416,10942464,10944512,10946560,10948608,10950656,10952704,10954752,10956800,10958848,10960896,10962944,10964992,10967040,10969088,10971136,10973184,10975232,10977280,10979328,10981376,10983424,10985472,10987520,10989568,10991616,10993664,10995712,10997760,10999808,11001856,11003904,11005952,11008e3,11010048,11012096,11014144,11016192,11018240,11020288,11022336,11024384,11026432,11028480,11030528,11032576,11034624,11036672,11038720],sizessuccesses:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};i.data=o,n("object"==typeof t.LZ4,"LZ4 not present - was your app build with  -s LZ4=1  ?"),t.LZ4.loadPackage({metadata:e,compressedData:i},!1),t.removeRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_meter.data")}t.FS_createPath("/","root",!0,!0),t.FS_createPath("/root","module_energy",!0,!0),t.FS_createPath("/root/module_energy","trained_models",!0,!0),t.addRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_meter.data"),t.preloadResults||(t.preloadResults={}),t.preloadResults["/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_meter.data"]={fromCache:!1},s?(r(s),s=null):a=r}s||function(e,r,o,i){if("object"!=typeof process||"object"!=typeof process.versions||"string"!=typeof process.versions.node){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onprogress=function(n){var o=e,i=r;if(n.total&&(i=n.total),n.loaded){a.addedTotal?t.dataFileDownloads[o].loaded=n.loaded:(a.addedTotal=!0,t.dataFileDownloads||(t.dataFileDownloads={}),t.dataFileDownloads[o]={loaded:n.loaded,total:i});var s=0,c=0,d=0;for(var l in t.dataFileDownloads){var u=t.dataFileDownloads[l];s+=u.total,c+=u.loaded,d++}s=Math.ceil(s*t.expectedDataFileDownloads/d),t.setStatus&&t.setStatus("Downloading data... ("+c+"/"+s+")")}else t.dataFileDownloads||t.setStatus&&t.setStatus("Downloading data...")},a.onerror=function(t){throw new Error("NetworkError for: "+e)},a.onload=function(e){if(!(200==a.status||304==a.status||206==a.status||0==a.status&&a.response))throw new Error(a.statusText+" : "+a.responseURL);var t=a.response;o(t)},a.send(null)}else n(9061).readFile(e,(function(e,t){e?i(e):o(t.buffer)}))}(t.anyline.__any_module_loc_f(o),i,(function(e){a?(a(e),a=null):s=e}),(function(e){console.error("package error:",e)})),t.calledRun?c():(t.preRun||(t.preRun=[]),t.preRun.push(c))}({files:[{filename:"/root/module_energy/analog_meter.ale",start:0,end:38604},{filename:"/root/module_energy/dot_matrix_meter.ale",start:38604,end:46936},{filename:"/root/module_energy/analog_digital_auto_mode.ale",start:46936,end:125368},{filename:"/root/module_energy/dial_meter.ale",start:125368,end:145240},{filename:"/root/module_energy/trained_models/digitalCommaSvmModel.any",start:145240,end:916768},{filename:"/root/module_energy/trained_models/f16_model_detector.any",start:916768,end:3059992},{filename:"/root/module_energy/trained_models/dial_class.any",start:3059992,end:8521824},{filename:"/root/module_energy/trained_models/CNN_analog_digital.any",start:8521824,end:10717528},{filename:"/root/module_energy/trained_models/digital_comma.any",start:10717528,end:10951968},{filename:"/root/module_energy/trained_models/analog_comma.any",start:10951968,end:11039736}],remote_package_size:11043832,package_uuid:"0f10f8ed-2f98-4fd7-a5f6-ac41e91d9460"})),"LPT"==t.anyline.__any_module_id.toUpperCase()&&((t=void 0!==e?e:{}).expectedDataFileDownloads||(t.expectedDataFileDownloads=0),t.expectedDataFileDownloads++,function(e){"object"==typeof window?window.encodeURIComponent(window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/"):"undefined"==typeof process&&"undefined"!=typeof location&&encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/");var r="data_lpt.data";"function"!=typeof t.locateFilePackage||t.locateFile||(t.locateFile=t.locateFilePackage,O("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));var o=t.locateFile?t.locateFile(r,""):r,i=e.remote_package_size;e.package_uuid;var a=null,s=t.getPreloadedPackage?t.getPreloadedPackage(o,i):null;function c(){function n(e,t){if(!e)throw t+(new Error).stack}function r(r){n(r,"Loading data file failed."),n(r instanceof ArrayBuffer,"bad input to processPackageData");var o=new Uint8Array(r),i={data:null,cachedOffset:8512028,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[0,2048,4096,6144,8192,10240,12288,14336,16384,18432,20480,22528,24576,26624,28672,30720,32768,34816,36864,38912,40960,43008,45056,47104,49152,51200,53248,55296,57344,59392,61440,63488,65536,67584,69632,71680,73728,75776,77824,79872,81920,83968,86016,88064,90112,92160,94208,96256,98304,100352,102400,104448,106496,108544,110592,112640,114688,116736,118784,120832,122880,124928,126976,129024,131072,133120,135168,137216,139264,141312,143360,145408,147456,149504,151552,153600,155648,157696,159744,161792,163840,165888,167936,169984,172032,174080,176128,178176,180224,182272,184320,186368,188416,190464,192512,194560,196608,198656,200704,202752,204800,206848,208896,210944,212992,215040,217088,219136,221184,223232,225280,227328,229376,231424,233472,235520,237568,239616,241664,243712,245760,247808,249856,251904,253952,256e3,258048,260096,262144,264192,266240,268288,270336,272384,274432,276480,278528,280576,282624,284672,286720,288768,290816,292864,294912,296960,299008,301056,303104,305152,307200,309248,311296,313344,315392,317440,319488,321536,323584,325632,327680,329728,331776,333824,335872,337920,339968,342016,344064,346112,348160,350208,352256,354304,356352,358400,360448,362496,364544,366592,368640,370688,372736,374784,376832,378880,380928,382976,385024,387072,389120,391168,393216,395264,397312,399360,401408,403456,405504,407552,409600,411648,413696,415744,417792,419840,421888,423936,425984,428032,430080,432128,434176,436224,438272,440320,442368,444416,446464,448512,450560,452608,454656,456704,458752,460800,462848,464896,466944,468992,471040,473088,475136,477184,479232,481280,483328,485376,487424,489472,491520,493568,495616,497664,499712,501760,503808,505856,507904,509952,512e3,514048,516096,518144,520192,522240,524288,526336,528384,530432,532480,534528,536576,538624,540672,542720,544768,546816,548864,550912,552960,555008,557056,559104,561152,563200,565248,567296,569344,571392,573440,575488,577536,579584,581632,583680,585728,587776,589824,591872,593920,595968,598016,600064,602112,604160,606208,608256,610304,612352,614400,616448,618496,620544,622592,624640,626688,628736,630784,632832,634880,636928,638976,641024,643072,645120,647168,649216,651264,653312,655360,657408,659456,661504,663552,665600,667648,669696,671744,673792,675840,677888,679936,681984,684032,686080,688128,690176,692224,694272,696320,698368,700416,702464,704512,706560,708608,710656,712704,714752,716800,718848,720896,722944,724992,727040,729088,731136,733184,735232,737280,739328,741376,743424,745472,747520,749568,751616,753664,755712,757760,759808,761856,763904,765952,768e3,770048,772096,774144,776192,778240,780288,782336,784384,786432,788480,790528,792576,794624,796672,798720,800768,802816,804864,806912,808960,811008,813056,815104,817152,819200,821248,823296,825344,827392,829440,831488,833536,835584,837632,839680,841728,843776,845824,847872,849920,851968,854016,856064,858112,860160,862208,864256,866304,868352,870400,872448,874496,876544,878592,880640,882688,884736,886784,888832,890880,892928,894976,897024,899072,901120,903168,905216,907264,909312,911360,913408,915456,917504,919552,921600,923648,925696,927744,929792,931840,933888,935936,937984,940032,942080,944128,946176,948224,950272,952320,954368,956416,958464,960512,962560,964608,966656,968704,970752,972800,974848,976896,978944,980992,983040,985088,987136,989184,991232,993280,995328,997376,999424,1001472,1003520,1005568,1007616,1009664,1011712,1013760,1015808,1017856,1019904,1021952,1024e3,1026048,1028096,1030144,1032192,1034240,1036288,1038336,1040384,1042432,1044480,1046528,1048576,1050624,1052672,1054720,1056768,1058816,1060864,1062912,1064960,1067008,1069056,1071104,1073152,1075200,1077248,1079296,1081344,1083392,1085440,1087488,1089536,1091584,1093632,1095680,1097728,1099776,1101824,1103872,1105920,1107968,1110016,1112064,1114112,1116160,1118208,1120256,1122304,1124352,1126400,1128448,1130496,1132544,1134592,1136640,1138688,1140736,1142784,1144832,1146880,1148928,1150976,1153024,1155072,1157120,1159168,1161216,1163264,1165312,1167360,1169408,1171456,1173504,1175552,1177600,1179648,1181696,1183744,1185792,1187840,1189888,1191936,1193984,1196032,1198080,1200128,1202176,1204224,1206272,1208320,1210368,1212416,1214464,1216512,1218560,1220608,1222656,1224704,1226752,1228800,1230848,1232896,1234944,1236992,1239040,1241088,1243136,1245184,1247232,1249280,1251328,1253376,1255424,1257472,1259520,1261568,1263616,1265664,1267712,1269760,1271808,1273856,1275904,1277952,128e4,1282048,1284096,1286144,1288192,1290240,1292288,1294336,1296384,1298432,1300480,1302528,1304576,1306624,1308672,1310720,1312768,1314816,1316864,1318912,1320960,1323008,1325056,1327104,1329152,1331200,1333248,1335296,1337344,1339392,1341440,1343488,1345536,1347584,1349632,1351680,1353728,1355776,1357824,1359872,1361920,1363968,1366016,1368064,1370112,1372160,1374208,1376256,1378304,1380352,1382400,1384448,1386496,1388544,1390592,1392640,1394688,1396736,1398784,1400832,1402880,1404928,1406976,1409024,1411072,1413120,1415168,1417216,1419264,1421312,1423360,1425408,1427456,1429504,1431552,1433600,1435648,1437696,1439744,1441792,1443840,1445888,1447936,1449984,1452032,1454080,1456128,1458176,1460224,1462272,1464320,1466368,1468416,1470464,1472512,1474560,1476608,1478656,1480704,1482752,1484800,1486848,1488896,1490944,1492992,1495040,1497088,1499136,1501184,1503232,1505280,1507328,1509376,1511424,1513472,1515520,1517568,1519616,1521664,1523712,1525760,1527808,1529856,1531904,1533952,1536e3,1538048,1540096,1542144,1544192,1546240,1548288,1550336,1552384,1554432,1556480,1558528,1560576,1562624,1564672,1566720,1568768,1570816,1572864,1574912,1576960,1579008,1581056,1583104,1585152,1587200,1589248,1591296,1593344,1595392,1597440,1599488,1601536,1603584,1605632,1607680,1609728,1611776,1613824,1615872,1617920,1619968,1622016,1624064,1626112,1628160,1630208,1632256,1634304,1636352,1638400,1640448,1642496,1644544,1646592,1648640,1650688,1652736,1654784,1656832,1658880,1660928,1662976,1665024,1667072,1669120,1671168,1673216,1675264,1677312,1679360,1681408,1683456,1685504,1687552,1689600,1691648,1693696,1695744,1697792,1699840,1701888,1703936,1705984,1708032,1710080,1712128,1714176,1716224,1718272,1720320,1722368,1724416,1726464,1728512,1730560,1732608,1734656,1736704,1738752,1740800,1742848,1744896,1746944,1748992,1751040,1753088,1755136,1757184,1759232,1761280,1763328,1765376,1767424,1769472,1771520,1773568,1775616,1777664,1779712,1781760,1783808,1785856,1787904,1789952,1792e3,1794048,1796096,1798144,1800192,1802240,1804288,1806336,1808384,1810432,1812480,1814528,1816576,1818624,1820672,1822720,1824768,1826816,1828864,1830912,1832960,1835008,1837056,1839104,1841152,1843200,1845248,1847296,1849344,1851392,1853440,1855488,1857536,1859584,1861632,1863680,1865728,1867776,1869824,1871872,1873920,1875968,1878016,1880064,1882112,1884160,1886208,1888256,1890304,1892352,1894400,1896448,1898496,1900544,1902592,1904640,1906688,1908736,1910784,1912832,1914880,1916928,1918976,1921024,1923072,1925120,1927168,1929216,1931264,1933312,1935360,1937408,1939456,1941504,1943552,1945600,1947648,1949696,1951744,1953792,1955840,1957888,1959936,1961984,1964032,1966080,1968128,1970176,1972224,1974272,1976320,1978368,1980416,1982464,1984512,1986560,1988608,1990656,1992704,1994752,1996800,1998848,2000896,2002944,2004992,2007040,2009088,2011136,2013184,2015232,2017280,2019328,2021376,2023424,2025472,2027520,2029568,2031616,2033664,2035712,2037760,2039808,2041856,2043904,2045952,2048e3,2050048,2052096,2054144,2056192,2058240,2060288,2062336,2064384,2066432,2068480,2070528,2072576,2074624,2076672,2078720,2080768,2082816,2084864,2086912,2088960,2091008,2093056,2095104,2097152,2099200,2101248,2103296,2105344,2107392,2109440,2111488,2113536,2115584,2117632,2119680,2121728,2123776,2125824,2127872,2129920,2131968,2134016,2136064,2138112,2140160,2142208,2144256,2146304,2148352,2150400,2152448,2154496,2156544,2158592,2160640,2162688,2164736,2166784,2168832,2170880,2172928,2174976,2177024,2179072,2181120,2183168,2185216,2187264,2189312,2191360,2193408,2195456,2197504,2199552,2201600,2203648,2205696,2207744,2209792,2211840,2213888,2215936,2217984,2220032,2222080,2224128,2226176,2228224,2230272,2232320,2234368,2236416,2238464,2240512,2242560,2244608,2246656,2248704,2250752,2252800,2254848,2256896,2258944,2260992,2263040,2265088,2267136,2269184,2271232,2273280,2275328,2277376,2279424,2281472,2283520,2285568,2287616,2289664,2291712,2293760,2295808,2297856,2299904,2301952,2304e3,2306048,2308096,2310144,2312192,2314240,2316288,2318336,2320384,2322432,2324480,2326528,2328576,2330624,2332672,2334720,2336768,2338816,2340864,2342912,2344960,2347008,2349056,2351104,2353152,2355200,2357248,2359296,2361344,2363392,2365440,2367488,2369536,2371584,2373632,2375680,2377728,2379776,2381824,2383872,2385920,2387968,2390016,2392064,2394112,2396160,2398208,2400256,2402304,2404352,2406400,2408448,2410496,2412544,2414592,2416640,2418688,2420736,2422784,2424832,2426880,2428928,2430976,2433024,2435072,2437120,2439168,2441216,2443264,2445312,2447360,2449408,2451456,2453504,2455552,2457600,2459648,2461696,2463744,2465792,2467840,2469888,2471936,2473984,2476032,2478080,2480128,2482176,2484224,2486272,2488320,2490368,2492416,2494464,2496512,2498560,2500608,2502656,2504704,2506752,2508800,2510848,2512896,2514944,2516992,2519040,2521088,2523136,2525184,2527232,2529280,2531328,2533376,2535424,2537472,2539520,2541568,2543616,2545664,2547712,2549760,2551808,2553856,2555904,2557952,256e4,2562048,2564096,2566144,2568192,2570240,2572288,2574336,2576384,2578432,2580480,2582528,2584576,2586624,2588672,2590720,2592768,2594816,2596864,2598912,2600960,2603008,2605056,2607104,2609152,2611200,2613248,2615296,2617344,2619392,2621440,2623488,2625536,2627584,2629632,2631680,2633728,2635776,2637824,2639872,2641920,2643968,2646016,2648064,2650112,2652160,2654208,2656256,2658304,2660352,2662400,2664448,2666496,2668544,2670592,2672640,2674688,2676736,2678784,2680832,2682880,2684928,2686976,2689024,2691072,2693120,2695168,2697216,2699264,2701312,2703360,2705408,2707456,2709504,2711552,2713600,2715648,2717696,2719744,2721792,2723840,2725888,2727936,2729984,2732032,2734080,2736128,2738176,2740224,2742272,2744320,2746368,2748416,2750464,2752512,2754560,2756608,2758656,2760704,2762752,2764800,2766848,2768896,2770944,2772992,2775040,2777088,2779136,2781184,2783232,2785280,2787328,2789376,2791424,2793472,2795520,2797568,2799616,2801664,2803712,2805760,2807808,2809856,2811904,2813952,2816e3,2818048,2820096,2822144,2824192,2826240,2828288,2830336,2832384,2834432,2836480,2838528,2840576,2842624,2844672,2846720,2848768,2850816,2852864,2854912,2856960,2859008,2861056,2863104,2865152,2867200,2869248,2871296,2873344,2875392,2877440,2879488,2881536,2883584,2885632,2887680,2889728,2891776,2893824,2895872,2897920,2899968,2902016,2904064,2906112,2908160,2910208,2912256,2914304,2916352,2918400,2920448,2922496,2924544,2926592,2928640,2930688,2932736,2934784,2936832,2938880,2940928,2942976,2945024,2947072,2949120,2951168,2953216,2955264,2957312,2959360,2961408,2963456,2965504,2967552,2969600,2971648,2973696,2975744,2977792,2979840,2981888,2983936,2985984,2988032,2990080,2992128,2994176,2996224,2998272,3000320,3002368,3004416,3006464,3008512,3010560,3012608,3014656,3016704,3018752,3020800,3022848,3024896,3026944,3028992,3031040,3033088,3035136,3037184,3039232,3041280,3043328,3045376,3047424,3049472,3051520,3053568,3055616,3057664,3059712,3061760,3063808,3065856,3067904,3069952,3072e3,3074048,3076096,3078144,3080192,3082240,3084288,3086336,3088384,3090432,3092480,3094528,3096576,3098624,3100672,3102720,3104768,3106816,3108864,3110912,3112960,3115008,3117056,3119104,3121152,3123200,3125248,3127296,3129344,3131392,3133440,3135488,3137536,3139584,3141632,3143680,3145728,3147776,3149824,3151872,3153920,3155968,3158016,3160064,3162112,3164160,3166208,3168256,3170304,3172352,3174400,3176448,3178496,3180544,3182592,3184640,3186688,3188736,3190784,3192832,3194880,3196928,3198976,3201024,3203072,3205120,3207168,3209216,3211264,3213312,3215360,3217408,3219456,3221504,3223552,3225600,3227648,3229696,3231744,3233792,3235840,3237888,3239936,3241984,3244032,3246080,3248128,3250176,3252224,3254272,3256320,3258368,3260416,3262464,3264512,3266560,3268608,3270656,3272704,3274752,3276800,3278848,3280896,3282944,3284992,3287040,3289088,3291136,3293184,3295232,3297280,3299328,3301376,3303424,3305472,3307520,3309568,3311616,3313664,3315712,3317760,3319808,3321856,3323904,3325952,3328e3,3330048,3332096,3334144,3336192,3338240,3340288,3342336,3344384,3346432,3348480,3350528,3352576,3354624,3356672,3358720,3360768,3362816,3364864,3366912,3368960,3371008,3373056,3375104,3377152,3379200,3381248,3383296,3385344,3387392,3389440,3391488,3393536,3395584,3397632,3399680,3401728,3403776,3405824,3407872,3409920,3411968,3414016,3416064,3418112,3420160,3422208,3424256,3426304,3428352,3430400,3432448,3434496,3436544,3438592,3440640,3442688,3444736,3446784,3448832,3450880,3452928,3454976,3457024,3459072,3461120,3463168,3465216,3467264,3469312,3471360,3473408,3475456,3477504,3479552,3481600,3483648,3485696,3487744,3489792,3491840,3493888,3495936,3497984,3500032,3502080,3504128,3506176,3508224,3510272,3512320,3514368,3516416,3518464,3520512,3522560,3524608,3526656,3528704,3530752,3532800,3534848,3536896,3538944,3540992,3543040,3545088,3547136,3549184,3551232,3553280,3555328,3557376,3559424,3561472,3563520,3565568,3567616,3569664,3571712,3573760,3575808,3577856,3579904,3581952,3584e3,3586048,3588096,3590144,3592192,3594240,3596288,3598336,3600384,3602432,3604480,3606528,3608576,3610624,3612672,3614720,3616768,3618816,3620864,3622912,3624960,3627008,3629056,3631104,3633152,3635200,3637248,3639296,3641344,3643392,3645440,3647488,3649536,3651584,3653632,3655680,3657728,3659776,3661824,3663872,3665920,3667968,3670016,3672064,3674112,3676160,3678208,3680256,3682304,3684352,3686400,3688448,3690496,3692544,3694592,3696640,3698688,3700736,3702784,3704832,3706880,3708928,3710976,3713024,3715072,3717120,3719168,3721216,3723264,3725312,3727360,3729408,3731456,3733504,3735552,3737600,3739648,3741696,3743744,3745792,3747840,3749888,3751936,3753984,3756032,3758080,3760128,3762176,3764224,3766272,3768320,3770368,3772416,3774464,3776512,3778560,3780608,3782656,3784704,3786752,3788800,3790848,3792896,3794944,3796992,3799040,3801088,3803136,3805184,3807232,3809280,3811328,3813376,3815424,3817472,3819520,3821568,3823616,3825664,3827712,3829760,3831808,3833856,3835904,3837952,384e4,3842048,3844096,3846144,3848192,3850240,3852288,3854336,3856384,3858432,3860480,3862528,3864576,3866624,3868672,3870720,3872768,3874816,3876864,3878912,3880960,3883008,3885056,3887104,3889152,3891200,3893248,3895296,3897344,3899392,3901440,3903488,3905536,3907584,3909632,3911680,3913728,3915776,3917824,3919872,3921920,3923968,3926016,3928064,3930112,3932160,3934208,3936256,3938304,3940352,3942400,3944448,3946496,3948544,3950592,3952640,3954688,3956736,3958784,3960832,3962880,3964928,3966976,3969024,3971072,3973120,3975168,3977216,3979264,3981312,3983360,3985408,3987456,3989504,3991552,3993600,3995648,3997696,3999744,4001792,4003840,4005888,4007936,4009984,4012032,4014080,4016128,4018176,4020224,4022272,4024320,4026368,4028416,4030464,4032512,4034560,4036608,4038656,4040704,4042752,4044800,4046848,4048896,4050944,4052992,4055040,4057088,4059136,4061184,4063232,4065280,4067328,4069376,4071424,4073472,4075520,4077568,4079616,4081664,4083712,4085760,4087808,4089856,4091904,4093952,4096e3,4098048,4100096,4102144,4104192,4106240,4108288,4110336,4112384,4114432,4116480,4118528,4120576,4122624,4124672,4126720,4128768,4130816,4132864,4134912,4136960,4139008,4141056,4143104,4145152,4147200,4149248,4151296,4153344,4155392,4157440,4159488,4161536,4163584,4165632,4167680,4169728,4171776,4173824,4175872,4177920,4179968,4182016,4184064,4186112,4188160,4190208,4192256,4194304,4196352,4198400,4200448,4202496,4204544,4206592,4208640,4210688,4212736,4214784,4216832,4218880,4220928,4222976,4225024,4227072,4229120,4231168,4233216,4235264,4237312,4239360,4241408,4243456,4245504,4247552,4249600,4251648,4253696,4255744,4257792,4259840,4261888,4263936,4265984,4268032,4270080,4272128,4274176,4276224,4278272,4280320,4282368,4284416,4286464,4288512,4290560,4292608,4294656,4296704,4298752,4300800,4302848,4304896,4306944,4308992,4311040,4313088,4315136,4317184,4319232,4321280,4323328,4325376,4327424,4329472,4331520,4333568,4335616,4337664,4339712,4341760,4343808,4345856,4347904,4349952,4352e3,4354048,4356096,4358144,4360192,4362240,4364288,4366336,4368384,4370432,4372480,4374528,4376576,4378624,4380672,4382720,4384768,4386816,4388864,4390912,4392960,4395008,4397056,4399104,4401152,4403200,4405248,4407296,4409344,4411392,4413440,4415488,4417536,4419584,4421632,4423680,4425728,4427776,4429824,4431872,4433920,4435968,4438016,4440064,4442112,4444160,4446208,4448256,4450304,4452352,4454400,4456448,4458496,4460544,4462592,4464640,4466688,4468736,4470784,4472832,4474880,4476928,4478976,4481024,4483072,4485120,4487168,4489216,4491264,4493312,4495360,4497408,4499456,4501504,4503552,4505600,4507648,4509696,4511744,4513792,4515840,4517888,4519936,4521984,4524032,4526080,4528128,4530176,4532224,4534272,4536320,4538368,4540416,4542464,4544512,4546560,4548608,4550656,4552704,4554752,4556800,4558848,4560896,4562944,4564992,4567040,4569088,4571136,4573184,4575232,4577280,4579328,4581376,4583424,4585472,4587520,4589568,4591616,4593664,4595712,4597760,4599808,4601856,4603904,4605952,4608e3,4610048,4612096,4614144,4616192,4618240,4620288,4622336,4624384,4626432,4628480,4630528,4632576,4634624,4636672,4638720,4640768,4642816,4644864,4646912,4648960,4651008,4653056,4655104,4657152,4659200,4661248,4663296,4665344,4667392,4669440,4671488,4673536,4675584,4677632,4679680,4681728,4683776,4685824,4687872,4689920,4691968,4694016,4696064,4698112,4700160,4702208,4704256,4706304,4708352,4710400,4712448,4714496,4716544,4718592,4720640,4722688,4724736,4726784,4728832,4730880,4732928,4734976,4737024,4739072,4741120,4743168,4745216,4747264,4749312,4751360,4753408,4755456,4757504,4759552,4761600,4763648,4765696,4767744,4769792,4771840,4773888,4775936,4777984,4780032,4782080,4784128,4786176,4788224,4790272,4792320,4794368,4796416,4798464,4800512,4802560,4804608,4806656,4808704,4810752,4812800,4814848,4816896,4818944,4820992,4823040,4825088,4827136,4829184,4831232,4833280,4835328,4837376,4839424,4841472,4843520,4845568,4847616,4849664,4851712,4853760,4855808,4857856,4859904,4861952,4864e3,4866048,4868096,4870144,4872192,4874240,4876288,4878336,4880384,4882432,4884480,4886528,4888576,4890624,4892672,4894720,4896768,4898816,4900864,4902912,4904960,4907008,4909056,4911104,4913152,4915200,4917248,4919296,4921344,4923392,4925440,4927488,4929536,4931584,4933632,4935680,4937728,4939776,4941824,4943872,4945920,4947968,4950016,4952064,4954112,4956160,4958208,4960256,4962304,4964352,4966400,4968448,4970496,4972544,4974592,4976640,4978688,4980736,4982784,4984832,4986880,4988928,4990976,4993024,4995072,4997120,4999168,5001216,5003264,5005312,5007360,5009408,5011456,5013504,5015552,5017600,5019648,5021696,5023744,5025792,5027840,5029888,5031936,5033984,5036032,5038080,5040128,5042176,5044224,5046272,5048320,5050368,5052416,5054464,5056512,5058560,5060608,5062656,5064704,5066752,5068800,5070848,5072896,5074944,5076992,5079040,5081088,5083136,5085184,5087232,5089280,5091328,5093376,5095424,5097472,5099520,5101568,5103616,5105664,5107712,5109760,5111808,5113856,5115904,5117952,512e4,5122048,5124096,5126144,5128192,5130240,5132288,5134336,5136384,5138432,5140480,5142528,5144576,5146624,5148672,5150720,5152768,5154816,5156864,5158912,5160960,5163008,5165056,5167104,5169152,5171200,5173248,5175296,5177344,5179392,5181440,5183488,5185536,5187584,5189632,5191680,5193728,5195776,5197824,5199872,5201920,5203968,5206016,5208064,5210112,5212160,5214208,5216256,5218304,5220352,5222400,5224448,5226496,5228544,5230592,5232640,5234688,5236736,5238784,5240832,5242880,5244928,5246976,5249024,5251072,5253120,5255168,5257216,5259264,5261312,5263360,5265408,5267456,5269504,5271552,5273600,5275648,5277696,5279744,5281792,5283840,5285888,5287936,5289984,5292032,5294080,5296128,5298176,5300224,5302272,5304320,5306368,5308416,5310464,5312512,5314560,5316608,5318656,5320704,5322752,5324800,5326848,5328896,5330944,5332992,5335040,5337088,5339136,5341184,5343232,5345280,5347328,5349376,5351424,5353472,5355520,5357568,5359616,5361664,5363712,5365760,5367808,5369856,5371904,5373952,5376e3,5378048,5380096,5382144,5384192,5386240,5388288,5390336,5392384,5394432,5396480,5398528,5400576,5402624,5404672,5406720,5408768,5410816,5412864,5414912,5416960,5419008,5421056,5423104,5425152,5427200,5429248,5431296,5433344,5435392,5437440,5439488,5441536,5443584,5445632,5447680,5449728,5451776,5453824,5455872,5457920,5459968,5462016,5464064,5466112,5468160,5470208,5472256,5474304,5476352,5478400,5480448,5482496,5484544,5486592,5488640,5490688,5492736,5494784,5496832,5498880,5500928,5502976,5505024,5507072,5509120,5511168,5513216,5515264,5517312,5519360,5521408,5523456,5525504,5527552,5529600,5531648,5533696,5535744,5537792,5539840,5541888,5543936,5545984,5548032,5550080,5552128,5554176,5556224,5558272,5560320,5562368,5564416,5566464,5568512,5570560,5572608,5574656,5576704,5578752,5580800,5582848,5584896,5586944,5588992,5591040,5593088,5595136,5597184,5599232,5601280,5603328,5605376,5607424,5609472,5611520,5613568,5615616,5617664,5619712,5621760,5623808,5625856,5627904,5629952,5632e3,5634048,5636096,5638144,5640192,5642240,5644288,5646336,5648384,5650432,5652480,5654528,5656576,5658624,5660672,5662720,5664768,5666816,5668864,5670912,5672960,5675008,5677056,5679104,5681152,5683200,5685248,5687296,5689344,5691392,5693440,5695488,5697536,5699584,5701632,5703680,5705728,5707776,5709824,5711872,5713920,5715968,5718016,5720064,5722112,5724160,5726208,5728256,5730304,5732352,5734400,5736448,5738496,5740544,5742592,5744640,5746688,5748736,5750784,5752832,5754880,5756928,5758976,5761024,5763072,5765120,5767168,5769216,5771264,5773312,5775360,5777408,5779456,5781504,5783552,5785600,5787648,5789696,5791744,5793792,5795840,5797888,5799936,5801984,5804032,5806080,5808128,5810176,5812224,5814272,5816320,5818368,5820416,5822464,5824512,5826560,5828608,5830656,5832704,5834752,5836800,5838848,5840896,5842944,5844992,5847040,5849088,5851136,5853184,5855232,5857280,5859328,5861376,5863424,5865472,5867520,5869568,5871616,5873664,5875712,5877760,5879808,5881856,5883904,5885952,5888e3,5890048,5892096,5894144,5896192,5898240,5900288,5902336,5904384,5906432,5908480,5910528,5912576,5914624,5916672,5918720,5920768,5922816,5924864,5926912,5928960,5931008,5933056,5935104,5937152,5939200,5941248,5943296,5945344,5947392,5949440,5951488,5953536,5955584,5957632,5959680,5961728,5963776,5965824,5967872,5969920,5971968,5974016,5976064,5978112,5980160,5982208,5984256,5986304,5988352,5990400,5992448,5994496,5996544,5998592,6000640,6002688,6004736,6006784,6008832,6010880,6012928,6014976,6017024,6019072,6021120,6023168,6025216,6027264,6029312,6031360,6033408,6035456,6037504,6039552,6041600,6043648,6045696,6047744,6049792,6051840,6053888,6055936,6057984,6060032,6062080,6064128,6066176,6068224,6070272,6072320,6074368,6076416,6078464,6080512,6082560,6084608,6086656,6088704,6090752,6092800,6094848,6096896,6098944,6100992,6103040,6105088,6107136,6109184,6111232,6113280,6115328,6117376,6119424,6121472,6123520,6125568,6127616,6129664,6131712,6133760,6135808,6137856,6139904,6141952,6144e3,6146048,6148096,6150144,6152192,6154240,6156288,6158336,6160384,6162432,6164480,6166528,6168576,6170624,6172672,6174720,6176768,6178816,6180864,6182912,6184960,6187008,6189056,6191104,6193152,6195200,6197248,6199296,6201344,6203392,6205440,6207488,6209536,6211584,6213632,6215680,6217728,6219776,6221824,6223872,6225920,6227968,6230016,6232064,6234112,6236160,6238208,6240256,6242304,6244352,6246400,6248448,6250496,6252544,6254592,6256640,6258688,6260736,6262784,6264832,6266880,6268928,6270976,6273024,6275072,6277120,6279168,6281216,6283264,6285312,6287360,6289408,6291456,6293504,6295552,6297600,6299648,6301696,6303744,6305792,6307840,6309888,6311936,6313984,6316032,6318080,6320128,6322176,6324224,6326272,6328320,6330368,6332416,6334464,6336512,6338560,6340608,6342656,6344704,6346752,6348800,6350848,6352896,6354944,6356992,6359040,6361088,6363136,6365184,6367232,6369280,6371328,6373376,6375424,6377472,6379520,6381568,6383616,6385664,6387712,6389760,6391808,6393856,6395904,6397952,64e5,6402048,6404096,6406144,6408192,6410240,6412288,6414336,6416384,6418432,6420480,6422528,6424576,6426624,6428672,6430720,6432768,6434816,6436864,6438912,6440960,6443008,6445056,6447104,6449152,6451200,6453248,6455296,6457344,6459392,6461440,6463488,6465536,6467584,6469632,6471680,6473728,6475776,6477824,6479872,6481920,6483968,6486016,6488064,6490112,6492160,6494208,6496256,6498304,6500352,6502400,6504448,6506496,6508544,6510592,6512640,6514688,6516736,6518784,6520832,6522880,6524928,6526976,6529024,6531072,6533120,6535168,6537216,6539264,6541312,6543360,6545408,6547456,6549504,6551552,6553600,6555648,6557696,6559744,6561792,6563840,6565888,6567936,6569984,6572032,6574080,6576128,6578176,6580224,6582272,6584320,6586368,6588416,6590464,6592512,6594560,6596608,6598656,6600704,6602752,6604800,6606848,6608896,6610944,6612992,6615040,6617088,6619136,6621184,6623232,6625280,6627328,6629376,6631424,6633472,6635520,6637568,6639616,6641664,6643712,6645760,6647808,6649856,6651904,6653952,6656e3,6658048,6660096,6662144,6664192,6666240,6668288,6670336,6672384,6674432,6676480,6678528,6680576,6682624,6684672,6686720,6688768,6690816,6692864,6694912,6696960,6699008,6701056,6703104,6705152,6707200,6709248,6711296,6713344,6715392,6717440,6719488,6721536,6723584,6725632,6727680,6729728,6731776,6733824,6735872,6737920,6739968,6742016,6744064,6746112,6748160,6750208,6752256,6754304,6756352,6758400,6760448,6762496,6764544,6766592,6768640,6770688,6772736,6774784,6776832,6778880,6780928,6782976,6785024,6787072,6789120,6791168,6793216,6795264,6797312,6799360,6801408,6803456,6805504,6807552,6809600,6811648,6813696,6815744,6817792,6819840,6821888,6823936,6825984,6828032,6830080,6832128,6834176,6836224,6838272,6840320,6842368,6844416,6846464,6848512,6850560,6852608,6854656,6856704,6858752,6860800,6862848,6864896,6866944,6868992,6871040,6873088,6875136,6877184,6879232,6881280,6883328,6885376,6887424,6889472,6891520,6893568,6895616,6897664,6899712,6901760,6903808,6905856,6907904,6909952,6912e3,6914048,6916096,6918144,6920192,6922240,6924288,6926336,6928384,6930432,6932480,6934528,6936576,6938624,6940672,6942720,6944768,6946816,6948864,6950912,6952960,6955008,6957056,6959104,6961152,6963200,6965248,6967296,6969344,6971392,6973440,6975488,6977536,6979584,6981632,6983680,6985728,6987776,6989824,6991872,6993920,6995968,6998016,7000064,7002112,7004160,7006208,7008256,7010304,7012352,7014400,7016448,7018496,7020544,7022592,7024640,7026688,7028736,7030784,7032832,7034880,7036928,7038976,7041024,7043072,7045120,7047168,7049216,7051264,7053312,7055360,7057408,7059456,7061504,7063552,7065600,7067648,7069696,7071744,7073792,7075840,7077888,7079936,7081984,7084032,7086080,7088128,7090176,7092224,7094272,7096320,7098368,7100416,7102464,7104512,7106560,7108608,7110656,7112704,7114752,7116800,7118848,7120896,7122944,7124992,7127040,7129088,7131136,7133184,7135232,7137280,7139328,7141376,7143424,7145472,7147520,7149568,7151616,7153664,7155712,7157760,7159808,7161856,7163904,7165952,7168e3,7170048,7172096,7174144,7176192,7178240,7180288,7182336,7184384,7186432,7188480,7190528,7192576,7194624,7196672,7198720,7200768,7202816,7204864,7206912,7208960,7211008,7213056,7215104,7217152,7219200,7221248,7223296,7225344,7227392,7229440,7231488,7233536,7235584,7237632,7239680,7241728,7243776,7245824,7247872,7249920,7251968,7254016,7256064,7258112,7260160,7262208,7264256,7266304,7268352,7270400,7272448,7274496,7276544,7278592,7280640,7282688,7284736,7286784,7288832,7290880,7292928,7294976,7297024,7299072,7301120,7303168,7305216,7307264,7309312,7311360,7313408,7315456,7317504,7319552,7321600,7323648,7325696,7327744,7329792,7331840,7333888,7335936,7337984,7340032,7342080,7344128,7346176,7348224,7350272,7352320,7354368,7356416,7358464,7360512,7362560,7364608,7366656,7368704,7370752,7372800,7374848,7376896,7378944,7380992,7383040,7385088,7387136,7389184,7391232,7393280,7395328,7397376,7399424,7401472,7403520,7405568,7407616,7409664,7411712,7413760,7415808,7417856,7419904,7421952,7424e3,7426048,7428096,7430144,7432192,7434240,7436288,7438336,7440384,7442432,7444480,7446528,7448576,7450624,7452672,7454720,7456768,7458816,7460864,7462912,7464960,7467008,7469056,7471104,7473152,7475200,7477248,7479296,7481344,7483392,7485440,7487488,7489536,7491584,7493632,7495680,7497728,7499776,7501824,7503872,7505920,7507968,7510016,7512064,7514112,7516160,7518208,7520256,7522304,7524352,7526400,7528448,7530496,7532544,7534592,7536640,7538688,7540736,7542784,7544832,7546880,7548928,7550976,7553024,7555072,7557120,7559168,7561216,7563264,7565312,7567360,7569408,7571456,7573504,7575552,7577600,7579648,7581696,7583744,7585792,7587840,7589888,7591936,7593984,7596032,7598080,7600128,7602176,7604224,7606272,7608320,7610368,7612416,7614464,7616512,7618560,7620608,7622656,7624704,7626752,7628800,7630848,7632896,7634944,7636992,7639040,7641088,7643136,7645184,7647232,7649280,7651328,7653376,7655424,7657472,7659520,7661568,7663616,7665664,7667712,7669760,7671808,7673856,7675904,7677952,768e4,7682048,7684096,7686144,7688192,7690240,7692288,7694336,7696384,7698432,7700480,7702528,7704576,7706624,7708672,7710720,7712768,7714816,7716864,7718912,7720960,7723008,7725056,7727104,7729152,7731200,7733248,7735296,7737344,7739392,7741440,7743488,7745536,7747584,7749632,7751680,7753728,7755776,7757824,7759872,7761920,7763968,7766016,7768064,7770112,7772160,7774208,7776256,7778304,7780352,7782400,7784448,7786496,7788544,7790592,7792640,7794688,7796736,7798784,7800832,7802880,7804928,7806976,7809024,7811072,7813120,7815168,7817216,7819264,7821312,7823360,7825408,7827456,7829504,7831552,7833600,7835648,7837696,7839744,7841792,7843840,7845888,7847936,7849984,7852032,7854080,7856128,7858176,7860224,7862272,7864320,7866368,7868416,7870464,7872512,7874560,7876608,7878656,7880704,7882752,7884800,7886848,7888896,7890944,7892992,7895040,7897088,7899136,7901184,7903232,7905280,7907328,7909376,7911424,7913472,7915520,7917568,7919616,7921664,7923712,7925760,7927808,7929856,7931904,7933952,7936e3,7938048,7940096,7942144,7944192,7946240,7948288,7950336,7952384,7954432,7956480,7958528,7960576,7962624,7964672,7966720,7968768,7970816,7972864,7974912,7976960,7979008,7981056,7983104,7985152,7987200,7989248,7991296,7993344,7995392,7997440,7999488,8001536,8003584,8005632,8007680,8009728,8011776,8013824,8015872,8017920,8019968,8022016,8024064,8026112,8028160,8030208,8032256,8034304,8036352,8038400,8040448,8042496,8044544,8046592,8048640,8050688,8052736,8054784,8056832,8058880,8060928,8062976,8065024,8067072,8069120,8071168,8073216,8075264,8077312,8079360,8081408,8083456,8085504,8087552,8089600,8091648,8093696,8095744,8097792,8099840,8101888,8103936,8105984,8108032,8110080,8112128,8114176,8116224,8118272,8120320,8122368,8124416,8126464,8128512,8130560,8132608,8134656,8136704,8138752,8140800,8142848,8144896,8146944,8148992,8151040,8153088,8155136,8157184,8159232,8161280,8163328,8165376,8167424,8169472,8171520,8173568,8175616,8177664,8179712,8181760,8183808,8185856,8187904,8189952,8192e3,8194048,8196096,8198144,8200192,8202240,8204288,8206336,8208384,8210432,8212480,8214528,8216576,8218624,8220672,8222720,8224768,8226816,8228864,8230912,8232960,8235008,8237056,8239104,8241152,8243200,8245248,8247296,8249344,8251392,8253440,8255488,8257536,8259584,8261632,8263680,8265728,8267776,8269824,8271872,8273920,8275968,8278016,8280064,8282112,8284160,8286208,8288256,8290304,8292352,8294400,8296448,8298496,8300544,8302592,8304640,8306688,8308736,8310784,8312832,8314880,8316928,8318976,8321024,8323072,8325120,8327168,8329216,8331264,8333312,8335360,8337408,8339456,8341504,8343552,8345600,8347648,8349696,8351744,8353792,8355840,8357888,8359936,8361984,8364032,8366080,8368128,8370176,8372224,8374272,8376320,8378368,8380416,8382464,8384512,8386560,8388608,8390656,8392704,8394752,8396800,8398848,8400896,8402944,8404992,8407040,8409088,8411136,8413184,8415232,8417280,8419328,8421376,8423424,8425472,8427520,8429568,8431616,8433664,8435712,8437760,8439808,8441856,8443904,8445952,8448e3,8450048,8452096,8454144,8456192,8458240,8460288,8462336,8464384,8466432,8468480,8470528,8472576,8474624,8476672,8478720,8480768,8482816,8484864,8486912,8488960,8491008,8493056,8495104,8497152,8499200,8501248,8503296,8505344,8507392,8509440,8511488],sizessuccesses:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};i.data=o,n("object"==typeof t.LZ4,"LZ4 not present - was your app build with  -s LZ4=1  ?"),t.LZ4.loadPackage({metadata:e,compressedData:i},!1),t.removeRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_lpt.data")}t.FS_createPath("/","root",!0,!0),t.FS_createPath("/root","module_license_plate",!0,!0),t.FS_createPath("/root/module_license_plate","trained_models",!0,!0),t.addRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_lpt.data"),t.preloadResults||(t.preloadResults={}),t.preloadResults["/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_lpt.data"]={fromCache:!1},s?(r(s),s=null):a=r}s||function(e,r,o,i){if("object"!=typeof process||"object"!=typeof process.versions||"string"!=typeof process.versions.node){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onprogress=function(n){var o=e,i=r;if(n.total&&(i=n.total),n.loaded){a.addedTotal?t.dataFileDownloads[o].loaded=n.loaded:(a.addedTotal=!0,t.dataFileDownloads||(t.dataFileDownloads={}),t.dataFileDownloads[o]={loaded:n.loaded,total:i});var s=0,c=0,d=0;for(var l in t.dataFileDownloads){var u=t.dataFileDownloads[l];s+=u.total,c+=u.loaded,d++}s=Math.ceil(s*t.expectedDataFileDownloads/d),t.setStatus&&t.setStatus("Downloading data... ("+c+"/"+s+")")}else t.dataFileDownloads||t.setStatus&&t.setStatus("Downloading data...")},a.onerror=function(t){throw new Error("NetworkError for: "+e)},a.onload=function(e){if(!(200==a.status||304==a.status||206==a.status||0==a.status&&a.response))throw new Error(a.statusText+" : "+a.responseURL);var t=a.response;o(t)},a.send(null)}else n(9061).readFile(e,(function(e,t){e?i(e):o(t.buffer)}))}(t.anyline.__any_module_loc_f(o),i,(function(e){a?(a(e),a=null):s=e}),(function(e){console.error("package error:",e)})),t.calledRun?c():(t.preRun||(t.preRun=[]),t.preRun.push(c))}({files:[{filename:"/root/module_license_plate/license_plates_combined.ale",start:0,end:28832},{filename:"/root/module_license_plate/license_plates_us.ale",start:28832,end:48812},{filename:"/root/module_license_plate/trained_models/EU_LPT_Detector.any",start:48812,end:2354836},{filename:"/root/module_license_plate/trained_models/US_LPT_Detector.any",start:2354836,end:4657420},{filename:"/root/module_license_plate/trained_models/LPT.any",start:4657420,end:5954692},{filename:"/root/module_license_plate/trained_models/US_LPT_State_Classifier.any",start:5954692,end:6972412},{filename:"/root/module_license_plate/trained_models/EU_LPT_Classifier.any",start:6972412,end:7606452},{filename:"/root/module_license_plate/trained_models/US_LPT_Text_Classifier.any",start:7606452,end:8512028}],remote_package_size:8516124,package_uuid:"92d94664-3c31-4ad0-ae73-91aca729459a"})),"BARCODE"==t.anyline.__any_module_id.toUpperCase()&&((t=void 0!==e?e:{}).expectedDataFileDownloads||(t.expectedDataFileDownloads=0),t.expectedDataFileDownloads++,function(e){"object"==typeof window?window.encodeURIComponent(window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/"):"undefined"==typeof process&&"undefined"!=typeof location&&encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/");var r="data_barcode.data";"function"!=typeof t.locateFilePackage||t.locateFile||(t.locateFile=t.locateFilePackage,O("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));var o=t.locateFile?t.locateFile(r,""):r,i=e.remote_package_size;e.package_uuid;var a=null,s=t.getPreloadedPackage?t.getPreloadedPackage(o,i):null;function c(){function n(e,t){if(!e)throw t+(new Error).stack}function r(r){n(r,"Loading data file failed."),n(r instanceof ArrayBuffer,"bad input to processPackageData");var o=new Uint8Array(r),i={data:null,cachedOffset:11904,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[0,2048,4096,6144,8192,10240],sizes:[2048,2048,2048,2048,2048,1664],successes:[0,0,0,0,0,0]};i.data=o,n("object"==typeof t.LZ4,"LZ4 not present - was your app build with  -s LZ4=1  ?"),t.LZ4.loadPackage({metadata:e,compressedData:i},!1),t.removeRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_barcode.data")}t.FS_createPath("/","root",!0,!0),t.FS_createPath("/root","module_barcode",!0,!0),t.addRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_barcode.data"),t.preloadResults||(t.preloadResults={}),t.preloadResults["/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_barcode.data"]={fromCache:!1},s?(r(s),s=null):a=r}s||function(e,r,o,i){if("object"!=typeof process||"object"!=typeof process.versions||"string"!=typeof process.versions.node){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onprogress=function(n){var o=e,i=r;if(n.total&&(i=n.total),n.loaded){a.addedTotal?t.dataFileDownloads[o].loaded=n.loaded:(a.addedTotal=!0,t.dataFileDownloads||(t.dataFileDownloads={}),t.dataFileDownloads[o]={loaded:n.loaded,total:i});var s=0,c=0,d=0;for(var l in t.dataFileDownloads){var u=t.dataFileDownloads[l];s+=u.total,c+=u.loaded,d++}s=Math.ceil(s*t.expectedDataFileDownloads/d),t.setStatus&&t.setStatus("Downloading data... ("+c+"/"+s+")")}else t.dataFileDownloads||t.setStatus&&t.setStatus("Downloading data...")},a.onerror=function(t){throw new Error("NetworkError for: "+e)},a.onload=function(e){if(!(200==a.status||304==a.status||206==a.status||0==a.status&&a.response))throw new Error(a.statusText+" : "+a.responseURL);var t=a.response;o(t)},a.send(null)}else n(9061).readFile(e,(function(e,t){e?i(e):o(t.buffer)}))}(t.anyline.__any_module_loc_f(o),i,(function(e){a?(a(e),a=null):s=e}),(function(e){console.error("package error:",e)})),t.calledRun?c():(t.preRun||(t.preRun=[]),t.preRun.push(c))}({files:[{filename:"/root/module_barcode/ean.ale",start:0,end:9888},{filename:"/root/module_barcode/ean_advanced.ale",start:9888,end:11904}],remote_package_size:16e3,package_uuid:"b9e6c81b-8091-4fd9-9534-a863805410dc"})),"TIRE"==t.anyline.__any_module_id.toUpperCase()&&((t=void 0!==e?e:{}).expectedDataFileDownloads||(t.expectedDataFileDownloads=0),t.expectedDataFileDownloads++,function(e){"object"==typeof window?window.encodeURIComponent(window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/"):"undefined"==typeof process&&"undefined"!=typeof location&&encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/");var r="data_tire.data";"function"!=typeof t.locateFilePackage||t.locateFile||(t.locateFile=t.locateFilePackage,O("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));var o=t.locateFile?t.locateFile(r,""):r,i=e.remote_package_size;e.package_uuid;var a=null,s=t.getPreloadedPackage?t.getPreloadedPackage(o,i):null;function c(){function n(e,t){if(!e)throw t+(new Error).stack}function r(r){n(r,"Loading data file failed."),n(r instanceof ArrayBuffer,"bad input to processPackageData");var o=new Uint8Array(r),i={data:null,cachedOffset:12505345,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[0,2048,4096,6144,8192,10240,12288,14336,16384,18432,20480,22528,24576,26624,28672,30720,32768,34816,36864,38912,40960,43008,45056,47104,49152,51200,53248,55296,57344,59392,61440,63488,65536,67584,69632,71680,73728,75776,77824,79872,81920,83968,86016,88064,90112,92160,94208,96256,98304,100352,102400,104448,106496,108544,110592,112640,114688,116736,118784,120832,122880,124928,126976,129024,131072,133120,135168,137216,139264,141312,143360,145408,147456,149504,151552,153600,155648,157696,159744,161792,163840,165888,167936,169984,172032,174080,176128,178176,180224,182272,184320,186368,188416,190464,192512,194560,196608,198656,200704,202752,204800,206848,208896,210944,212992,215040,217088,219136,221184,223232,225280,227328,229376,231424,233472,235520,237568,239616,241664,243712,245760,247808,249856,251904,253952,256e3,258048,260096,262144,264192,266240,268288,270336,272384,274432,276480,278528,280576,282624,284672,286720,288768,290816,292864,294912,296960,299008,301056,303104,305152,307200,309248,311296,313344,315392,317440,319488,321536,323584,325632,327680,329728,331776,333824,335872,337920,339968,342016,344064,346112,348160,350208,352256,354304,356352,358400,360448,362496,364544,366592,368640,370688,372736,374784,376832,378880,380928,382976,385024,387072,389120,391168,393216,395264,397312,399360,401408,403456,405504,407552,409600,411648,413696,415744,417792,419840,421888,423936,425984,428032,430080,432128,434176,436224,438272,440320,442368,444416,446464,448512,450560,452608,454656,456704,458752,460800,462848,464896,466944,468992,471040,473088,475136,477184,479232,481280,483328,485376,487424,489472,491520,493568,495616,497664,499712,501760,503808,505856,507904,509952,512e3,514048,516096,518144,520192,522240,524288,526336,528384,530432,532480,534528,536576,538624,540672,542720,544768,546816,548864,550912,552960,555008,557056,559104,561152,563200,565248,567296,569344,571392,573440,575488,577536,579584,581632,583680,585728,587776,589824,591872,593920,595968,598016,600064,602112,604160,606208,608256,610304,612352,614400,616448,618496,620544,622592,624640,626688,628736,630784,632832,634880,636928,638976,641024,643072,645120,647168,649216,651264,653312,655360,657408,659456,661504,663552,665600,667648,669696,671744,673792,675840,677888,679936,681984,684032,686080,688128,690176,692224,694272,696320,698368,700416,702464,704512,706560,708608,710656,712704,714752,716800,718848,720896,722944,724992,727040,729088,731136,733184,735232,737280,739328,741376,743424,745472,747520,749568,751616,753664,755712,757760,759808,761856,763904,765952,768e3,770048,772096,774144,776192,778240,780288,782336,784384,786432,788480,790528,792576,794624,796672,798720,800768,802816,804864,806912,808960,811008,813056,815104,817152,819200,821248,823296,825344,827392,829440,831488,833536,835584,837632,839680,841728,843776,845824,847872,849920,851968,854016,856064,858112,860160,862208,864256,866304,868352,870400,872448,874496,876544,878592,880640,882688,884736,886784,888832,890880,892928,894976,897024,899072,901120,903168,905216,907264,909312,911360,913408,915456,917504,919552,921600,923648,925696,927744,929792,931840,933888,935936,937984,940032,942080,944128,946176,948224,950272,952320,954368,956416,958464,960512,962560,964608,966656,968704,970752,972800,974848,976896,978944,980992,983040,985088,987136,989184,991232,993280,995328,997376,999424,1001472,1003520,1005568,1007616,1009664,1011712,1013760,1015808,1017856,1019904,1021952,1024e3,1026048,1028096,1030144,1032192,1034240,1036288,1038336,1040384,1042432,1044480,1046528,1048576,1050624,1052672,1054720,1056768,1058816,1060864,1062912,1064960,1067008,1069056,1071104,1073152,1075200,1077248,1079296,1081344,1083392,1085440,1087488,1089536,1091584,1093632,1095680,1097728,1099776,1101824,1103872,1105920,1107968,1110016,1112064,1114112,1116160,1118208,1120256,1122304,1124352,1126400,1128448,1130496,1132544,1134592,1136640,1138688,1140736,1142784,1144832,1146880,1148928,1150976,1153024,1155072,1157120,1159168,1161216,1163264,1165312,1167360,1169408,1171456,1173504,1175552,1177600,1179648,1181696,1183744,1185792,1187840,1189888,1191936,1193984,1196032,1198080,1200128,1202176,1204224,1206272,1208320,1210368,1212416,1214464,1216512,1218560,1220608,1222656,1224704,1226752,1228800,1230848,1232896,1234944,1236992,1239040,1241088,1243136,1245184,1247232,1249280,1251328,1253376,1255424,1257472,1259520,1261568,1263616,1265664,1267712,1269760,1271808,1273856,1275904,1277952,128e4,1282048,1284096,1286144,1288192,1290240,1292288,1294336,1296384,1298432,1300480,1302528,1304576,1306624,1308672,1310720,1312768,1314816,1316864,1318912,1320960,1323008,1325056,1327104,1329152,1331200,1333248,1335296,1337344,1339392,1341440,1343488,1345536,1347584,1349632,1351680,1353728,1355776,1357824,1359872,1361920,1363968,1366016,1368064,1370112,1372160,1374208,1376256,1378304,1380352,1382400,1384448,1386496,1388544,1390592,1392640,1394688,1396736,1398784,1400832,1402880,1404928,1406976,1409024,1411072,1413120,1415168,1417216,1419264,1421312,1423360,1425408,1427456,1429504,1431552,1433600,1435648,1437696,1439744,1441792,1443840,1445888,1447936,1449984,1452032,1454080,1456128,1458176,1460224,1462272,1464320,1466368,1468416,1470464,1472512,1474560,1476608,1478656,1480704,1482752,1484800,1486848,1488896,1490944,1492992,1495040,1497088,1499136,1501184,1503232,1505280,1507328,1509376,1511424,1513472,1515520,1517568,1519616,1521664,1523712,1525760,1527808,1529856,1531904,1533952,1536e3,1538048,1540096,1542144,1544192,1546240,1548288,1550336,1552384,1554432,1556480,1558528,1560576,1562624,1564672,1566720,1568768,1570816,1572864,1574912,1576960,1579008,1581056,1583104,1585152,1587200,1589248,1591296,1593344,1595392,1597440,1599488,1601536,1603584,1605632,1607680,1609728,1611776,1613824,1615872,1617920,1619968,1622016,1624064,1626112,1628160,1630208,1632256,1634304,1636352,1638400,1640448,1642496,1644544,1646592,1648640,1650688,1652736,1654784,1656832,1658880,1660928,1662976,1665024,1667072,1669120,1671168,1673216,1675264,1677312,1679360,1681408,1683456,1685504,1687552,1689600,1691648,1693696,1695744,1697792,1699840,1701888,1703936,1705984,1708032,1710080,1712128,1714176,1716224,1718272,1720320,1722368,1724416,1726464,1728512,1730560,1732608,1734656,1736704,1738752,1740800,1742848,1744896,1746944,1748992,1751040,1753088,1755136,1757184,1759232,1761280,1763328,1765376,1767424,1769472,1771520,1773568,1775616,1777664,1779712,1781760,1783808,1785856,1787904,1789952,1792e3,1794048,1796096,1798144,1800192,1802240,1804288,1806336,1808384,1810432,1812480,1814528,1816576,1818624,1820672,1822720,1824768,1826816,1828864,1830912,1832960,1835008,1837056,1839104,1841152,1843200,1845248,1847296,1849344,1851392,1853440,1855488,1857536,1859584,1861632,1863680,1865728,1867776,1869824,1871872,1873920,1875968,1878016,1880064,1882112,1884160,1886208,1888256,1890304,1892352,1894400,1896448,1898496,1900544,1902592,1904640,1906688,1908736,1910784,1912832,1914880,1916928,1918976,1921024,1923072,1925120,1927168,1929216,1931264,1933312,1935360,1937408,1939456,1941504,1943552,1945600,1947648,1949696,1951744,1953792,1955840,1957888,1959936,1961984,1964032,1966080,1968128,1970176,1972224,1974272,1976320,1978368,1980416,1982464,1984512,1986560,1988608,1990656,1992704,1994752,1996800,1998848,2000896,2002944,2004992,2007040,2009088,2011136,2013184,2015232,2017280,2019328,2021376,2023424,2025472,2027520,2029568,2031616,2033664,2035712,2037760,2039808,2041856,2043904,2045952,2048e3,2050048,2052096,2054144,2056192,2058240,2060288,2062336,2064384,2066432,2068480,2070528,2072576,2074624,2076672,2078720,2080768,2082816,2084864,2086912,2088960,2091008,2093056,2095104,2097152,2099200,2101248,2103296,2105344,2107392,2109440,2111488,2113536,2115584,2117632,2119680,2121728,2123776,2125824,2127872,2129920,2131968,2134016,2136064,2138112,2140160,2142208,2144256,2146304,2148352,2150400,2152448,2154496,2156544,2158592,2160640,2162688,2164736,2166784,2168832,2170880,2172928,2174976,2177024,2179072,2181120,2183168,2185216,2187264,2189312,2191360,2193408,2195456,2197504,2199552,2201600,2203648,2205696,2207744,2209792,2211840,2213888,2215936,2217984,2220032,2222080,2224128,2226176,2228224,2230272,2232320,2234368,2236416,2238464,2240512,2242560,2244608,2246656,2248704,2250752,2252800,2254848,2256896,2258944,2260992,2263040,2265088,2267136,2269184,2271232,2273280,2275328,2277376,2279424,2281472,2283520,2285568,2287616,2289664,2291712,2293760,2295808,2297856,2299904,2301952,2304e3,2306048,2308096,2310144,2312192,2314240,2316288,2318336,2320384,2322432,2324480,2326528,2328576,2330624,2332672,2334720,2336768,2338816,2340864,2342912,2344960,2347008,2349056,2351104,2353152,2355200,2357248,2359296,2361344,2363392,2365440,2367488,2369536,2371584,2373632,2375680,2377728,2379776,2381824,2383872,2385920,2387968,2390016,2392064,2394112,2396160,2398208,2400256,2402304,2404352,2406400,2408448,2410496,2412544,2414592,2416640,2418688,2420736,2422784,2424832,2426880,2428928,2430976,2433024,2435072,2437120,2439168,2441216,2443264,2445312,2447360,2449408,2451456,2453504,2455552,2457600,2459648,2461696,2463744,2465792,2467840,2469888,2471936,2473984,2476032,2478080,2480128,2482176,2484224,2486272,2488320,2490368,2492416,2494464,2496512,2498560,2500608,2502656,2504704,2506752,2508800,2510848,2512896,2514944,2516992,2519040,2521088,2523136,2525184,2527232,2529280,2531328,2533376,2535424,2537472,2539520,2541568,2543616,2545664,2547712,2549760,2551808,2553856,2555904,2557952,256e4,2562048,2564096,2566144,2568192,2570240,2572288,2574336,2576384,2578432,2580480,2582528,2584576,2586624,2588672,2590720,2592768,2594816,2596864,2598912,2600960,2603008,2605056,2607104,2609152,2611200,2613248,2615296,2617344,2619392,2621440,2623488,2625536,2627584,2629632,2631680,2633728,2635776,2637824,2639872,2641920,2643968,2646016,2648064,2650112,2652160,2654208,2656256,2658304,2660352,2662400,2664448,2666496,2668544,2670592,2672640,2674688,2676736,2678784,2680832,2682880,2684928,2686976,2689024,2691072,2693120,2695168,2697216,2699264,2701312,2703360,2705408,2707456,2709504,2711552,2713600,2715648,2717696,2719744,2721792,2723840,2725888,2727936,2729984,2732032,2734080,2736128,2738176,2740224,2742272,2744320,2746368,2748416,2750464,2752512,2754560,2756608,2758656,2760704,2762752,2764800,2766848,2768896,2770944,2772992,2775040,2777088,2779136,2781184,2783232,2785280,2787328,2789376,2791424,2793472,2795520,2797568,2799616,2801664,2803712,2805760,2807808,2809856,2811904,2813952,2816e3,2818048,2820096,2822144,2824192,2826240,2828288,2830336,2832384,2834432,2836480,2838528,2840576,2842624,2844672,2846720,2848768,2850816,2852864,2854912,2856960,2859008,2861056,2863104,2865152,2867200,2869248,2871296,2873344,2875392,2877440,2879488,2881536,2883584,2885632,2887680,2889728,2891776,2893824,2895872,2897920,2899968,2902016,2904064,2906112,2908160,2910208,2912256,2914304,2916352,2918400,2920448,2922496,2924544,2926592,2928640,2930688,2932736,2934784,2936832,2938880,2940928,2942976,2945024,2947072,2949120,2951168,2953216,2955264,2957312,2959360,2961408,2963456,2965504,2967552,2969600,2971648,2973696,2975744,2977792,2979840,2981888,2983936,2985984,2988032,2990080,2992128,2994176,2996224,2998272,3000320,3002368,3004416,3006464,3008512,3010560,3012608,3014656,3016704,3018752,3020800,3022848,3024896,3026944,3028992,3031040,3033088,3035136,3037184,3039232,3041280,3043328,3045376,3047424,3049472,3051520,3053568,3055616,3057664,3059712,3061760,3063808,3065856,3067904,3069952,3072e3,3074048,3076096,3078144,3080192,3082240,3084288,3086336,3088384,3090432,3092480,3094528,3096576,3098624,3100672,3102720,3104768,3106816,3108864,3110912,3112960,3115008,3117056,3119104,3121152,3123200,3125248,3127296,3129344,3131392,3133440,3135488,3137536,3139584,3141632,3143680,3145728,3147776,3149824,3151872,3153920,3155968,3158016,3160064,3162112,3164160,3166208,3168256,3170304,3172352,3174400,3176448,3178496,3180544,3182592,3184640,3186688,3188736,3190784,3192832,3194880,3196928,3198976,3201024,3203072,3205120,3207168,3209216,3211264,3213312,3215360,3217408,3219456,3221504,3223552,3225600,3227648,3229696,3231744,3233792,3235840,3237888,3239936,3241984,3244032,3246080,3248128,3250176,3252224,3254272,3256320,3258368,3260416,3262464,3264512,3266560,3268608,3270656,3272704,3274752,3276800,3278848,3280896,3282944,3284992,3287040,3289088,3291136,3293184,3295232,3297280,3299328,3301376,3303424,3305472,3307520,3309568,3311616,3313664,3315712,3317760,3319808,3321856,3323904,3325952,3328e3,3330048,3332096,3334144,3336192,3338240,3340288,3342336,3344384,3346432,3348480,3350528,3352576,3354624,3356672,3358720,3360768,3362816,3364864,3366912,3368960,3371008,3373056,3375104,3377152,3379200,3381248,3383296,3385344,3387392,3389440,3391488,3393536,3395584,3397632,3399680,3401728,3403776,3405824,3407872,3409920,3411968,3414016,3416064,3418112,3420160,3422208,3424256,3426304,3428352,3430400,3432448,3434496,3436544,3438592,3440640,3442688,3444736,3446784,3448832,3450880,3452928,3454976,3457024,3459072,3461120,3463168,3465216,3467264,3469312,3471360,3473408,3475456,3477504,3479552,3481600,3483648,3485696,3487744,3489792,3491840,3493888,3495936,3497984,3500032,3502080,3504128,3506176,3508224,3510272,3512320,3514368,3516416,3518464,3520512,3522560,3524608,3526656,3528704,3530752,3532800,3534848,3536896,3538944,3540992,3543040,3545088,3547136,3549184,3551232,3553280,3555328,3557376,3559424,3561472,3563520,3565568,3567616,3569664,3571712,3573760,3575808,3577856,3579904,3581952,3584e3,3586048,3588096,3590144,3592192,3594240,3596288,3598336,3600384,3602432,3604480,3606528,3608576,3610624,3612672,3614720,3616768,3618816,3620864,3622912,3624960,3627008,3629056,3631104,3633152,3635200,3637248,3639296,3641344,3643392,3645440,3647488,3649536,3651584,3653632,3655680,3657728,3659776,3661824,3663872,3665920,3667968,3670016,3672064,3674112,3676160,3678208,3680256,3682304,3684352,3686400,3688448,3690496,3692544,3694592,3696640,3698688,3700736,3702784,3704832,3706880,3708928,3710976,3713024,3715072,3717120,3719168,3721216,3723264,3725312,3727360,3729408,3731456,3733504,3735552,3737600,3739648,3741696,3743744,3745792,3747840,3749888,3751936,3753984,3756032,3758080,3760128,3762176,3764224,3766272,3768320,3770368,3772416,3774464,3776512,3778560,3780608,3782656,3784704,3786752,3788800,3790848,3792896,3794944,3796992,3799040,3801088,3803136,3805184,3807232,3809280,3811328,3813376,3815424,3817472,3819520,3821568,3823616,3825664,3827712,3829760,3831808,3833856,3835904,3837952,384e4,3842048,3844096,3846144,3848192,3850240,3852288,3854336,3856384,3858432,3860480,3862528,3864576,3866624,3868672,3870720,3872768,3874816,3876864,3878912,3880960,3883008,3885056,3887104,3889152,3891200,3893248,3895296,3897344,3899392,3901440,3903488,3905536,3907584,3909632,3911680,3913728,3915776,3917824,3919872,3921920,3923968,3926016,3928064,3930112,3932160,3934208,3936256,3938304,3940352,3942400,3944448,3946496,3948544,3950592,3952640,3954688,3956736,3958784,3960832,3962880,3964928,3966976,3969024,3971072,3973120,3975168,3977216,3979264,3981312,3983360,3985408,3987456,3989504,3991552,3993600,3995648,3997696,3999744,4001792,4003840,4005888,4007936,4009984,4012032,4014080,4016128,4018176,4020224,4022272,4024320,4026368,4028416,4030464,4032512,4034560,4036608,4038656,4040704,4042752,4044800,4046848,4048896,4050944,4052992,4055040,4057088,4059136,4061184,4063232,4065280,4067328,4069376,4071424,4073472,4075520,4077568,4079616,4081664,4083712,4085760,4087808,4089856,4091904,4093952,4096e3,4098048,4100096,4102144,4104192,4106240,4108288,4110336,4112384,4114432,4116480,4118528,4120576,4122624,4124672,4126720,4128768,4130816,4132864,4134912,4136960,4139008,4141056,4143104,4145152,4147200,4149248,4151296,4153344,4155392,4157440,4159488,4161536,4163584,4165632,4167680,4169728,4171776,4173824,4175872,4177920,4179968,4182016,4184064,4186112,4188160,4190208,4192256,4194304,4196352,4198400,4200448,4202496,4204544,4206592,4208640,4210688,4212736,4214784,4216832,4218880,4220928,4222976,4225024,4227072,4229120,4231168,4233216,4235264,4237312,4239360,4241408,4243456,4245504,4247552,4249600,4251648,4253696,4255744,4257792,4259840,4261888,4263936,4265984,4268032,4270080,4272128,4274176,4276224,4278272,4280320,4282368,4284416,4286464,4288512,4290560,4292608,4294656,4296704,4298752,4300800,4302848,4304896,4306944,4308992,4311040,4313088,4315136,4317184,4319232,4321280,4323328,4325376,4327424,4329472,4331520,4333568,4335616,4337664,4339712,4341760,4343808,4345856,4347904,4349952,4352e3,4354048,4356096,4358144,4360192,4362240,4364288,4366336,4368384,4370432,4372480,4374528,4376576,4378624,4380672,4382720,4384768,4386816,4388864,4390912,4392960,4395008,4397056,4399104,4401152,4403200,4405248,4407296,4409344,4411392,4413440,4415488,4417536,4419584,4421632,4423680,4425728,4427776,4429824,4431872,4433920,4435968,4438016,4440064,4442112,4444160,4446208,4448256,4450304,4452352,4454400,4456448,4458496,4460544,4462592,4464640,4466688,4468736,4470784,4472832,4474880,4476928,4478976,4481024,4483072,4485120,4487168,4489216,4491264,4493312,4495360,4497408,4499456,4501504,4503552,4505600,4507648,4509696,4511744,4513792,4515840,4517888,4519936,4521984,4524032,4526080,4528128,4530176,4532224,4534272,4536320,4538368,4540416,4542464,4544512,4546560,4548608,4550656,4552704,4554752,4556800,4558848,4560896,4562944,4564992,4567040,4569088,4571136,4573184,4575232,4577280,4579328,4581376,4583424,4585472,4587520,4589568,4591616,4593664,4595712,4597760,4599808,4601856,4603904,4605952,4608esizessuccesses:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};i.data=o,n("object"==typeof t.LZ4,"LZ4 not present - was your app build with  -s LZ4=1  ?"),t.LZ4.loadPackage({metadata:e,compressedData:i},!1),t.removeRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_tire.data")}t.FS_createPath("/","root",!0,!0),t.FS_createPath("/root","module_tire",!0,!0),t.FS_createPath("/root/module_tire","trained_models",!0,!0),t.addRunDependency("datafile_/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_tire.data"),t.preloadResults||(t.preloadResults={}),t.preloadResults["/Users/david/code/anylinejs-develop7/vendor/ui/../wasm/data/data_tire.data"]={fromCache:!1},s?(r(s),s=null):a=r}s||function(e,r,o,i){if("object"!=typeof process||"object"!=typeof process.versions||"string"!=typeof process.versions.node){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onprogress=function(n){var o=e,i=r;if(n.total&&(i=n.total),n.loaded){a.addedTotal?t.dataFileDownloads[o].loaded=n.loaded:(a.addedTotal=!0,t.dataFileDownloads||(t.dataFileDownloads={}),t.dataFileDownloads[o]={loaded:n.loaded,total:i});var s=0,c=0,d=0;for(var l in t.dataFileDownloads){var u=t.dataFileDownloads[l];s+=u.total,c+=u.loaded,d++}s=Math.ceil(s*t.expectedDataFileDownloads/d),t.setStatus&&t.setStatus("Downloading data... ("+c+"/"+s+")")}else t.dataFileDownloads||t.setStatus&&t.setStatus("Downloading data...")},a.onerror=function(t){throw new Error("NetworkError for: "+e)},a.onload=function(e){if(!(200==a.status||304==a.status||206==a.status||0==a.status&&a.response))throw new Error(a.statusText+" : "+a.responseURL);var t=a.response;o(t)},a.send(null)}else n(9061).readFile(e,(function(e,t){e?i(e):o(t.buffer)}))}(t.anyline.__any_module_loc_f(o),i,(function(e){a?(a(e),a=null):s=e}),(function(e){console.error("package error:",e)})),t.calledRun?c():(t.preRun||(t.preRun=[]),t.preRun.push(c))}({files:[{filename:"/root/module_tire/tin.ale",start:0,end:37216},{filename:"/root/module_tire/tire_id.ale",start:37216,end:56152},{filename:"/root/module_tire/tin_universal.ale",start:56152,end:88272},{filename:"/root/module_tire/tire_size.ale",start:88272,end:114760},{filename:"/root/module_tire/trained_models/class_ctin14.any",start:114760,end:2294864},{filename:"/root/module_tire/trained_models/det_ctin3.any",start:2294864,end:2382744},{filename:"/root/module_tire/trained_models/comb_rw_10Lite.any",start:2382744,end:2641200},{filename:"/root/module_tire/trained_models/classification_tire_size.any",start:2641200,end:5090984},{filename:"/root/module_tire/trained_models/tin_universal.any",start:5090984,end:7527152},{filename:"/root/module_tire/trained_models/tire-size-classifier_cfe5bf8a-a837-469c-86d1-1046f94490aa.any",start:7527152,end:9982504},{filename:"/root/module_tire/trained_models/det_tire_size_poly.any",start:9982504,end:10069920},{filename:"/root/module_tire/trained_models/tin_v2.any",start:10069920,end:12505336}],remote_package_size:12509441,package_uuid:"9d40eed1-9966-44f3-9a17-36137891c5fa"})),t.ready=new Promise((function(e,t){o=e,i=t})),Object.getOwnPropertyDescriptor(t.ready,"_main")||(Object.defineProperty(t.ready,"_main",{configurable:!0,get:function(){Ae("You are getting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_main",{configurable:!0,set:function(){Ae("You are setting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_emscripten_stack_get_end")||(Object.defineProperty(t.ready,"_emscripten_stack_get_end",{configurable:!0,get:function(){Ae("You are getting _emscripten_stack_get_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_emscripten_stack_get_end",{configurable:!0,set:function(){Ae("You are setting _emscripten_stack_get_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_emscripten_stack_get_free")||(Object.defineProperty(t.ready,"_emscripten_stack_get_free",{configurable:!0,get:function(){Ae("You are getting _emscripten_stack_get_free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_emscripten_stack_get_free",{configurable:!0,set:function(){Ae("You are setting _emscripten_stack_get_free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_emscripten_stack_init")||(Object.defineProperty(t.ready,"_emscripten_stack_init",{configurable:!0,get:function(){Ae("You are getting _emscripten_stack_init on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_emscripten_stack_init",{configurable:!0,set:function(){Ae("You are setting _emscripten_stack_init on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_stackSave")||(Object.defineProperty(t.ready,"_stackSave",{configurable:!0,get:function(){Ae("You are getting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_stackSave",{configurable:!0,set:function(){Ae("You are setting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_stackRestore")||(Object.defineProperty(t.ready,"_stackRestore",{configurable:!0,get:function(){Ae("You are getting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_stackRestore",{configurable:!0,set:function(){Ae("You are setting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_stackAlloc")||(Object.defineProperty(t.ready,"_stackAlloc",{configurable:!0,get:function(){Ae("You are getting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_stackAlloc",{configurable:!0,set:function(){Ae("You are setting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___wasm_call_ctors")||(Object.defineProperty(t.ready,"___wasm_call_ctors",{configurable:!0,get:function(){Ae("You are getting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___wasm_call_ctors",{configurable:!0,set:function(){Ae("You are setting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_fflush")||(Object.defineProperty(t.ready,"_fflush",{configurable:!0,get:function(){Ae("You are getting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_fflush",{configurable:!0,set:function(){Ae("You are setting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___errno_location")||(Object.defineProperty(t.ready,"___errno_location",{configurable:!0,get:function(){Ae("You are getting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___errno_location",{configurable:!0,set:function(){Ae("You are setting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_malloc")||(Object.defineProperty(t.ready,"_malloc",{configurable:!0,get:function(){Ae("You are getting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_malloc",{configurable:!0,set:function(){Ae("You are setting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_free")||(Object.defineProperty(t.ready,"_free",{configurable:!0,get:function(){Ae("You are getting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_free",{configurable:!0,set:function(){Ae("You are setting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___cxa_is_pointer_type")||(Object.defineProperty(t.ready,"___cxa_is_pointer_type",{configurable:!0,get:function(){Ae("You are getting ___cxa_is_pointer_type on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___cxa_is_pointer_type",{configurable:!0,set:function(){Ae("You are setting ___cxa_is_pointer_type on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___cxa_can_catch")||(Object.defineProperty(t.ready,"___cxa_can_catch",{configurable:!0,get:function(){Ae("You are getting ___cxa_can_catch on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___cxa_can_catch",{configurable:!0,set:function(){Ae("You are setting ___cxa_can_catch on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_setThrew")||(Object.defineProperty(t.ready,"_setThrew",{configurable:!0,get:function(){Ae("You are getting _setThrew on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_setThrew",{configurable:!0,set:function(){Ae("You are setting _setThrew on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___dl_seterr")||(Object.defineProperty(t.ready,"___dl_seterr",{configurable:!0,get:function(){Ae("You are getting ___dl_seterr on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___dl_seterr",{configurable:!0,set:function(){Ae("You are setting ___dl_seterr on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_emscripten_main_thread_process_queued_calls")||(Object.defineProperty(t.ready,"_emscripten_main_thread_process_queued_calls",{configurable:!0,get:function(){Ae("You are getting _emscripten_main_thread_process_queued_calls on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_emscripten_main_thread_process_queued_calls",{configurable:!0,set:function(){Ae("You are setting _emscripten_main_thread_process_queued_calls on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_saveSetjmp")||(Object.defineProperty(t.ready,"_saveSetjmp",{configurable:!0,get:function(){Ae("You are getting _saveSetjmp on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_saveSetjmp",{configurable:!0,set:function(){Ae("You are setting _saveSetjmp on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_ntohs")||(Object.defineProperty(t.ready,"_ntohs",{configurable:!0,get:function(){Ae("You are getting _ntohs on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_ntohs",{configurable:!0,set:function(){Ae("You are setting _ntohs on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_htons")||(Object.defineProperty(t.ready,"_htons",{configurable:!0,get:function(){Ae("You are getting _htons on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_htons",{configurable:!0,set:function(){Ae("You are setting _htons on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"_htonl")||(Object.defineProperty(t.ready,"_htonl",{configurable:!0,get:function(){Ae("You are getting _htonl on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"_htonl",{configurable:!0,set:function(){Ae("You are setting _htonl on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"__get_tzname")||(Object.defineProperty(t.ready,"__get_tzname",{configurable:!0,get:function(){Ae("You are getting __get_tzname on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"__get_tzname",{configurable:!0,set:function(){Ae("You are setting __get_tzname on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"__get_daylight")||(Object.defineProperty(t.ready,"__get_daylight",{configurable:!0,get:function(){Ae("You are getting __get_daylight on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"__get_daylight",{configurable:!0,set:function(){Ae("You are setting __get_daylight on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"__get_timezone")||(Object.defineProperty(t.ready,"__get_timezone",{configurable:!0,get:function(){Ae("You are getting __get_timezone on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"__get_timezone",{configurable:!0,set:function(){Ae("You are setting __get_timezone on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___getTypeName")||(Object.defineProperty(t.ready,"___getTypeName",{configurable:!0,get:function(){Ae("You are getting ___getTypeName on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___getTypeName",{configurable:!0,set:function(){Ae("You are setting ___getTypeName on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"___embind_register_native_and_builtin_types")||(Object.defineProperty(t.ready,"___embind_register_native_and_builtin_types",{configurable:!0,get:function(){Ae("You are getting ___embind_register_native_and_builtin_types on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"___embind_register_native_and_builtin_types",{configurable:!0,set:function(){Ae("You are setting ___embind_register_native_and_builtin_types on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(t.ready,"onRuntimeInitialized")||(Object.defineProperty(t.ready,"onRuntimeInitialized",{configurable:!0,get:function(){Ae("You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(t.ready,"onRuntimeInitialized",{configurable:!0,set:function(){Ae("You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),t.locateFile=function(e,n){let r=t.anyline.__any_module_loc+e+".wgx";return!0===t.anyline.DEBUG&&console.log("DEBUG: Loading wasm from ",r),r};var a,s={};for(a in t)t.hasOwnProperty(a)&&(s[a]=t[a]);var c=[],d="./this.program",l=function(e,t){throw t},u=!1,f=!0,p=!1,_=!1;if(t.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");var h,g,m,w="";function E(e){return t.locateFile?t.locateFile(e,w):w+e}function y(e){if(!(e instanceof aa)){var t=e;e&&"object"==typeof e&&e.stack&&(t=[e,e.stack]),O("exiting due to exception: "+t)}}if(_){if("object"==typeof process||"object"==typeof window||"function"==typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");"undefined"!=typeof read&&(h=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(A("object"==typeof(t=read(e,"binary"))),t)},g=function(e,t,n){setTimeout((function(){t(m(e))}),0)},"undefined"!=typeof scriptArgs?c=scriptArgs:void 0!==arguments&&(c=arguments),"function"==typeof quit&&(l=function(e,t){y(t),quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)}else{if(!u&&!f)throw new Error("environment detection error");if(f?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),r&&(w=r),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"","object"!=typeof window&&"function"!=typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");h=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),g=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}}var v=t.print||console.log.bind(console),O=t.printErr||console.warn.bind(console);for(a in s)s.hasOwnProperty(a)&&(t[a]=s[a]);function b(e){b.shown||(b.shown={}),b.shown[e]||(b.shown[e]=1,O(e))}s=null,t.arguments&&(c=t.arguments),Object.getOwnPropertyDescriptor(t,"arguments")||Object.defineProperty(t,"arguments",{configurable:!0,get:function(){Ae("Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),t.thisProgram&&(d=t.thisProgram),Object.getOwnPropertyDescriptor(t,"thisProgram")||Object.defineProperty(t,"thisProgram",{configurable:!0,get:function(){Ae("Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),t.quit&&(l=t.quit),Object.getOwnPropertyDescriptor(t,"quit")||Object.defineProperty(t,"quit",{configurable:!0,get:function(){Ae("Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),A(void 0===t.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),A(void 0===t.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),A(void 0===t.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),A(void 0===t.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),A(void 0===t.read,"Module.read option was removed (modify read_ in JS)"),A(void 0===t.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),A(void 0===t.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),A(void 0===t.setWindowTitle,"Module.setWindowTitle option was removed (modify setWindowTitle in JS)"),A(void 0===t.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),Object.getOwnPropertyDescriptor(t,"read")||Object.defineProperty(t,"read",{configurable:!0,get:function(){Ae("Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),Object.getOwnPropertyDescriptor(t,"readAsync")||Object.defineProperty(t,"readAsync",{configurable:!0,get:function(){Ae("Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),Object.getOwnPropertyDescriptor(t,"readBinary")||Object.defineProperty(t,"readBinary",{configurable:!0,get:function(){Ae("Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),Object.getOwnPropertyDescriptor(t,"setWindowTitle")||Object.defineProperty(t,"setWindowTitle",{configurable:!0,get:function(){Ae("Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),A(!u,"web environment detected but not enabled at build time.  Add 'web' to `-s ENVIRONMENT` to enable."),A(!p,"node environment detected but not enabled at build time.  Add 'node' to `-s ENVIRONMENT` to enable."),A(!_,"shell environment detected but not enabled at build time.  Add 'shell' to `-s ENVIRONMENT` to enable.");var T,D=0,R=function(e){D=e},P=function(){return D};t.wasmBinary&&(T=t.wasmBinary),Object.getOwnPropertyDescriptor(t,"wasmBinary")||Object.defineProperty(t,"wasmBinary",{configurable:!0,get:function(){Ae("Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}});var M,k=t.noExitRuntime||!0;Object.getOwnPropertyDescriptor(t,"noExitRuntime")||Object.defineProperty(t,"noExitRuntime",{configurable:!0,get:function(){Ae("Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),"object"!=typeof WebAssembly&&Ae("no native wasm support detected");var S=!1;function A(e,t){e||Ae("Assertion failed: "+t)}var F="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function j(e,t,n){for(var r=t+n,o=t;e[o]&&!(o>=r);)++o;if(o-t>16&&e.subarray&&F)return F.decode(e.subarray(t,o));for(var i="";t<o;){var a=e[t++];if(128&a){var s=63&e[t++];if(192!=(224&a)){var c=63&e[t++];if(224==(240&a)?a=(15&a)<<12|s<<6|c:(240!=(248&a)&&b("Invalid UTF-8 leading byte 0x"+a.toString(16)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),a=(7&a)<<18|s<<12|c<<6|63&e[t++]),a<65536)i+=String.fromCharCode(a);else{var d=a-65536;i+=String.fromCharCode(55296|d>>10,56320|1023&d)}}else i+=String.fromCharCode((31&a)<<6|s)}else i+=String.fromCharCode(a)}return i}function I(e,t){return e?j(L,e,t):""}function x(e,t,n,r){if(!(r>0))return 0;for(var o=n,i=n+r-1,a=0;a<e.length;++a){var s=e.charCodeAt(a);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),s<=127){if(n>=i)break;t[n++]=s}else if(s<=2047){if(n+1>=i)break;t[n++]=192|s>>6,t[n++]=128|63&s}else if(s<=65535){if(n+2>=i)break;t[n++]=224|s>>12,t[n++]=128|s>>6&63,t[n++]=128|63&s}else{if(n+3>=i)break;s>1114111&&b("Invalid Unicode code point 0x"+s.toString(16)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),t[n++]=240|s>>18,t[n++]=128|s>>12&63,t[n++]=128|s>>6&63,t[n++]=128|63&s}}return t[n]=0,n-o}function U(e,t,n){return A("number"==typeof n,"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),x(e,L,t,n)}function N(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}var C,H,L,X,z,Q,B,W,Z,G="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function Y(e,t){A(e%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");for(var n=e,r=n>>1,o=r+t/2;!(r>=o)&&z[r];)++r;if((n=r<<1)-e>32&&G)return G.decode(L.subarray(e,n));for(var i="",a=0;!(a>=t/2);++a){var s=X[e+2*a>>1];if(0==s)break;i+=String.fromCharCode(s)}return i}function V(e,t,n){if(A(t%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!"),A("number"==typeof n,"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===n&&(n=2147483647),n<2)return 0;for(var r=t,o=(n-=2)<2*e.length?n/2:e.length,i=0;i<o;++i){var a=e.charCodeAt(i);X[t>>1]=a,t+=2}return X[t>>1]=0,t-r}function K(e){return 2*e.length}function q(e,t){A(e%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");for(var n=0,r="";!(n>=t/4);){var o=Q[e+4*n>>2];if(0==o)break;if(++n,o>=65536){var i=o-65536;r+=String.fromCharCode(55296|i>>10,56320|1023&i)}else r+=String.fromCharCode(o)}return r}function J(e,t,n){if(A(t%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!"),A("number"==typeof n,"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===n&&(n=2147483647),n<4)return 0;for(var r=t,o=r+n-4,i=0;i<e.length;++i){var a=e.charCodeAt(i);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i)),Q[t>>2]=a,(t+=4)+4>o)break}return Q[t>>2]=0,t-r}function $(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&++n,t+=4}return t}function ee(e){var t=N(e)+1,n=Xr(t);return n&&x(e,H,n,t),n}function te(e,t){A(e.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),H.set(e,t)}function ne(e,t,n){for(var r=0;r<e.length;++r)A(e.charCodeAt(r)===(255&e.charCodeAt(r))),H[t++>>0]=e.charCodeAt(r);n||(H[t>>0]=0)}function re(e,t){return e%t>0&&(e+=t-e%t),e}function oe(e){C=e,t.HEAP8=H=new Int8Array(e),t.HEAP16=X=new Int16Array(e),t.HEAP32=Q=new Int32Array(e),t.HEAPU8=L=new Uint8Array(e),t.HEAPU16=z=new Uint16Array(e),t.HEAPU32=B=new Uint32Array(e),t.HEAPF32=W=new Float32Array(e),t.HEAPF64=Z=new Float64Array(e)}var ie=10485760;t.TOTAL_STACK&&A(ie===t.TOTAL_STACK,"the stack size can no longer be determined at runtime");var ae,se=t.INITIAL_MEMORY||26214400;function ce(){var e=qr();A(0==(3&e)),Q[e+4>>2]=34821223,Q[e+8>>2]=2310721022,Q[0]=1668509029}function de(){if(!S){var e=qr(),t=B[e+4>>2],n=B[e+8>>2];34821223==t&&2310721022==n||Ae("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x"+n.toString(16)+" "+t.toString(16)),1668509029!==Q[0]&&Ae("Runtime error: The application has corrupted its heap memory area (address zero)!")}}Object.getOwnPropertyDescriptor(t,"INITIAL_MEMORY")||Object.defineProperty(t,"INITIAL_MEMORY",{configurable:!0,get:function(){Ae("Module.INITIAL_MEMORY has been replaced with plain INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),A(se>=ie,"INITIAL_MEMORY should be larger than TOTAL_STACK, was "+se+"! (TOTAL_STACK="+ie+")"),A("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&void 0!==Int32Array.prototype.subarray&&void 0!==Int32Array.prototype.set,"JS engine does not provide full typed array support"),A(!t.wasmMemory,"Use of `wasmMemory` detected.  Use -s IMPORTED_MEMORY to define wasmMemory externally"),A(26214400==se,"Detected runtime INITIAL_MEMORY setting.  Use -s IMPORTED_MEMORY to define wasmMemory dynamically"),function(){var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,115!==t[0]||99!==t[1])throw"Runtime error: expected the system to be little-endian! (Run with -s SUPPORT_BIG_ENDIAN=1 to bypass)"}();var le=[],ue=[],fe=[],pe=!1,_e=!1,he=0;function ge(){return k||he>0}function me(){if(t.preRun)for("function"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)ve(t.preRun.shift());Qe(le)}function we(){de(),A(!pe),pe=!0,t.noFSInit||xt.init.initialized||xt.init(),xt.ignorePermissions=!1,Mt.init(),Qe(ue)}function Ee(){de(),_e=!0}function ye(){if(de(),t.postRun)for("function"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;)be(t.postRun.shift());Qe(fe)}function ve(e){le.unshift(e)}function Oe(e){ue.unshift(e)}function be(e){fe.unshift(e)}A(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),A(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),A(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),A(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var Te=0,De=null,Re=null,Pe={};function Me(e){for(var t=e;;){if(!Pe[e])return e;e=t+Math.random()}}function ke(e){Te++,t.monitorRunDependencies&&t.monitorRunDependencies(Te),e?(A(!Pe[e]),Pe[e]=1,null===De&&"undefined"!=typeof setInterval&&(De=setInterval((function(){if(S)return clearInterval(De),void(De=null);var e=!1;for(var t in Pe)e||(e=!0,O("still waiting on run dependencies:")),O("dependency: "+t);e&&O("(end of list)")}),1e4))):O("warning: run dependency added without ID")}function Se(e){if(Te--,t.monitorRunDependencies&&t.monitorRunDependencies(Te),e?(A(Pe[e]),delete Pe[e]):O("warning: run dependency removed without ID"),0==Te&&(null!==De&&(clearInterval(De),De=null),Re)){var n=Re;Re=null,n()}}function Ae(e){t.onAbort&&t.onAbort(e),O(e="Aborted("+e+")"),S=!0;var n=new WebAssembly.RuntimeError(e);throw i(n),n}t.preloadedImages={},t.preloadedAudios={};var Fe,je,Ie,xe="data:application/octet-stream;base64,";function Ue(e){return e.startsWith(xe)}function Ne(e){return e.startsWith("file://")}function Ce(e,n){return function(){var r=e,o=n;return n||(o=t.asm),A(pe,"native function `"+r+"` called before runtime initialization"),A(!_e,"native function `"+r+"` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),o[e]||A(o[e],"exported native function `"+r+"` not found"),o[e].apply(null,arguments)}}function He(e){try{if(e==Fe&&T)return new Uint8Array(T);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){Ae(e)}}function Le(){return T||!u&&!f||"function"!=typeof fetch?Promise.resolve().then((function(){return He(Fe)})):fetch(Fe,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Fe+"'";return e.arrayBuffer()})).catch((function(){return He(Fe)}))}function Xe(){var e={env:Lr,wasi_snapshot_preview1:Lr};function n(e,n){var r=e.exports;t.asm=r,A(M=t.asm.memory,"memory not found in wasm exports"),oe(M.buffer),A(ae=t.asm.__indirect_function_table,"table not found in wasm exports"),Oe(t.asm.__wasm_call_ctors),Se("wasm-instantiate")}ke("wasm-instantiate");var r=t;function o(e){A(t===r,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),r=null,n(e.instance)}function a(t){return Le().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){O("failed to asynchronously prepare wasm: "+e),Ne(Fe)&&O("warning: Loading from a file URI ("+Fe+") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing"),Ae(e)}))}if(t.instantiateWasm)try{return t.instantiateWasm(e,n)}catch(e){return O("Module.instantiateWasm callback failed with error: "+e),!1}return(T||"function"!=typeof WebAssembly.instantiateStreaming||Ue(Fe)||"function"!=typeof fetch?a(o):fetch(Fe,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(o,(function(e){return O("wasm streaming compile failed: "+e),O("falling back to ArrayBuffer instantiation"),a(o)}))}))).catch(i),{}}Ue(Fe="anylinejs.wasm")||(Fe=E(Fe));var ze={688208:function(){t.anyline.__snd_d()},688234:function(){t.anyline.___any_result_reached()},688278:function(){t.anyline.___any_next_image()},688318:function(){console.error("Image is empty"),t.anyline.___any_next_image()},688391:function(){t.anyline._a44_j()},688420:function(){t.anyline.___any_reports()}};function Qe(e){for(;e.length>0;){var n=e.shift();if("function"!=typeof n){var r=n.func;"number"==typeof r?void 0===n.arg?Ye(r)():Ye(r)(n.arg):r(void 0===n.arg?null:n.arg)}else n(t)}}function Be(e){return b("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"),e}function We(e){return e.replace(/\b_Z[\w\d_]+/g,(function(e){var t=Be(e);return e===t?e:t+" ["+e+"]"}))}var Ze,Ge=[];function Ye(e){var t=Ge[e];return t||(e>=Ge.length&&(Ge.length=e+1),Ge[e]=t=ae.get(e)),A(ae.get(e)==t,"JavaScript-side Wasm function table mirror is out of date!"),t}function Ve(e,t,n,r){Ae("Assertion failed: "+I(e)+", at: "+[t?I(t):"unknown filename",n,r?I(r):"unknown function"])}Ze=function(){return performance.now()};var Ke=!0;function qe(e){return Q[Qr()>>2]=e,e}function Je(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e||!Ke)return qe(28),-1;n=Ze()}return Q[t>>2]=n/1e3|0,Q[t+4>>2]=n%1e3*1e3*1e3|0,0}function $e(e,t){return Je(e,t)}function et(e){return Xr(e+16)+16}function tt(e,t){}function nt(e){this.excPtr=e,this.ptr=e-16,this.set_type=function(e){Q[this.ptr+4>>2]=e},this.get_type=function(){return Q[this.ptr+4>>2]},this.set_destructor=function(e){Q[this.ptr+8>>2]=e},this.get_destructor=function(){return Q[this.ptr+8>>2]},this.set_refcount=function(e){Q[this.ptr>>2]=e},this.set_caught=function(e){e=e?1:0,H[this.ptr+12>>0]=e},this.get_caught=function(){return 0!=H[this.ptr+12>>0]},this.set_rethrown=function(e){e=e?1:0,H[this.ptr+13>>0]=e},this.get_rethrown=function(){return 0!=H[this.ptr+13>>0]},this.init=function(e,t){this.set_type(e),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var e=Q[this.ptr>>2];Q[this.ptr>>2]=e+1},this.release_ref=function(){var e=Q[this.ptr>>2];return Q[this.ptr>>2]=e-1,A(e>0),1===e}}function rt(e){this.free=function(){zr(this.ptr),this.ptr=0},this.set_base_ptr=function(e){Q[this.ptr>>2]=e},this.get_base_ptr=function(){return Q[this.ptr>>2]},this.set_adjusted_ptr=function(e){Q[this.ptr+4>>2]=e},this.get_adjusted_ptr_addr=function(){return this.ptr+4},this.get_adjusted_ptr=function(){return Q[this.ptr+4>>2]},this.get_exception_ptr=function(){if(eo(this.get_exception_info().get_type()))return Q[this.get_base_ptr()>>2];var e=this.get_adjusted_ptr();return 0!==e?e:this.get_base_ptr()},this.get_exception_info=function(){return new nt(this.get_base_ptr())},void 0===e?(this.ptr=Xr(8),this.set_adjusted_ptr(0)):this.ptr=e}var ot=[];function it(e){e.add_ref()}var at=0;function st(e){var t=new rt(e),n=t.get_exception_info();return n.get_caught()||(n.set_caught(!0),at--),n.set_rethrown(!1),ot.push(t),it(n),t.get_exception_ptr()}var ct=0;function dt(e){try{return zr(new nt(e).ptr)}catch(e){O("exception during cxa_free_exception: "+e)}}function lt(e){if(e.release_ref()&&!e.get_rethrown()){var t=e.get_destructor();t&&Ye(t)(e.excPtr),dt(e.excPtr)}}function ut(){Jr(0),A(ot.length>0);var e=ot.pop();lt(e.get_exception_info()),e.free(),ct=0}function ft(e){var t=new rt(e),n=t.get_base_ptr();throw ct||(ct=n),t.free(),n}function pt(){var e=ct;if(!e)return R(0),0;var t=new nt(e),n=t.get_type(),r=new rt;if(r.set_base_ptr(e),r.set_adjusted_ptr(e),!n)return R(0),0|r.ptr;for(var o=Array.prototype.slice.call(arguments),i=0;i<o.length;i++){var a=o[i];if(0===a||a===n)break;if($r(a,n,r.get_adjusted_ptr_addr()))return R(a),0|r.ptr}return R(n),0|r.ptr}function _t(){var e=ct;if(!e)return R(0),0;var t=new nt(e),n=t.get_type(),r=new rt;if(r.set_base_ptr(e),r.set_adjusted_ptr(e),!n)return R(0),0|r.ptr;for(var o=Array.prototype.slice.call(arguments),i=0;i<o.length;i++){var a=o[i];if(0===a||a===n)break;if($r(a,n,r.get_adjusted_ptr_addr()))return R(a),0|r.ptr}return R(n),0|r.ptr}function ht(){var e=ct;if(!e)return R(0),0;var t=new nt(e),n=t.get_type(),r=new rt;if(r.set_base_ptr(e),r.set_adjusted_ptr(e),!n)return R(0),0|r.ptr;for(var o=Array.prototype.slice.call(arguments),i=0;i<o.length;i++){var a=o[i];if(0===a||a===n)break;if($r(a,n,r.get_adjusted_ptr_addr()))return R(a),0|r.ptr}return R(n),0|r.ptr}function gt(){var e=ct;if(!e)return R(0),0;var t=new nt(e),n=t.get_type(),r=new rt;if(r.set_base_ptr(e),r.set_adjusted_ptr(e),!n)return R(0),0|r.ptr;for(var o=Array.prototype.slice.call(arguments),i=0;i<o.length;i++){var a=o[i];if(0===a||a===n)break;if($r(a,n,r.get_adjusted_ptr_addr()))return R(a),0|r.ptr}return R(n),0|r.ptr}function mt(e){return new rt(e).get_exception_ptr()}function wt(){var e=ot.pop();e||Ae("no exception to throw");var t=e.get_exception_info(),n=e.get_base_ptr();throw t.get_rethrown()?e.free():(ot.push(e),t.set_rethrown(!0),t.set_caught(!1),at++),ct=n,n}function Et(e,t,n){throw new nt(e).init(t,n),ct=e,at++,e}function yt(){return at}function vt(){var e=(new Date).getFullYear(),t=new Date(e,0,1),n=new Date(e,6,1),r=t.getTimezoneOffset(),o=n.getTimezoneOffset(),i=Math.max(r,o);function a(e){var t=e.toTimeString().match(/\(([A-Za-z ]+)\)$/);return t?t[1]:"GMT"}Q[Gr()>>2]=60*i,Q[Zr()>>2]=Number(r!=o);var s=a(t),c=a(n),d=ee(s),l=ee(c);o<r?(Q[Wr()>>2]=d,Q[Wr()+4>>2]=l):(Q[Wr()>>2]=l,Q[Wr()+4>>2]=d)}function Ot(){Ot.called||(Ot.called=!0,vt())}function bt(e,t){Ot();var n=new Date(1e3*Q[e>>2]);Q[t>>2]=n.getSeconds(),Q[t+4>>2]=n.getMinutes(),Q[t+8>>2]=n.getHours(),Q[t+12>>2]=n.getDate(),Q[t+16>>2]=n.getMonth(),Q[t+20>>2]=n.getFullYear()-1900,Q[t+24>>2]=n.getDay();var r=new Date(n.getFullYear(),0,1),o=(n.getTime()-r.getTime())/864e5|0;Q[t+28>>2]=o,Q[t+36>>2]=-60*n.getTimezoneOffset();var i=new Date(n.getFullYear(),6,1).getTimezoneOffset(),a=r.getTimezoneOffset(),s=0|(i!=a&&n.getTimezoneOffset()==Math.min(a,i));Q[t+32>>2]=s;var c=Q[Wr()+(s?4:0)>>2];return Q[t+40>>2]=c,t}function Tt(e,t){return bt(e,t)}var Dt={splitPath:function(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)},normalizeArray:function(e,t){for(var n=0,r=e.length-1;r>=0;r--){var o=e[r];"."===o?e.splice(r,1):".."===o?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n;n--)e.unshift("..");return e},normalize:function(e){var t="/"===e.charAt(0),n="/"===e.substr(-1);return(e=Dt.normalizeArray(e.split("/").filter((function(e){return!!e})),!t).join("/"))||t||(e="."),e&&n&&(e+="/"),(t?"/":"")+e},dirname:function(e){var t=Dt.splitPath(e),n=t[0],r=t[1];return n||r?(r&&(r=r.substr(0,r.length-1)),n+r):"."},basename:function(e){if("/"===e)return"/";var t=(e=(e=Dt.normalize(e)).replace(/\/$/,"")).lastIndexOf("/");return-1===t?e:e.substr(t+1)},extname:function(e){return Dt.splitPath(e)[3]},join:function(){var e=Array.prototype.slice.call(arguments,0);return Dt.normalize(e.join("/"))},join2:function(e,t){return Dt.normalize(e+"/"+t)}};function Rt(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var e=new Uint8Array(1);return function(){return crypto.getRandomValues(e),e[0]}}return function(){Ae("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")}}var Pt={resolve:function(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var r=n>=0?arguments[n]:xt.cwd();if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");if(!r)return"";e=r+"/"+e,t="/"===r.charAt(0)}return(t?"/":"")+(e=Dt.normalizeArray(e.split("/").filter((function(e){return!!e})),!t).join("/"))||"."},relative:function(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=Pt.resolve(e).substr(1),t=Pt.resolve(t).substr(1);for(var r=n(e.split("/")),o=n(t.split("/")),i=Math.min(r.length,o.length),a=i,s=0;s<i;s++)if(r[s]!==o[s]){a=s;break}var c=[];for(s=a;s<r.length;s++)c.push("..");return(c=c.concat(o.slice(a))).join("/")}},Mt={ttys:[],init:function(){},shutdown:function(){},register:function(e,t){Mt.ttys[e]={input:[],output:[],ops:t},xt.registerDevice(e,Mt.stream_ops)},stream_ops:{open:function(e){var t=Mt.ttys[e.node.rdev];if(!t)throw new xt.ErrnoError(43);e.tty=t,e.seekable=!1},close:function(e){e.tty.ops.flush(e.tty)},flush:function(e){e.tty.ops.flush(e.tty)},read:function(e,t,n,r,o){if(!e.tty||!e.tty.ops.get_char)throw new xt.ErrnoError(60);for(var i=0,a=0;a<r;a++){var s;try{s=e.tty.ops.get_char(e.tty)}catch(e){throw new xt.ErrnoError(29)}if(void 0===s&&0===i)throw new xt.ErrnoError(6);if(null==s)break;i++,t[n+a]=s}return i&&(e.node.timestamp=Date.now()),i},write:function(e,t,n,r,o){if(!e.tty||!e.tty.ops.put_char)throw new xt.ErrnoError(60);try{for(var i=0;i<r;i++)e.tty.ops.put_char(e.tty,t[n+i])}catch(e){throw new xt.ErrnoError(29)}return r&&(e.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(e){if(!e.input.length){var t=null;if("undefined"!=typeof window&&"function"==typeof window.prompt?null!==(t=window.prompt("Input: "))&&(t+="\n"):"function"==typeof readline&&null!==(t=readline())&&(t+="\n"),!t)return null;e.input=Cr(t,!0)}return e.input.shift()},put_char:function(e,t){null===t||10===t?(v(j(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},flush:function(e){e.output&&e.output.length>0&&(v(j(e.output,0)),e.output=[])}},default_tty1_ops:{put_char:function(e,t){null===t||10===t?(O(j(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},flush:function(e){e.output&&e.output.length>0&&(O(j(e.output,0)),e.output=[])}}};function kt(e){Ae("internal error: mmapAlloc called but `memalign` native symbol not exported")}var St={ops_table:null,mount:function(e){return St.createNode(null,"/",16895,0)},createNode:function(e,t,n,r){if(xt.isBlkdev(n)||xt.isFIFO(n))throw new xt.ErrnoError(63);St.ops_table||(St.ops_table={dir:{node:{getattr:St.node_ops.getattr,setattr:St.node_ops.setattr,lookup:St.node_ops.lookup,mknod:St.node_ops.mknod,rename:St.node_ops.rename,unlink:St.node_ops.unlink,rmdir:St.node_ops.rmdir,readdir:St.node_ops.readdir,symlink:St.node_ops.symlink},stream:{llseek:St.stream_ops.llseek}},file:{node:{getattr:St.node_ops.getattr,setattr:St.node_ops.setattr},stream:{llseek:St.stream_ops.llseek,read:St.stream_ops.read,write:St.stream_ops.write,allocate:St.stream_ops.allocate,mmap:St.stream_ops.mmap,msync:St.stream_ops.msync}},link:{node:{getattr:St.node_ops.getattr,setattr:St.node_ops.setattr,readlink:St.node_ops.readlink},stream:{}},chrdev:{node:{getattr:St.node_ops.getattr,setattr:St.node_ops.setattr},stream:xt.chrdev_stream_ops}});var o=xt.createNode(e,t,n,r);return xt.isDir(o.mode)?(o.node_ops=St.ops_table.dir.node,o.stream_ops=St.ops_table.dir.stream,o.contents={}):xt.isFile(o.mode)?(o.node_ops=St.ops_table.file.node,o.stream_ops=St.ops_table.file.stream,o.usedBytes=0,o.contents=null):xt.isLink(o.mode)?(o.node_ops=St.ops_table.link.node,o.stream_ops=St.ops_table.link.stream):xt.isChrdev(o.mode)&&(o.node_ops=St.ops_table.chrdev.node,o.stream_ops=St.ops_table.chrdev.stream),o.timestamp=Date.now(),e&&(e.contents[t]=o,e.timestamp=o.timestamp),o},getFileDataAsTypedArray:function(e){return e.contents?e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents):new Uint8Array(0)},expandFileStorage:function(e,t){var n=e.contents?e.contents.length:0;if(!(n>=t)){t=Math.max(t,n*(n<1048576?2:1.125)>>>0),0!=n&&(t=Math.max(t,256));var r=e.contents;e.contents=new Uint8Array(t),e.usedBytes>0&&e.contents.set(r.subarray(0,e.usedBytes),0)}},resizeFileStorage:function(e,t){if(e.usedBytes!=t)if(0==t)e.contents=null,e.usedBytes=0;else{var n=e.contents;e.contents=new Uint8Array(t),n&&e.contents.set(n.subarray(0,Math.min(t,e.usedBytes))),e.usedBytes=t}},node_ops:{getattr:function(e){var t={};return t.dev=xt.isChrdev(e.mode)?e.id:1,t.ino=e.id,t.mode=e.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=e.rdev,xt.isDir(e.mode)?t.size=4096:xt.isFile(e.mode)?t.size=e.usedBytes:xt.isLink(e.mode)?t.size=e.link.length:t.size=0,t.atime=new Date(e.timestamp),t.mtime=new Date(e.timestamp),t.ctime=new Date(e.timestamp),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},setattr:function(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp),void 0!==t.size&&St.resizeFileStorage(e,t.size)},lookup:function(e,t){throw xt.genericErrors[44]},mknod:function(e,t,n,r){return St.createNode(e,t,n,r)},rename:function(e,t,n){if(xt.isDir(e.mode)){var r;try{r=xt.lookupNode(t,n)}catch(e){}if(r)for(var o in r.contents)throw new xt.ErrnoError(55)}delete e.parent.contents[e.name],e.parent.timestamp=Date.now(),e.name=n,t.contents[n]=e,t.timestamp=e.parent.timestamp,e.parent=t},unlink:function(e,t){delete e.contents[t],e.timestamp=Date.now()},rmdir:function(e,t){var n=xt.lookupNode(e,t);for(var r in n.contents)throw new xt.ErrnoError(55);delete e.contents[t],e.timestamp=Date.now()},readdir:function(e){var t=[".",".."];for(var n in e.contents)e.contents.hasOwnProperty(n)&&t.push(n);return t},symlink:function(e,t,n){var r=St.createNode(e,t,41471,0);return r.link=n,r},readlink:function(e){if(!xt.isLink(e.mode))throw new xt.ErrnoError(28);return e.link}},stream_ops:{read:function(e,t,n,r,o){var i=e.node.contents;if(o>=e.node.usedBytes)return 0;var a=Math.min(e.node.usedBytes-o,r);if(A(a>=0),a>8&&i.subarray)t.set(i.subarray(o,o+a),n);else for(var s=0;s<a;s++)t[n+s]=i[o+s];return a},write:function(e,t,n,r,o,i){if(A(!(t instanceof ArrayBuffer)),t.buffer===H.buffer&&(i=!1),!r)return 0;var a=e.node;if(a.timestamp=Date.now(),t.subarray&&(!a.contents||a.contents.subarray)){if(i)return A(0===o,"canOwn must imply no weird position inside the file"),a.contents=t.subarray(n,n+r),a.usedBytes=r,r;if(0===a.usedBytes&&0===o)return a.contents=t.slice(n,n+r),a.usedBytes=r,r;if(o+r<=a.usedBytes)return a.contents.set(t.subarray(n,n+r),o),r}if(St.expandFileStorage(a,o+r),a.contents.subarray&&t.subarray)a.contents.set(t.subarray(n,n+r),o);else for(var s=0;s<r;s++)a.contents[o+s]=t[n+s];return a.usedBytes=Math.max(a.usedBytes,o+r),r},llseek:function(e,t,n){var r=t;if(1===n?r+=e.position:2===n&&xt.isFile(e.node.mode)&&(r+=e.node.usedBytes),r<0)throw new xt.ErrnoError(28);return r},allocate:function(e,t,n){St.expandFileStorage(e.node,t+n),e.node.usedBytes=Math.max(e.node.usedBytes,t+n)},mmap:function(e,t,n,r,o,i){if(0!==t)throw new xt.ErrnoError(28);if(!xt.isFile(e.node.mode))throw new xt.ErrnoError(43);var a,s,c=e.node.contents;if(2&i||c.buffer!==C){if((r>0||r+n<c.length)&&(c=c.subarray?c.subarray(r,r+n):Array.prototype.slice.call(c,r,r+n)),s=!0,!(a=kt()))throw new xt.ErrnoError(48);H.set(c,a)}else s=!1,a=c.byteOffset;return{ptr:a,allocated:s}},msync:function(e,t,n,r,o){if(!xt.isFile(e.node.mode))throw new xt.ErrnoError(43);return 2&o||St.stream_ops.write(e,t,0,r,n,!1),0}}};function At(e,t,n,r){var o=r?"":Me("al "+e);g(e,(function(n){A(n,'Loading data file "'+e+'" failed (no arrayBuffer).'),t(new Uint8Array(n)),o&&Se(o)}),(function(t){if(!n)throw'Loading data file "'+e+'" failed.';n()})),o&&ke(o)}var Ft={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"},jt={},It={DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function(){It.codec||(It.codec=function(){var e={uncompress:function(e,t,n,r){for(var o=n=n||0,i=r=r||e.length-n,a=0;o<i;){var s=e[o++],c=s>>4;if(c>0){for(var d=c+240;255===d;)c+=d=e[o++];for(var l=o+c;o<l;)t[a++]=e[o++];if(o===i)return a}var u=e[o++]|e[o++]<<8;if(0===u)return a;if(u>a)return-(o-2);var f=15&s;for(d=f+240;255===d;)f+=d=e[o++];var p=a-u;for(l=a+f+4;a<l;)t[a++]=t[p++]}return a}},t=2113929216,n=15,r=15,o=2654435761;A(!0);var i=new Int16Array(65536),a=new Int16Array(i.length);return e.compressBound=function(e){return e>t?0:e+e/255+16|0},e.compress=function(s,c,d,l){return i.set(a),function(a,s,c,d,l){var u=d,f=l-d,p=0;if(a.length>=t)throw new Error("input too large");if(a.length>12){var _=e.compressBound(a.length);if(f<_)throw Error("output too small: "+f+" < "+_);for(var h=67,g=a.length-12;c+4<g;){var m=a[c+1]<<8|a[c],w=a[c+3]<<8|a[c+2],E=Math.imul(m|w<<16,o)>>>16,y=i[E]-1;if(i[E]=c+1,y<0||c-y>>>16>0||(a[y+3]<<8|a[y+2])!=w||(a[y+1]<<8|a[y])!=m)c+=h++>>6;else{h=67;var v=c-p,O=c-y;y+=4;for(var b=c+=4;c<g&&a[c]==a[y];)c++,y++;var T=(b=c-b)<n?b:n;if(v>=r){s[u++]=240+T;for(var D=v-r;D>254;D-=255)s[u++]=255;s[u++]=D}else s[u++]=(v<<4)+T;for(var R=0;R<v;R++)s[u++]=a[p+R];if(s[u++]=O,s[u++]=O>>8,b>=n){for(b-=n;b>=255;)b-=255,s[u++]=255;s[u++]=b}p=c}}}if(0==p)return 0;if((v=a.length-p)>=r){s[u++]=240;for(var P=v-r;P>254;P-=255)s[u++]=255;s[u++]=P}else s[u++]=v<<4;for(c=p;c<a.length;)s[u++]=a[c++];return u}(s,c,0,d||0,l||c.length)},e.CHUNK_SIZE=2048,e.compressPackage=function(t,n){if(n)var r=new Uint8Array(e.CHUNK_SIZE);A(t instanceof ArrayBuffer),t=new Uint8Array(t),console.log("compressing package of size "+t.length);for(var o=[],i=[],a=0,s=0;a<t.length;){var c=t.subarray(a,a+e.CHUNK_SIZE);a+=e.CHUNK_SIZE;var d=e.compressBound(c.length),l=new Uint8Array(d),u=e.compress(c,l);if(u>0){if(A(u<=d),l=l.subarray(0,u),o.push(l),s+=u,i.push(1),n){var f=e.uncompress(l,r);A(f===c.length,[f,c.length]);for(var p=0;p<c.length;p++)A(c[p]===r[p])}}else A(0===u),o.push(c),s+=c.length,i.push(0)}t=null;var _={data:new Uint8Array(s+2*e.CHUNK_SIZE),cachedOffset:s,cachedIndexes:[-1,-1],cachedChunks:[null,null],offsets:[],sizes:[],successes:i};for(a=0,p=0;p<o.length;p++)_.data.set(o[p],a),_.offsets[p]=a,_.sizes[p]=o[p].length,a+=o[p].length;return console.log("compressed package into "+[_.data.length]),A(a===s),_},A(e.CHUNK_SIZE<32768),e}(),It.CHUNK_SIZE=It.codec.CHUNK_SIZE)},loadPackage:function(e,n){It.init();var r=e.compressedData;r||(r=It.codec.compressPackage(e.data)),A(r.cachedIndexes.length===r.cachedChunks.length);for(var o=0;o<r.cachedIndexes.length;o++)r.cachedIndexes[o]=-1,r.cachedChunks[o]=r.data.subarray(r.cachedOffset+o*It.CHUNK_SIZE,r.cachedOffset+(o+1)*It.CHUNK_SIZE),A(r.cachedChunks[o].length===It.CHUNK_SIZE);e.metadata.files.forEach((function(e){var t=Dt.dirname(e.filename),n=Dt.basename(e.filename);xt.createPath("",t,!0,!0);var o=xt.analyzePath(t).object;It.createNode(o,n,It.FILE_MODE,0,{compressedData:r,start:e.start,end:e.end})})),n&&(Browser.init(),e.metadata.files.forEach((function(e){var n=!1,r=e.filename;t.preloadPlugins.forEach((function(e){if(!n&&e.canHandle(r)){var t=Me("fp "+r);ke(t);var o=function(){Se(t)},i=xt.readFile(r);e.handle(i,r,o,o),n=!0}}))})))},createNode:function(e,t,n,r,o,i){var a=xt.createNode(e,t,n);return a.mode=n,a.node_ops=It.node_ops,a.stream_ops=It.stream_ops,a.timestamp=(i||new Date).getTime(),A(It.FILE_MODE!==It.DIR_MODE),n===It.FILE_MODE?(a.size=o.end-o.start,a.contents=o):(a.size=4096,a.contents={}),e&&(e.contents[t]=a),a},node_ops:{getattr:function(e){return{dev:1,ino:e.id,mode:e.mode,nlink:1,uid:0,gid:0,rdev:void 0,size:e.size,atime:new Date(e.timestamp),mtime:new Date(e.timestamp),ctime:new Date(e.timestamp),blksize:4096,blocks:Math.ceil(e.size/4096)}},setattr:function(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp)},lookup:function(e,t){throw new xt.ErrnoError(44)},mknod:function(e,t,n,r){throw new xt.ErrnoError(63)},rename:function(e,t,n){throw new xt.ErrnoError(63)},unlink:function(e,t){throw new xt.ErrnoError(63)},rmdir:function(e,t){throw new xt.ErrnoError(63)},readdir:function(e){throw new xt.ErrnoError(63)},symlink:function(e,t,n){throw new xt.ErrnoError(63)},readlink:function(e){throw new xt.ErrnoError(63)}},stream_ops:{read:function(e,n,r,o,i){if((o=Math.min(o,e.node.size-i))<=0)return 0;for(var a=e.node.contents,s=a.compressedData,c=0;c<o;){var d,l=a.start+i+c,u=o-c,f=Math.floor(l/It.CHUNK_SIZE),p=s.offsets[f],_=s.sizes[f];if(s.successes[f]){var h=s.cachedIndexes.indexOf(f);if(h>=0)d=s.cachedChunks[h];else{s.cachedIndexes.pop(),s.cachedIndexes.unshift(f),d=s.cachedChunks.pop(),s.cachedChunks.unshift(d),s.debug&&(v("decompressing chunk "+f),t.decompressedChunks=(t.decompressedChunks||0)+1);var g=s.data.subarray(p,p+_),m=It.codec.uncompress(g,d);f<s.successes.length-1&&A(m===It.CHUNK_SIZE)}}else d=s.data.subarray(p,p+It.CHUNK_SIZE);var w=l%It.CHUNK_SIZE,E=Math.min(w+u,It.CHUNK_SIZE);n.set(d.subarray(w,E),r+c),c+=E-w}return c},write:function(e,t,n,r,o){throw new xt.ErrnoError(29)},llseek:function(e,t,n){var r=t;if(1===n?r+=e.position:2===n&&xt.isFile(e.node.mode)&&(r+=e.node.size),r<0)throw new xt.ErrnoError(28);return r}}},xt={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(e,t){if(t=t||{},!(e=Pt.resolve(xt.cwd(),e)))return{path:"",node:null};var n={follow_mount:!0,recurse_count:0};for(var r in n)void 0===t[r]&&(t[r]=n[r]);if(t.recurse_count>8)throw new xt.ErrnoError(32);for(var o=Dt.normalizeArray(e.split("/").filter((function(e){return!!e})),!1),i=xt.root,a="/",s=0;s<o.length;s++){var c=s===o.length-1;if(c&&t.parent)break;if(i=xt.lookupNode(i,o[s]),a=Dt.join2(a,o[s]),xt.isMountpoint(i)&&(!c||c&&t.follow_mount)&&(i=i.mounted.root),!c||t.follow)for(var d=0;xt.isLink(i.mode);){var l=xt.readlink(a);if(a=Pt.resolve(Dt.dirname(a),l),i=xt.lookupPath(a,{recurse_count:t.recurse_count}).node,d++>40)throw new xt.ErrnoError(32)}}return{path:a,node:i}},getPath:function(e){for(var t;;){if(xt.isRoot(e)){var n=e.mount.mountpoint;return t?"/"!==n[n.length-1]?n+"/"+t:n+t:n}t=t?e.name+"/"+t:e.name,e=e.parent}},hashName:function(e,t){for(var n=0,r=0;r<t.length;r++)n=(n<<5)-n+t.charCodeAt(r)|0;return(e+n>>>0)%xt.nameTable.length},hashAddNode:function(e){var t=xt.hashName(e.parent.id,e.name);e.name_next=xt.nameTable[t],xt.nameTable[t]=e},hashRemoveNode:function(e){var t=xt.hashName(e.parent.id,e.name);if(xt.nameTable[t]===e)xt.nameTable[t]=e.name_next;else for(var n=xt.nameTable[t];n;){if(n.name_next===e){n.name_next=e.name_next;break}n=n.name_next}},lookupNode:function(e,t){var n=xt.mayLookup(e);if(n)throw new xt.ErrnoError(n,e);for(var r=xt.hashName(e.id,t),o=xt.nameTable[r];o;o=o.name_next){var i=o.name;if(o.parent.id===e.id&&i===t)return o}return xt.lookup(e,t)},createNode:function(e,t,n,r){A("object"==typeof e);var o=new xt.FSNode(e,t,n,r);return xt.hashAddNode(o),o},destroyNode:function(e){xt.hashRemoveNode(e)},isRoot:function(e){return e===e.parent},isMountpoint:function(e){return!!e.mounted},isFile:function(e){return 32768==(61440&e)},isDir:function(e){return 16384==(61440&e)},isLink:function(e){return 40960==(61440&e)},isChrdev:function(e){return 8192==(61440&e)},isBlkdev:function(e){return 24576==(61440&e)},isFIFO:function(e){return 4096==(61440&e)},isSocket:function(e){return 49152==(49152&e)},flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:function(e){var t=xt.flagModes[e];if(void 0===t)throw new Error("Unknown file open mode: "+e);return t},flagsToPermissionString:function(e){var t=["r","w","rw"][3&e];return 512&e&&(t+="w"),t},nodePermissions:function(e,t){return xt.ignorePermissions||(!t.includes("r")||292&e.mode)&&(!t.includes("w")||146&e.mode)&&(!t.includes("x")||73&e.mode)?0:2},mayLookup:function(e){var t=xt.nodePermissions(e,"x");return t||(e.node_ops.lookup?0:2)},mayCreate:function(e,t){try{return xt.lookupNode(e,t),20}catch(e){}return xt.nodePermissions(e,"wx")},mayDelete:function(e,t,n){var r;try{r=xt.lookupNode(e,t)}catch(e){return e.errno}var o=xt.nodePermissions(e,"wx");if(o)return o;if(n){if(!xt.isDir(r.mode))return 54;if(xt.isRoot(r)||xt.getPath(r)===xt.cwd())return 10}else if(xt.isDir(r.mode))return 31;return 0},mayOpen:function(e,t){return e?xt.isLink(e.mode)?32:xt.isDir(e.mode)&&("r"!==xt.flagsToPermissionString(t)||512&t)?31:xt.nodePermissions(e,xt.flagsToPermissionString(t)):44},MAX_OPEN_FDS:4096,nextfd:function(e,t){e=e||0,t=t||xt.MAX_OPEN_FDS;for(var n=e;n<=t;n++)if(!xt.streams[n])return n;throw new xt.ErrnoError(33)},getStream:function(e){return xt.streams[e]},createStream:function(e,t,n){xt.FSStream||(xt.FSStream=function(){},xt.FSStream.prototype={object:{get:function(){return this.node},set:function(e){this.node=e}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}});var r=new xt.FSStream;for(var o in e)r[o]=e[o];e=r;var i=xt.nextfd(t,n);return e.fd=i,xt.streams[i]=e,e},closeStream:function(e){xt.streams[e]=null},chrdev_stream_ops:{open:function(e){var t=xt.getDevice(e.node.rdev);e.stream_ops=t.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek:function(){throw new xt.ErrnoError(70)}},major:function(e){return e>>8},minor:function(e){return 255&e},makedev:function(e,t){return e<<8|t},registerDevice:function(e,t){xt.devices[e]={stream_ops:t}},getDevice:function(e){return xt.devices[e]},getMounts:function(e){for(var t=[],n=[e];n.length;){var r=n.pop();t.push(r),n.push.apply(n,r.mounts)}return t},syncfs:function(e,t){"function"==typeof e&&(t=e,e=!1),xt.syncFSRequests++,xt.syncFSRequests>1&&O("warning: "+xt.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var n=xt.getMounts(xt.root.mount),r=0;function o(e){return A(xt.syncFSRequests>0),xt.syncFSRequests--,t(e)}function i(e){if(e)return i.errored?void 0:(i.errored=!0,o(e));++r>=n.length&&o(null)}n.forEach((function(t){if(!t.type.syncfs)return i(null);t.type.syncfs(t,e,i)}))},mount:function(e,t,n){if("string"==typeof e)throw e;var r,o="/"===n,i=!n;if(o&&xt.root)throw new xt.ErrnoError(10);if(!o&&!i){var a=xt.lookupPath(n,{follow_mount:!1});if(n=a.path,r=a.node,xt.isMountpoint(r))throw new xt.ErrnoError(10);if(!xt.isDir(r.mode))throw new xt.ErrnoError(54)}var s={type:e,opts:t,mountpoint:n,mounts:[]},c=e.mount(s);return c.mount=s,s.root=c,o?xt.root=c:r&&(r.mounted=s,r.mount&&r.mount.mounts.push(s)),c},unmount:function(e){var t=xt.lookupPath(e,{follow_mount:!1});if(!xt.isMountpoint(t.node))throw new xt.ErrnoError(28);var n=t.node,r=n.mounted,o=xt.getMounts(r);Object.keys(xt.nameTable).forEach((function(e){for(var t=xt.nameTable[e];t;){var n=t.name_next;o.includes(t.mount)&&xt.destroyNode(t),t=n}})),n.mounted=null;var i=n.mount.mounts.indexOf(r);A(-1!==i),n.mount.mounts.splice(i,1)},lookup:function(e,t){return e.node_ops.lookup(e,t)},mknod:function(e,t,n){var r=xt.lookupPath(e,{parent:!0}).node,o=Dt.basename(e);if(!o||"."===o||".."===o)throw new xt.ErrnoError(28);var i=xt.mayCreate(r,o);if(i)throw new xt.ErrnoError(i);if(!r.node_ops.mknod)throw new xt.ErrnoError(63);return r.node_ops.mknod(r,o,t,n)},create:function(e,t){return t=void 0!==t?t:438,t&=4095,t|=32768,xt.mknod(e,t,0)},mkdir:function(e,t){return t=void 0!==t?t:511,t&=1023,t|=16384,xt.mknod(e,t,0)},mkdirTree:function(e,t){for(var n=e.split("/"),r="",o=0;o<n.length;++o)if(n[o]){r+="/"+n[o];try{xt.mkdir(r,t)}catch(e){if(20!=e.errno)throw e}}},mkdev:function(e,t,n){return void 0===n&&(n=t,t=438),t|=8192,xt.mknod(e,t,n)},symlink:function(e,t){if(!Pt.resolve(e))throw new xt.ErrnoError(44);var n=xt.lookupPath(t,{parent:!0}).node;if(!n)throw new xt.ErrnoError(44);var r=Dt.basename(t),o=xt.mayCreate(n,r);if(o)throw new xt.ErrnoError(o);if(!n.node_ops.symlink)throw new xt.ErrnoError(63);return n.node_ops.symlink(n,r,e)},rename:function(e,t){var n,r,o=Dt.dirname(e),i=Dt.dirname(t),a=Dt.basename(e),s=Dt.basename(t);if(n=xt.lookupPath(e,{parent:!0}).node,r=xt.lookupPath(t,{parent:!0}).node,!n||!r)throw new xt.ErrnoError(44);if(n.mount!==r.mount)throw new xt.ErrnoError(75);var c,d=xt.lookupNode(n,a),l=Pt.relative(e,i);if("."!==l.charAt(0))throw new xt.ErrnoError(28);if("."!==(l=Pt.relative(t,o)).charAt(0))throw new xt.ErrnoError(55);try{c=xt.lookupNode(r,s)}catch(e){}if(d!==c){var u=xt.isDir(d.mode),f=xt.mayDelete(n,a,u);if(f)throw new xt.ErrnoError(f);if(f=c?xt.mayDelete(r,s,u):xt.mayCreate(r,s))throw new xt.ErrnoError(f);if(!n.node_ops.rename)throw new xt.ErrnoError(63);if(xt.isMountpoint(d)||c&&xt.isMountpoint(c))throw new xt.ErrnoError(10);if(r!==n&&(f=xt.nodePermissions(n,"w")))throw new xt.ErrnoError(f);xt.hashRemoveNode(d);try{n.node_ops.rename(d,r,s)}catch(e){throw e}finally{xt.hashAddNode(d)}}},rmdir:function(e){var t=xt.lookupPath(e,{parent:!0}).node,n=Dt.basename(e),r=xt.lookupNode(t,n),o=xt.mayDelete(t,n,!0);if(o)throw new xt.ErrnoError(o);if(!t.node_ops.rmdir)throw new xt.ErrnoError(63);if(xt.isMountpoint(r))throw new xt.ErrnoError(10);t.node_ops.rmdir(t,n),xt.destroyNode(r)},readdir:function(e){var t=xt.lookupPath(e,{follow:!0}).node;if(!t.node_ops.readdir)throw new xt.ErrnoError(54);return t.node_ops.readdir(t)},unlink:function(e){var t=xt.lookupPath(e,{parent:!0}).node,n=Dt.basename(e),r=xt.lookupNode(t,n),o=xt.mayDelete(t,n,!1);if(o)throw new xt.ErrnoError(o);if(!t.node_ops.unlink)throw new xt.ErrnoError(63);if(xt.isMountpoint(r))throw new xt.ErrnoError(10);t.node_ops.unlink(t,n),xt.destroyNode(r)},readlink:function(e){var t=xt.lookupPath(e).node;if(!t)throw new xt.ErrnoError(44);if(!t.node_ops.readlink)throw new xt.ErrnoError(28);return Pt.resolve(xt.getPath(t.parent),t.node_ops.readlink(t))},stat:function(e,t){var n=xt.lookupPath(e,{follow:!t}).node;if(!n)throw new xt.ErrnoError(44);if(!n.node_ops.getattr)throw new xt.ErrnoError(63);return n.node_ops.getattr(n)},lstat:function(e){return xt.stat(e,!0)},chmod:function(e,t,n){var r;if(!(r="string"==typeof e?xt.lookupPath(e,{follow:!n}).node:e).node_ops.setattr)throw new xt.ErrnoError(63);r.node_ops.setattr(r,{mode:4095&t|-4096&r.mode,timestamp:Date.now()})},lchmod:function(e,t){xt.chmod(e,t,!0)},fchmod:function(e,t){var n=xt.getStream(e);if(!n)throw new xt.ErrnoError(8);xt.chmod(n.node,t)},chown:function(e,t,n,r){var o;if(!(o="string"==typeof e?xt.lookupPath(e,{follow:!r}).node:e).node_ops.setattr)throw new xt.ErrnoError(63);o.node_ops.setattr(o,{timestamp:Date.now()})},lchown:function(e,t,n){xt.chown(e,t,n,!0)},fchown:function(e,t,n){var r=xt.getStream(e);if(!r)throw new xt.ErrnoError(8);xt.chown(r.node,t,n)},truncate:function(e,t){if(t<0)throw new xt.ErrnoError(28);var n;if(!(n="string"==typeof e?xt.lookupPath(e,{follow:!0}).node:e).node_ops.setattr)throw new xt.ErrnoError(63);if(xt.isDir(n.mode))throw new xt.ErrnoError(31);if(!xt.isFile(n.mode))throw new xt.ErrnoError(28);var r=xt.nodePermissions(n,"w");if(r)throw new xt.ErrnoError(r);n.node_ops.setattr(n,{size:t,timestamp:Date.now()})},ftruncate:function(e,t){var n=xt.getStream(e);if(!n)throw new xt.ErrnoError(8);if(0==(2097155&n.flags))throw new xt.ErrnoError(28);xt.truncate(n.node,t)},utime:function(e,t,n){var r=xt.lookupPath(e,{follow:!0}).node;r.node_ops.setattr(r,{timestamp:Math.max(t,n)})},open:function(e,n,r,o,i){if(""===e)throw new xt.ErrnoError(44);var a;if(r=void 0===r?438:r,r=64&(n="string"==typeof n?xt.modeStringToFlags(n):n)?4095&r|32768:0,"object"==typeof e)a=e;else{e=Dt.normalize(e);try{a=xt.lookupPath(e,{follow:!(131072&n)}).node}catch(e){}}var s=!1;if(64&n)if(a){if(128&n)throw new xt.ErrnoError(20)}else a=xt.mknod(e,r,0),s=!0;if(!a)throw new xt.ErrnoError(44);if(xt.isChrdev(a.mode)&&(n&=-513),65536&n&&!xt.isDir(a.mode))throw new xt.ErrnoError(54);if(!s){var c=xt.mayOpen(a,n);if(c)throw new xt.ErrnoError(c)}512&n&&xt.truncate(a,0),n&=-131713;var d=xt.createStream({node:a,path:xt.getPath(a),id:a.id,flags:n,mode:a.mode,seekable:!0,position:0,stream_ops:a.stream_ops,node_ops:a.node_ops,ungotten:[],error:!1},o,i);return d.stream_ops.open&&d.stream_ops.open(d),!t.logReadFiles||1&n||(xt.readFiles||(xt.readFiles={}),e in xt.readFiles||(xt.readFiles[e]=1)),d},close:function(e){if(xt.isClosed(e))throw new xt.ErrnoError(8);e.getdents&&(e.getdents=null);try{e.stream_ops.close&&e.stream_ops.close(e)}catch(e){throw e}finally{xt.closeStream(e.fd)}e.fd=null},isClosed:function(e){return null===e.fd},llseek:function(e,t,n){if(xt.isClosed(e))throw new xt.ErrnoError(8);if(!e.seekable||!e.stream_ops.llseek)throw new xt.ErrnoError(70);if(0!=n&&1!=n&&2!=n)throw new xt.ErrnoError(28);return e.position=e.stream_ops.llseek(e,t,n),e.ungotten=[],e.position},read:function(e,t,n,r,o){if(r<0||o<0)throw new xt.ErrnoError(28);if(xt.isClosed(e))throw new xt.ErrnoError(8);if(1==(2097155&e.flags))throw new xt.ErrnoError(8);if(xt.isDir(e.node.mode))throw new xt.ErrnoError(31);if(!e.stream_ops.read)throw new xt.ErrnoError(28);var i=void 0!==o;if(i){if(!e.seekable)throw new xt.ErrnoError(70)}else o=e.position;var a=e.stream_ops.read(e,t,n,r,o);return i||(e.position+=a),a},write:function(e,t,n,r,o,i){if(r<0||o<0)throw new xt.ErrnoError(28);if(xt.isClosed(e))throw new xt.ErrnoError(8);if(0==(2097155&e.flags))throw new xt.ErrnoError(8);if(xt.isDir(e.node.mode))throw new xt.ErrnoError(31);if(!e.stream_ops.write)throw new xt.ErrnoError(28);e.seekable&&1024&e.flags&&xt.llseek(e,0,2);var a=void 0!==o;if(a){if(!e.seekable)throw new xt.ErrnoError(70)}else o=e.position;var s=e.stream_ops.write(e,t,n,r,o,i);return a||(e.position+=s),s},allocate:function(e,t,n){if(xt.isClosed(e))throw new xt.ErrnoError(8);if(t<0||n<=0)throw new xt.ErrnoError(28);if(0==(2097155&e.flags))throw new xt.ErrnoError(8);if(!xt.isFile(e.node.mode)&&!xt.isDir(e.node.mode))throw new xt.ErrnoError(43);if(!e.stream_ops.allocate)throw new xt.ErrnoError(138);e.stream_ops.allocate(e,t,n)},mmap:function(e,t,n,r,o,i){if(0!=(2&o)&&0==(2&i)&&2!=(2097155&e.flags))throw new xt.ErrnoError(2);if(1==(2097155&e.flags))throw new xt.ErrnoError(2);if(!e.stream_ops.mmap)throw new xt.ErrnoError(43);return e.stream_ops.mmap(e,t,n,r,o,i)},msync:function(e,t,n,r,o){return e&&e.stream_ops.msync?e.stream_ops.msync(e,t,n,r,o):0},munmap:function(e){return 0},ioctl:function(e,t,n){if(!e.stream_ops.ioctl)throw new xt.ErrnoError(59);return e.stream_ops.ioctl(e,t,n)},readFile:function(e,t){if((t=t||{}).flags=t.flags||0,t.encoding=t.encoding||"binary","utf8"!==t.encoding&&"binary"!==t.encoding)throw new Error('Invalid encoding type "'+t.encoding+'"');var n,r=xt.open(e,t.flags),o=xt.stat(e).size,i=new Uint8Array(o);return xt.read(r,i,0,o,0),"utf8"===t.encoding?n=j(i,0):"binary"===t.encoding&&(n=i),xt.close(r),n},writeFile:function(e,t,n){(n=n||{}).flags=n.flags||577;var r=xt.open(e,n.flags,n.mode);if("string"==typeof t){var o=new Uint8Array(N(t)+1),i=x(t,o,0,o.length);xt.write(r,o,0,i,void 0,n.canOwn)}else{if(!ArrayBuffer.isView(t))throw new Error("Unsupported data type");xt.write(r,t,0,t.byteLength,void 0,n.canOwn)}xt.close(r)},cwd:function(){return xt.currentPath},chdir:function(e){var t=xt.lookupPath(e,{follow:!0});if(null===t.node)throw new xt.ErrnoError(44);if(!xt.isDir(t.node.mode))throw new xt.ErrnoError(54);var n=xt.nodePermissions(t.node,"x");if(n)throw new xt.ErrnoError(n);xt.currentPath=t.path},createDefaultDirectories:function(){xt.mkdir("/tmp"),xt.mkdir("/home"),xt.mkdir("/home/web_user")},createDefaultDevices:function(){xt.mkdir("/dev"),xt.registerDevice(xt.makedev(1,3),{read:function(){return 0},write:function(e,t,n,r,o){return r}}),xt.mkdev("/dev/null",xt.makedev(1,3)),Mt.register(xt.makedev(5,0),Mt.default_tty_ops),Mt.register(xt.makedev(6,0),Mt.default_tty1_ops),xt.mkdev("/dev/tty",xt.makedev(5,0)),xt.mkdev("/dev/tty1",xt.makedev(6,0));var e=Rt();xt.createDevice("/dev","random",e),xt.createDevice("/dev","urandom",e),xt.mkdir("/dev/shm"),xt.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){xt.mkdir("/proc");var e=xt.mkdir("/proc/self");xt.mkdir("/proc/self/fd"),xt.mount({mount:function(){var t=xt.createNode(e,"fd",16895,73);return t.node_ops={lookup:function(e,t){var n=+t,r=xt.getStream(n);if(!r)throw new xt.ErrnoError(8);var o={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return r.path}}};return o.parent=o,o}},t}},{},"/proc/self/fd")},createStandardStreams:function(){t.stdin?xt.createDevice("/dev","stdin",t.stdin):xt.symlink("/dev/tty","/dev/stdin"),t.stdout?xt.createDevice("/dev","stdout",null,t.stdout):xt.symlink("/dev/tty","/dev/stdout"),t.stderr?xt.createDevice("/dev","stderr",null,t.stderr):xt.symlink("/dev/tty1","/dev/stderr");var e=xt.open("/dev/stdin",0),n=xt.open("/dev/stdout",1),r=xt.open("/dev/stderr",1);A(0===e.fd,"invalid handle for stdin ("+e.fd+")"),A(1===n.fd,"invalid handle for stdout ("+n.fd+")"),A(2===r.fd,"invalid handle for stderr ("+r.fd+")")},ensureErrnoError:function(){xt.ErrnoError||(xt.ErrnoError=function(e,t){this.node=t,this.setErrno=function(e){for(var t in this.errno=e,jt)if(jt[t]===e){this.code=t;break}},this.setErrno(e),this.message=Ft[e],this.stack&&(Object.defineProperty(this,"stack",{value:(new Error).stack,writable:!0}),this.stack=We(this.stack))},xt.ErrnoError.prototype=new Error,xt.ErrnoError.prototype.constructor=xt.ErrnoError,[44].forEach((function(e){xt.genericErrors[e]=new xt.ErrnoError(e),xt.genericErrors[e].stack="<generic error, no stack>"})))},staticInit:function(){xt.ensureErrnoError(),xt.nameTable=new Array(4096),xt.mount(St,{},"/"),xt.createDefaultDirectories(),xt.createDefaultDevices(),xt.createSpecialDirectories(),xt.filesystems={MEMFS:St}},init:function(e,n,r){A(!xt.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),xt.init.initialized=!0,xt.ensureErrnoError(),t.stdin=e||t.stdin,t.stdout=n||t.stdout,t.stderr=r||t.stderr,xt.createStandardStreams()},quit:function(){xt.init.initialized=!1;var e=t._fflush;e&&e(0);for(var n=0;n<xt.streams.length;n++){var r=xt.streams[n];r&&xt.close(r)}},getMode:function(e,t){var n=0;return e&&(n|=365),t&&(n|=146),n},findObject:function(e,t){var n=xt.analyzePath(e,t);return n.exists?n.object:null},analyzePath:function(e,t){try{e=(r=xt.lookupPath(e,{follow:!t})).path}catch(e){}var n={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var r=xt.lookupPath(e,{parent:!0});n.parentExists=!0,n.parentPath=r.path,n.parentObject=r.node,n.name=Dt.basename(e),r=xt.lookupPath(e,{follow:!t}),n.exists=!0,n.path=r.path,n.object=r.node,n.name=r.node.name,n.isRoot="/"===r.path}catch(e){n.error=e.errno}return n},createPath:function(e,t,n,r){e="string"==typeof e?e:xt.getPath(e);for(var o=t.split("/").reverse();o.length;){var i=o.pop();if(i){var a=Dt.join2(e,i);try{xt.mkdir(a)}catch(e){}e=a}}return a},createFile:function(e,t,n,r,o){var i=Dt.join2("string"==typeof e?e:xt.getPath(e),t),a=xt.getMode(r,o);return xt.create(i,a)},createDataFile:function(e,t,n,r,o,i){var a=t?Dt.join2("string"==typeof e?e:xt.getPath(e),t):e,s=xt.getMode(r,o),c=xt.create(a,s);if(n){if("string"==typeof n){for(var d=new Array(n.length),l=0,u=n.length;l<u;++l)d[l]=n.charCodeAt(l);n=d}xt.chmod(c,146|s);var f=xt.open(c,577);xt.write(f,n,0,n.length,0,i),xt.close(f),xt.chmod(c,s)}return c},createDevice:function(e,t,n,r){var o=Dt.join2("string"==typeof e?e:xt.getPath(e),t),i=xt.getMode(!!n,!!r);xt.createDevice.major||(xt.createDevice.major=64);var a=xt.makedev(xt.createDevice.major++,0);return xt.registerDevice(a,{open:function(e){e.seekable=!1},close:function(e){r&&r.buffer&&r.buffer.length&&r(10)},read:function(e,t,r,o,i){for(var a=0,s=0;s<o;s++){var c;try{c=n()}catch(e){throw new xt.ErrnoError(29)}if(void 0===c&&0===a)throw new xt.ErrnoError(6);if(null==c)break;a++,t[r+s]=c}return a&&(e.node.timestamp=Date.now()),a},write:function(e,t,n,o,i){for(var a=0;a<o;a++)try{r(t[n+a])}catch(e){throw new xt.ErrnoError(29)}return o&&(e.node.timestamp=Date.now()),a}}),xt.mkdev(o,i,a)},forceLoadFile:function(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!h)throw new Error("Cannot load without read() or XMLHttpRequest.");try{e.contents=Cr(h(e.url),!0),e.usedBytes=e.contents.length}catch(e){throw new xt.ErrnoError(29)}},createLazyFile:function(e,t,n,r,o){function i(){this.lengthKnown=!1,this.chunks=[]}if(i.prototype.get=function(e){if(!(e>this.length-1||e<0)){var t=e%this.chunkSize,n=e/this.chunkSize|0;return this.getter(n)[t]}},i.prototype.setDataGetter=function(e){this.getter=e},i.prototype.cacheLength=function(){var e=new XMLHttpRequest;if(e.open("HEAD",n,!1),e.send(null),!(e.status>=200&&e.status<300||304===e.status))throw new Error("Couldn't load "+n+". Status: "+e.status);var t,r=Number(e.getResponseHeader("Content-length")),o=(t=e.getResponseHeader("Accept-Ranges"))&&"bytes"===t,i=(t=e.getResponseHeader("Content-Encoding"))&&"gzip"===t,a=1048576;o||(a=r);var s=this;s.setDataGetter((function(e){var t=e*a,o=(e+1)*a-1;if(o=Math.min(o,r-1),void 0===s.chunks[e]&&(s.chunks[e]=function(e,t){if(e>t)throw new Error("invalid range ("+e+", "+t+") or no bytes requested!");if(t>r-1)throw new Error("only "+r+" bytes available! programmer error!");var o=new XMLHttpRequest;if(o.open("GET",n,!1),r!==a&&o.setRequestHeader("Range","bytes="+e+"-"+t),"undefined"!=typeof Uint8Array&&(o.responseType="arraybuffer"),o.overrideMimeType&&o.overrideMimeType("text/plain; charset=x-user-defined"),o.send(null),!(o.status>=200&&o.status<300||304===o.status))throw new Error("Couldn't load "+n+". Status: "+o.status);return void 0!==o.response?new Uint8Array(o.response||[]):Cr(o.responseText||"",!0)}(t,o)),void 0===s.chunks[e])throw new Error("doXHR failed!");return s.chunks[e]})),!i&&r||(a=r=1,r=this.getter(0).length,a=r,v("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=r,this._chunkSize=a,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!f)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var a=new i;Object.defineProperties(a,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var s={isDevice:!1,contents:a}}else s={isDevice:!1,url:n};var c=xt.createFile(e,t,s,r,o);s.contents?c.contents=s.contents:s.url&&(c.contents=null,c.url=s.url),Object.defineProperties(c,{usedBytes:{get:function(){return this.contents.length}}});var d={};return Object.keys(c.stream_ops).forEach((function(e){var t=c.stream_ops[e];d[e]=function(){return xt.forceLoadFile(c),t.apply(null,arguments)}})),d.read=function(e,t,n,r,o){xt.forceLoadFile(c);var i=e.node.contents;if(o>=i.length)return 0;var a=Math.min(i.length-o,r);if(A(a>=0),i.slice)for(var s=0;s<a;s++)t[n+s]=i[o+s];else for(s=0;s<a;s++)t[n+s]=i.get(o+s);return a},c.stream_ops=d,c},createPreloadedFile:function(e,n,r,o,i,a,s,c,d,l){Browser.init();var u=n?Pt.resolve(Dt.join2(e,n)):e,f=Me("cp "+u);function p(r){function p(t){l&&l(),c||xt.createDataFile(e,n,t,o,i,d),a&&a(),Se(f)}var _=!1;t.preloadPlugins.forEach((function(e){_||e.canHandle(u)&&(e.handle(r,u,p,(function(){s&&s(),Se(f)})),_=!0)})),_||p(r)}ke(f),"string"==typeof r?At(r,(function(e){p(e)}),s):p(r)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(e,t,n){t=t||function(){},n=n||function(){};var r=xt.indexedDB();try{var o=r.open(xt.DB_NAME(),xt.DB_VERSION)}catch(e){return n(e)}o.onupgradeneeded=function(){v("creating db"),o.result.createObjectStore(xt.DB_STORE_NAME)},o.onsuccess=function(){var r=o.result.transaction([xt.DB_STORE_NAME],"readwrite"),i=r.objectStore(xt.DB_STORE_NAME),a=0,s=0,c=e.length;function d(){0==s?t():n()}e.forEach((function(e){var t=i.put(xt.analyzePath(e).object.contents,e);t.onsuccess=function(){++a+s==c&&d()},t.onerror=function(){s++,a+s==c&&d()}})),r.onerror=n},o.onerror=n},loadFilesFromDB:function(e,t,n){t=t||function(){},n=n||function(){};var r=xt.indexedDB();try{var o=r.open(xt.DB_NAME(),xt.DB_VERSION)}catch(e){return n(e)}o.onupgradeneeded=n,o.onsuccess=function(){var r=o.result;try{var i=r.transaction([xt.DB_STORE_NAME],"readonly")}catch(e){return void n(e)}var a=i.objectStore(xt.DB_STORE_NAME),s=0,c=0,d=e.length;function l(){0==c?t():n()}e.forEach((function(e){var t=a.get(e);t.onsuccess=function(){xt.analyzePath(e).exists&&xt.unlink(e),xt.createDataFile(Dt.dirname(e),Dt.basename(e),t.result,!0,!0,!0),++s+c==d&&l()},t.onerror=function(){c++,s+c==d&&l()}})),i.onerror=n},o.onerror=n},absolutePath:function(){Ae("FS.absolutePath has been removed; use PATH_FS.resolve instead")},createFolder:function(){Ae("FS.createFolder has been removed; use FS.mkdir instead")},createLink:function(){Ae("FS.createLink has been removed; use FS.symlink instead")},joinPath:function(){Ae("FS.joinPath has been removed; use PATH.join instead")},mmapAlloc:function(){Ae("FS.mmapAlloc has been replaced by the top level function mmapAlloc")},standardizePath:function(){Ae("FS.standardizePath has been removed; use PATH.normalize instead")}},Ut={mappings:{},DEFAULT_POLLMASK:5,calculateAt:function(e,t,n){if("/"===t[0])return t;var r;if(-100===e)r=xt.cwd();else{var o=xt.getStream(e);if(!o)throw new xt.ErrnoError(8);r=o.path}if(0==t.length){if(!n)throw new xt.ErrnoError(44);return r}return Dt.join2(r,t)},doStat:function(e,t,n){try{var r=e(t)}catch(e){if(e&&e.node&&Dt.normalize(t)!==Dt.normalize(xt.getPath(e.node)))return-54;throw e}return Q[n>>2]=r.dev,Q[n+4>>2]=0,Q[n+8>>2]=r.ino,Q[n+12>>2]=r.mode,Q[n+16>>2]=r.nlink,Q[n+20>>2]=r.uid,Q[n+24>>2]=r.gid,Q[n+28>>2]=r.rdev,Q[n+32>>2]=0,Ie=[r.size>>>0,(je=r.size,+Math.abs(je)>=1?je>0?(0|Math.min(+Math.floor(je/4294967296),4294967295))>>>0:~~+Math.ceil((je-+(~~je>>>0))/4294967296)>>>0:0)],Q[n+40>>2]=Ie[0],Q[n+44>>2]=Ie[1],Q[n+48>>2]=4096,Q[n+52>>2]=r.blocks,Q[n+56>>2]=r.atime.getTime()/1e3|0,Q[n+60>>2]=0,Q[n+64>>2]=r.mtime.getTime()/1e3|0,Q[n+68>>2]=0,Q[n+72>>2]=r.ctime.getTime()/1e3|0,Q[n+76>>2]=0,Ie=[r.ino>>>0,(je=r.ino,+Math.abs(je)>=1?je>0?(0|Math.min(+Math.floor(je/4294967296),4294967295))>>>0:~~+Math.ceil((je-+(~~je>>>0))/4294967296)>>>0:0)],Q[n+80>>2]=Ie[0],Q[n+84>>2]=Ie[1],0},doMsync:function(e,t,n,r,o){var i=L.slice(e,e+n);xt.msync(t,i,o,n,r)},doMkdir:function(e,t){return"/"===(e=Dt.normalize(e))[e.length-1]&&(e=e.substr(0,e.length-1)),xt.mkdir(e,t,0),0},doMknod:function(e,t,n){switch(61440&t){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}return xt.mknod(e,t,n),0},doReadlink:function(e,t,n){if(n<=0)return-28;var r=xt.readlink(e),o=Math.min(n,N(r)),i=H[t+o];return U(r,t,n+1),H[t+o]=i,o},doAccess:function(e,t){if(-8&t)return-28;var n;if(!(n=xt.lookupPath(e,{follow:!0}).node))return-44;var r="";return 4&t&&(r+="r"),2&t&&(r+="w"),1&t&&(r+="x"),r&&xt.nodePermissions(n,r)?-2:0},doDup:function(e,t,n){var r=xt.getStream(n);return r&&xt.close(r),xt.open(e,t,0,n,n).fd},doReadv:function(e,t,n,r){for(var o=0,i=0;i<n;i++){var a=Q[t+8*i>>2],s=Q[t+(8*i+4)>>2],c=xt.read(e,H,a,s,r);if(c<0)return-1;if(o+=c,c<s)break}return o},doWritev:function(e,t,n,r){for(var o=0,i=0;i<n;i++){var a=Q[t+8*i>>2],s=Q[t+(8*i+4)>>2],c=xt.write(e,H,a,s,r);if(c<0)return-1;o+=c}return o},varargs:void 0,get:function(){return A(null!=Ut.varargs),Ut.varargs+=4,Q[Ut.varargs-4>>2]},getStr:function(e){return I(e)},getStreamFromFD:function(e){var t=xt.getStream(e);if(!t)throw new xt.ErrnoError(8);return t},get64:function(e,t){return A(e>=0?0===t:-1===t),e}};function Nt(e,t,n){Ut.varargs=n;try{var r=Ut.getStreamFromFD(e);switch(t){case 0:return(o=Ut.get())<0?-28:xt.open(r.path,r.flags,0,o).fd;case 1:case 2:case 13:case 14:return 0;case 3:return r.flags;case 4:var o=Ut.get();return r.flags|=o,0;case 12:return o=Ut.get(),X[o+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return qe(28),-1}}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),-e.errno}}function Ct(e,t,n){Ut.varargs=n;try{var r=Ut.getStreamFromFD(e);switch(t){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return r.tty?0:-59;case 21519:if(!r.tty)return-59;var o=Ut.get();return Q[o>>2]=0,0;case 21520:return r.tty?-28:-59;case 21531:return o=Ut.get(),xt.ioctl(r,t,o);default:Ae("bad ioctl syscall "+t)}}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),-e.errno}}function Ht(e,t,n){Ut.varargs=n;try{var r=Ut.getStr(e),o=n?Ut.get():0;return xt.open(r,t,o).fd}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),-e.errno}}function Lt(e){try{return e=Ut.getStr(e),xt.rmdir(e),0}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),-e.errno}}function Xt(e,t){try{return e=Ut.getStr(e),Ut.doStat(xt.stat,e,t)}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),-e.errno}}function zt(e){try{return e=Ut.getStr(e),xt.unlink(e),0}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),-e.errno}}function Qt(e,t){Ae("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")}function Bt(e,t){Ae("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")}var Wt={};function Zt(e){for(;e.length;){var t=e.pop();e.pop()(t)}}function Gt(e){return this.fromWireType(B[e>>2])}var Yt={},Vt={},Kt={},qt=48,Jt=57;function $t(e){if(void 0===e)return"_unknown";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return t>=qt&&t<=Jt?"_"+e:e}function en(e,t){return e=$t(e),new Function("body","return function "+e+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t)}function tn(e,t){var n=en(t,(function(e){this.name=t,this.message=e;var n=new Error(e).stack;void 0!==n&&(this.stack=this.toString()+"\n"+n.replace(/^Error(:[^\n]*)?\n/,""))}));return n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},n}var nn=void 0;function rn(e){throw new nn(e)}function on(e,t,n){function r(t){var r=n(t);r.length!==e.length&&rn("Mismatched type converter count");for(var o=0;o<e.length;++o)_n(e[o],r[o])}e.forEach((function(e){Kt[e]=t}));var o=new Array(t.length),i=[],a=0;t.forEach((function(e,t){Vt.hasOwnProperty(e)?o[t]=Vt[e]:(i.push(e),Yt.hasOwnProperty(e)||(Yt[e]=[]),Yt[e].push((function(){o[t]=Vt[e],++a===i.length&&r(o)})))})),0===i.length&&r(o)}function an(e){var t=Wt[e];delete Wt[e];var n=t.rawConstructor,r=t.rawDestructor,o=t.fields;on([e],o.map((function(e){return e.getterReturnType})).concat(o.map((function(e){return e.setterArgumentType}))),(function(e){var i={};return o.forEach((function(t,n){var r=t.fieldName,a=e[n],s=t.getter,c=t.getterContext,d=e[n+o.length],l=t.setter,u=t.setterContext;i[r]={read:function(e){return a.fromWireType(s(c,e))},write:function(e,t){var n=[];l(u,e,d.toWireType(n,t)),Zt(n)}}})),[{name:t.name,fromWireType:function(e){var t={};for(var n in i)t[n]=i[n].read(e);return r(e),t},toWireType:function(e,t){for(var o in i)if(!(o in t))throw new TypeError('Missing field:  "'+o+'"');var a=n();for(o in i)i[o].write(a,t[o]);return null!==e&&e.push(r,a),a},argPackAdvance:8,readValueFromPointer:Gt,destructorFunction:r}]}))}function sn(e,t,n,r,o){}function cn(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+e)}}function dn(){for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);ln=e}var ln=void 0;function un(e){for(var t="",n=e;L[n];)t+=ln[L[n++]];return t}var fn=void 0;function pn(e){throw new fn(e)}function _n(e,t,n){if(n=n||{},!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");var r=t.name;if(e||pn('type "'+r+'" must have a positive integer typeid pointer'),Vt.hasOwnProperty(e)){if(n.ignoreDuplicateRegistrations)return;pn("Cannot register type '"+r+"' twice")}if(Vt[e]=t,delete Kt[e],Yt.hasOwnProperty(e)){var o=Yt[e];delete Yt[e],o.forEach((function(e){e()}))}}function hn(e,t,n,r,o){var i=cn(n);_n(e,{name:t=un(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:o},argPackAdvance:8,readValueFromPointer:function(e){var r;if(1===n)r=H;else if(2===n)r=X;else{if(4!==n)throw new TypeError("Unknown boolean type size: "+t);r=Q}return this.fromWireType(r[e>>i])},destructorFunction:null})}var gn=[],mn=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function wn(e){e>4&&0==--mn[e].refcount&&(mn[e]=void 0,gn.push(e))}function En(){for(var e=0,t=5;t<mn.length;++t)void 0!==mn[t]&&++e;return e}function yn(){for(var e=5;e<mn.length;++e)if(void 0!==mn[e])return mn[e];return null}function vn(){t.count_emval_handles=En,t.get_first_emval=yn}var On={toValue:function(e){return e||pn("Cannot use deleted val. handle = "+e),mn[e].value},toHandle:function(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=gn.length?gn.pop():mn.length;return mn[t]={refcount:1,value:e},t}}};function bn(e,t){_n(e,{name:t=un(t),fromWireType:function(e){var t=On.toValue(e);return wn(e),t},toWireType:function(e,t){return On.toHandle(t)},argPackAdvance:8,readValueFromPointer:Gt,destructorFunction:null})}function Tn(e){if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e}function Dn(e,t){switch(t){case 2:return function(e){return this.fromWireType(W[e>>2])};case 3:return function(e){return this.fromWireType(Z[e>>3])};default:throw new TypeError("Unknown float type: "+e)}}function Rn(e,t,n){var r=cn(n);_n(e,{name:t=un(t),fromWireType:function(e){return e},toWireType:function(e,t){if("number"!=typeof t&&"boolean"!=typeof t)throw new TypeError('Cannot convert "'+Tn(t)+'" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Dn(t,r),destructorFunction:null})}function Pn(e,t){if(!(e instanceof Function))throw new TypeError("new_ called with constructor type "+typeof e+" which is not a function");var n=en(e.name||"unknownFunctionName",(function(){}));n.prototype=e.prototype;var r=new n,o=e.apply(r,t);return o instanceof Object?o:r}function Mn(e,t,n,r,o){var i=t.length;i<2&&pn("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var a=null!==t[1]&&null!==n,s=!1,c=1;c<t.length;++c)if(null!==t[c]&&void 0===t[c].destructorFunction){s=!0;break}var d="void"!==t[0].name,l="",u="";for(c=0;c<i-2;++c)l+=(0!==c?", ":"")+"arg"+c,u+=(0!==c?", ":"")+"arg"+c+"Wired";var f="return function "+$t(e)+"("+l+") {\nif (arguments.length !== "+(i-2)+") {\nthrowBindingError('function "+e+" called with ' + arguments.length + ' arguments, expected "+(i-2)+" args!');\n}\n";s&&(f+="var destructors = [];\n");var p=s?"destructors":"null",_=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],h=[pn,r,o,Zt,t[0],t[1]];for(a&&(f+="var thisWired = classParam.toWireType("+p+", this);\n"),c=0;c<i-2;++c)f+="var arg"+c+"Wired = argType"+c+".toWireType("+p+", arg"+c+"); // "+t[c+2].name+"\n",_.push("argType"+c),h.push(t[c+2]);if(a&&(u="thisWired"+(u.length>0?", ":"")+u),f+=(d?"var rv = ":"")+"invoker(fn"+(u.length>0?", ":"")+u+");\n",s)f+="runDestructors(destructors);\n";else for(c=a?1:2;c<t.length;++c){var g=1===c?"thisWired":"arg"+(c-2)+"Wired";null!==t[c].destructorFunction&&(f+=g+"_dtor("+g+"); // "+t[c].name+"\n",_.push(g+"_dtor"),h.push(t[c].destructorFunction))}return d&&(f+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),f+="}\n",_.push(f),Pn(Function,_).apply(null,h)}function kn(e,t,n){if(void 0===e[t].overloadTable){var r=e[t];e[t]=function(){return e[t].overloadTable.hasOwnProperty(arguments.length)||pn("Function '"+n+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+e[t].overloadTable+")!"),e[t].overloadTable[arguments.length].apply(this,arguments)},e[t].overloadTable=[],e[t].overloadTable[r.argCount]=r}}function Sn(e,n,r){t.hasOwnProperty(e)?((void 0===r||void 0!==t[e].overloadTable&&void 0!==t[e].overloadTable[r])&&pn("Cannot register public name '"+e+"' twice"),kn(t,e,e),t.hasOwnProperty(r)&&pn("Cannot register multiple overloads of a function with the same number of arguments ("+r+")!"),t[e].overloadTable[r]=n):(t[e]=n,void 0!==r&&(t[e].numArguments=r))}function An(e,t){for(var n=[],r=0;r<e;r++)n.push(Q[(t>>2)+r]);return n}function Fn(e,n,r){t.hasOwnProperty(e)||rn("Replacing nonexistant public symbol"),void 0!==t[e].overloadTable&&void 0!==r?t[e].overloadTable[r]=n:(t[e]=n,t[e].argCount=r)}function jn(e,n,r){A("dynCall_"+e in t,"bad function pointer type - no table for sig '"+e+"'"),r&&r.length?A(r.length===e.substring(1).replace(/j/g,"--").length):A(1==e.length);var o=t["dynCall_"+e];return r&&r.length?o.apply(null,[n].concat(r)):o.call(null,n)}function In(e,t,n){return e.includes("j")?jn(e,t,n):(A(Ye(t),"missing table entry in dynCall: "+t),Ye(t).apply(null,n))}function xn(e,t){A(e.includes("j"),"getDynCaller should only be called with i64 sigs");var n=[];return function(){n.length=arguments.length;for(var r=0;r<arguments.length;r++)n[r]=arguments[r];return In(e,t,n)}}function Un(e,t){var n=(e=un(e)).includes("j")?xn(e,t):Ye(t);return"function"!=typeof n&&pn("unknown function pointer with signature "+e+": "+t),n}var Nn=void 0;function Cn(e){var t=Br(e),n=un(t);return zr(t),n}function Hn(e,t){var n=[],r={};throw t.forEach((function e(t){r[t]||Vt[t]||(Kt[t]?Kt[t].forEach(e):(n.push(t),r[t]=!0))})),new Nn(e+": "+n.map(Cn).join([", "]))}function Ln(e,t,n,r,o,i){var a=An(t,n);e=un(e),o=Un(r,o),Sn(e,(function(){Hn("Cannot call "+e+" due to unbound types",a)}),t-1),on([],a,(function(n){var r=[n[0],null].concat(n.slice(1));return Fn(e,Mn(e,r,null,o,i),t-1),[]}))}function Xn(e,t,n){switch(t){case 0:return n?function(e){return H[e]}:function(e){return L[e]};case 1:return n?function(e){return X[e>>1]}:function(e){return z[e>>1]};case 2:return n?function(e){return Q[e>>2]}:function(e){return B[e>>2]};default:throw new TypeError("Unknown integer type: "+e)}}function zn(e,t,n,r,o){t=un(t),-1===o&&(o=4294967295);var i=cn(n),a=function(e){return e};if(0===r){var s=32-8*n;a=function(e){return e<<s>>>s}}var c=t.includes("unsigned");_n(e,{name:t,fromWireType:a,toWireType:function(e,n){if("number"!=typeof n&&"boolean"!=typeof n)throw new TypeError('Cannot convert "'+Tn(n)+'" to '+this.name);if(n<r||n>o)throw new TypeError('Passing a number "'+Tn(n)+'" from JS side to C/C++ side to an argument of type "'+t+'", which is outside the valid range ['+r+", "+o+"]!");return c?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Xn(t,i,0!==r),destructorFunction:null})}function Qn(e,t,n){var r=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function o(e){var t=B,n=t[e>>=2],o=t[e+1];return new r(C,o,n)}_n(e,{name:n=un(n),fromWireType:o,argPackAdvance:8,readValueFromPointer:o},{ignoreDuplicateRegistrations:!0})}function Bn(e,t){var n="std::string"===(t=un(t));_n(e,{name:t,fromWireType:function(e){var t,r=B[e>>2];if(n)for(var o=e+4,i=0;i<=r;++i){var a=e+4+i;if(i==r||0==L[a]){var s=I(o,a-o);void 0===t?t=s:(t+=String.fromCharCode(0),t+=s),o=a+1}}else{var c=new Array(r);for(i=0;i<r;++i)c[i]=String.fromCharCode(L[e+4+i]);t=c.join("")}return zr(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r="string"==typeof t;r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||pn("Cannot pass non-string to std::string");var o=(n&&r?function(){return N(t)}:function(){return t.length})(),i=Xr(4+o+1);if(B[i>>2]=o,n&&r)U(t,i+4,o+1);else if(r)for(var a=0;a<o;++a){var s=t.charCodeAt(a);s>255&&(zr(i),pn("String has UTF-16 code units that do not fit in 8 bits")),L[i+4+a]=s}else for(a=0;a<o;++a)L[i+4+a]=t[a];return null!==e&&e.push(zr,i),i},argPackAdvance:8,readValueFromPointer:Gt,destructorFunction:function(e){zr(e)}})}function Wn(e,t,n){var r,o,i,a,s;n=un(n),2===t?(r=Y,o=V,a=K,i=function(){return z},s=1):4===t&&(r=q,o=J,a=$,i=function(){return B},s=2),_n(e,{name:n,fromWireType:function(e){for(var n,o=B[e>>2],a=i(),c=e+4,d=0;d<=o;++d){var l=e+4+d*t;if(d==o||0==a[l>>s]){var u=r(c,l-c);void 0===n?n=u:(n+=String.fromCharCode(0),n+=u),c=l+t}}return zr(e),n},toWireType:function(e,r){"string"!=typeof r&&pn("Cannot pass non-string to C++ string type "+n);var i=a(r),c=Xr(4+i+t);return B[c>>2]=i>>s,o(r,c+4,i+t),null!==e&&e.push(zr,c),c},argPackAdvance:8,readValueFromPointer:Gt,destructorFunction:function(e){zr(e)}})}function Zn(e,t,n,r,o,i){Wt[e]={name:un(t),rawConstructor:Un(n,r),rawDestructor:Un(o,i),fields:[]}}function Gn(e,t,n,r,o,i,a,s,c,d){Wt[e].fields.push({fieldName:un(t),getterReturnType:n,getter:Un(r,o),getterContext:i,setterArgumentType:a,setter:Un(s,c),setterContext:d})}function Yn(e,t){_n(e,{isVoid:!0,name:t=un(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,t){}})}function Vn(){throw"longjmp"}function Kn(e){e>4&&(mn[e].refcount+=1)}var qn={};function Jn(e){var t=qn[e];return void 0===t?un(e):t}function $n(e){return On.toHandle(Jn(e))}function er(e,t){var n=Vt[e];return void 0===n&&pn(t+" has unknown type "+Cn(e)),n}function tr(e,t){var n=(e=er(e,"_emval_take_value")).readValueFromPointer(t);return On.toHandle(n)}function nr(){Ae("native code called abort()")}function rr(e,t){return e-t}var or=[];function ir(e,t){var n;for(A(Array.isArray(or)),A(t%16==0),or.length=0,t>>=2;n=L[e++];){A(100===n||102===n||105===n);var r=n<105;r&&1&t&&t++,or.push(r?Z[t++>>1]:Q[t]),++t}return or}function ar(e,t,n){var r=ir(t,n);return ze.hasOwnProperty(e)||Ae("No EM_ASM constant found at address "+e),ze[e].apply(null,r)}function sr(){return 2147483648}function cr(e,t,n){L.copyWithin(e,t,t+n)}function dr(e){try{return M.grow(e-C.byteLength+65535>>>16),oe(M.buffer),1}catch(t){O("emscripten_realloc_buffer: Attempted to grow heap from "+C.byteLength+" bytes to "+e+" bytes, but got error: "+t)}}function lr(e){var t=L.length;A((e>>>=0)>t);var n=2147483648;if(e>n)return O("Cannot enlarge memory, asked to go up to "+e+" bytes, but the limit is 2147483648 bytes!"),!1;for(var r=1;r<=4;r*=2){var o=t*(1+.2/r);o=Math.min(o,e+100663296);var i=Math.min(n,re(Math.max(e,o),65536));if(dr(i))return!0}return O("Failed to grow the heap from "+t+" bytes to "+i+" bytes, not enough memory!"),!1}var ur={};function fr(){return d||"./this.program"}function pr(){if(!pr.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:fr()};for(var t in ur)void 0===ur[t]?delete e[t]:e[t]=ur[t];var n=[];for(var t in e)n.push(t+"="+e[t]);pr.strings=n}return pr.strings}function _r(e,t){var n=0;return pr().forEach((function(r,o){var i=t+n;Q[e+4*o>>2]=i,ne(r,i),n+=r.length+1})),0}function hr(e,t){var n=pr();Q[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),Q[t>>2]=r,0}function gr(e){la(e)}function mr(e){try{var t=Ut.getStreamFromFD(e);return xt.close(t),0}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),e.errno}}function wr(e,t){try{var n=Ut.getStreamFromFD(e),r=n.tty?2:xt.isDir(n.mode)?3:xt.isLink(n.mode)?7:4;return H[t>>0]=r,0}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),e.errno}}function Er(e,t,n,r){try{var o=Ut.getStreamFromFD(e),i=Ut.doReadv(o,t,n);return Q[r>>2]=i,0}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),e.errno}}function yr(e,t,n,r,o){try{var i=Ut.getStreamFromFD(e),a=4294967296*n+(t>>>0),s=9007199254740992;return a<=-s||a>=s?-61:(xt.llseek(i,a,r),Ie=[i.position>>>0,(je=i.position,+Math.abs(je)>=1?je>0?(0|Math.min(+Math.floor(je/4294967296),4294967295))>>>0:~~+Math.ceil((je-+(~~je>>>0))/4294967296)>>>0:0)],Q[o>>2]=Ie[0],Q[o+4>>2]=Ie[1],i.getdents&&0===a&&0===r&&(i.getdents=null),0)}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),e.errno}}function vr(e,t,n,r){try{var o=Ut.getStreamFromFD(e),i=Ut.doWritev(o,t,n);return Q[r>>2]=i,0}catch(e){return void 0!==xt&&e instanceof xt.ErrnoError||Ae(e),e.errno}}function Or(){return P()}function br(e,t){br.randomDevice||(br.randomDevice=Rt());for(var n=0;n<t;n++)H[e+n>>0]=br.randomDevice();return 0}function Tr(e){var t=Date.now();return Q[e>>2]=t/1e3|0,Q[e+4>>2]=t%1e3*1e3|0,0}function Dr(e){return e}function Rr(e){R(e)}function Pr(e){return e%4==0&&(e%100!=0||e%400==0)}function Mr(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var kr=[31,29,31,30,31,30,31,31,30,31,30,31],Sr=[31,28,31,30,31,30,31,31,30,31,30,31];function Ar(e,t){for(var n=new Date(e.getTime());t>0;){var r=Pr(n.getFullYear()),o=n.getMonth(),i=(r?kr:Sr)[o];if(!(t>i-n.getDate()))return n.setDate(n.getDate()+t),n;t-=i-n.getDate()+1,n.setDate(1),o<11?n.setMonth(o+1):(n.setMonth(0),n.setFullYear(n.getFullYear()+1))}return n}function Fr(e,t,n,r){var o=Q[r+40>>2],i={tm_sec:Q[r>>2],tm_min:Q[r+4>>2],tm_hour:Q[r+8>>2],tm_mday:Q[r+12>>2],tm_mon:Q[r+16>>2],tm_year:Q[r+20>>2],tm_wday:Q[r+24>>2],tm_yday:Q[r+28>>2],tm_isdst:Q[r+32>>2],tm_gmtoff:Q[r+36>>2],tm_zone:o?I(o):""},a=I(n),s={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var c in s)a=a.replace(new RegExp(c,"g"),s[c]);var d=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],l=["January","February","March","April","May","June","July","August","September","October","November","December"];function u(e,t,n){for(var r="number"==typeof e?e.toString():e||"";r.length<t;)r=n[0]+r;return r}function f(e,t){return u(e,t,"0")}function p(e,t){function n(e){return e<0?-1:e>0?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function _(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function h(e){var t=Ar(new Date(e.tm_year+1900,0,1),e.tm_yday),n=new Date(t.getFullYear(),0,4),r=new Date(t.getFullYear()+1,0,4),o=_(n),i=_(r);return p(o,t)<=0?p(i,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var g={"%a":function(e){return d[e.tm_wday].substring(0,3)},"%A":function(e){return d[e.tm_wday]},"%b":function(e){return l[e.tm_mon].substring(0,3)},"%B":function(e){return l[e.tm_mon]},"%C":function(e){return f((e.tm_year+1900)/100|0,2)},"%d":function(e){return f(e.tm_mday,2)},"%e":function(e){return u(e.tm_mday,2," ")},"%g":function(e){return h(e).toString().substring(2)},"%G":function(e){return h(e)},"%H":function(e){return f(e.tm_hour,2)},"%I":function(e){var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),f(t,2)},"%j":function(e){return f(e.tm_mday+Mr(Pr(e.tm_year+1900)?kr:Sr,e.tm_mon-1),3)},"%m":function(e){return f(e.tm_mon+1,2)},"%M":function(e){return f(e.tm_min,2)},"%n":function(){return"\n"},"%p":function(e){return e.tm_hour>=0&&e.tm_hour<12?"AM":"PM"},"%S":function(e){return f(e.tm_sec,2)},"%t":function(){return"\t"},"%u":function(e){return e.tm_wday||7},"%U":function(e){var t=new Date(e.tm_year+1900,0,1),n=0===t.getDay()?t:Ar(t,7-t.getDay()),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(p(n,r)<0){var o=Mr(Pr(r.getFullYear())?kr:Sr,r.getMonth()-1)-31,i=31-n.getDate()+o+r.getDate();return f(Math.ceil(i/7),2)}return 0===p(n,t)?"01":"00"},"%V":function(e){var t,n=new Date(e.tm_year+1900,0,4),r=new Date(e.tm_year+1901,0,4),o=_(n),i=_(r),a=Ar(new Date(e.tm_year+1900,0,1),e.tm_yday);return p(a,o)<0?"53":p(i,a)<=0?"01":(t=o.getFullYear()<e.tm_year+1900?e.tm_yday+32-o.getDate():e.tm_yday+1-o.getDate(),f(Math.ceil(t/7),2))},"%w":function(e){return e.tm_wday},"%W":function(e){var t=new Date(e.tm_year,0,1),n=1===t.getDay()?t:Ar(t,0===t.getDay()?1:7-t.getDay()+1),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(p(n,r)<0){var o=Mr(Pr(r.getFullYear())?kr:Sr,r.getMonth()-1)-31,i=31-n.getDate()+o+r.getDate();return f(Math.ceil(i/7),2)}return 0===p(n,t)?"01":"00"},"%y":function(e){return(e.tm_year+1900).toString().substring(2)},"%Y":function(e){return e.tm_year+1900},"%z":function(e){var t=e.tm_gmtoff,n=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(n?"+":"-")+String("0000"+t).slice(-4)},"%Z":function(e){return e.tm_zone},"%%":function(){return"%"}};for(var c in g)a.includes(c)&&(a=a.replace(new RegExp(c,"g"),g[c](i)));var m=Cr(a,!1);return m.length>t?0:(te(m,e),m.length-1)}function jr(e,t,n,r){return Fr(e,t,n,r)}function Ir(e){var t=Date.now()/1e3|0;return e&&(Q[e>>2]=t),t}var xr=function(e,t,n,r){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=xt.nextInode++,this.name=t,this.mode=n,this.node_ops={},this.stream_ops={},this.rdev=r},Ur=365,Nr=146;function Cr(e,t,n){var r=n>0?n:N(e)+1,o=new Array(r),i=x(e,o,0,o.length);return t&&(o.length=i),o}Object.defineProperties(xr.prototype,{read:{get:function(){return(this.mode&Ur)===Ur},set:function(e){e?this.mode|=Ur:this.mode&=~Ur}},write:{get:function(){return(this.mode&Nr)===Nr},set:function(e){e?this.mode|=Nr:this.mode&=~Nr}},isFolder:{get:function(){return xt.isDir(this.mode)}},isDevice:{get:function(){return xt.isChrdev(this.mode)}}}),xt.FSNode=xr,xt.staticInit(),t.FS_createPath=xt.createPath,t.FS_createDataFile=xt.createDataFile,t.FS_createPreloadedFile=xt.createPreloadedFile,t.FS_createLazyFile=xt.createLazyFile,t.FS_createDevice=xt.createDevice,t.FS_unlink=xt.unlink,jt={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},nn=t.InternalError=tn(Error,"InternalError"),dn(),fn=t.BindingError=tn(Error,"BindingError"),vn(),Nn=t.UnboundTypeError=tn(Error,"UnboundTypeError"),"function"==typeof atob&&atob;var Hr,Lr={__assert_fail:Ve,__clock_gettime:$e,__cxa_allocate_exception:et,__cxa_atexit:tt,__cxa_begin_catch:st,__cxa_end_catch:ut,__cxa_find_matching_catch_2:pt,__cxa_find_matching_catch_3:_t,__cxa_find_matching_catch_4:ht,__cxa_find_matching_catch_6:gt,__cxa_free_exception:dt,__cxa_get_exception_ptr:mt,__cxa_rethrow:wt,__cxa_throw:Et,__cxa_uncaught_exceptions:yt,__localtime_r:Tt,__resumeException:ft,__syscall_fcntl64:Nt,__syscall_ioctl:Ct,__syscall_open:Ht,__syscall_rmdir:Lt,__syscall_stat64:Xt,__syscall_unlink:zt,_dlopen_js:Qt,_dlsym_js:Bt,_embind_finalize_value_object:an,_embind_register_bigint:sn,_embind_register_bool:hn,_embind_register_emval:bn,_embind_register_float:Rn,_embind_register_function:Ln,_embind_register_integer:zn,_embind_register_memory_view:Qn,_embind_register_std_string:Bn,_embind_register_std_wstring:Wn,_embind_register_value_object:Zn,_embind_register_value_object_field:Gn,_embind_register_void:Yn,_emscripten_throw_longjmp:Vn,_emval_decref:wn,_emval_incref:Kn,_emval_new_cstring:$n,_emval_take_value:tr,abort:nr,clock_gettime:Je,difftime:rr,emscripten_asm_const_int:ar,emscripten_get_heap_max:sr,emscripten_get_now:Ze,emscripten_memcpy_big:cr,emscripten_resize_heap:lr,environ_get:_r,environ_sizes_get:hr,exit:gr,fd_close:mr,fd_fdstat_get:wr,fd_read:Er,fd_seek:yr,fd_write:vr,getTempRet0:Or,getentropy:br,gettimeofday:Tr,invoke_di:Io,invoke_did:zi,invoke_dii:Uo,invoke_diiddi:vi,invoke_diii:Wi,invoke_fff:Qi,invoke_fi:jo,invoke_fid:Si,invoke_fii:Qo,invoke_fiii:ii,invoke_i:Co,invoke_iffff:Bi,invoke_ifi:ti,invoke_ii:go,invoke_iid:Fo,invoke_iif:wi,invoke_iii:wo,invoke_iiif:pi,invoke_iiii:vo,invoke_iiiididi:xi,invoke_iiiii:yo,invoke_iiiiid:_i,invoke_iiiiii:Do,invoke_iiiiiii:So,invoke_iiiiiiii:ko,invoke_iiiiiiiii:Ho,invoke_iiiiiiiiii:To,invoke_iiiiiiiiiii:oi,invoke_iiiiiiiiiiii:ui,invoke_iiiiij:na,invoke_iiiiijj:ra,invoke_iiij:Ji,invoke_iij:Gi,invoke_iiji:Ki,invoke_iijj:Vi,invoke_j:ia,invoke_jii:$i,invoke_jiiii:oa,invoke_v:Ao,invoke_vdii:ni,invoke_vfffiif:li,invoke_vffiiiii:di,invoke_vi:ho,invoke_vid:xo,invoke_vidd:Li,invoke_viddii:Xo,invoke_vidi:Ni,invoke_vididdii:Di,invoke_vif:Xi,invoke_vifiiii:Bo,invoke_vii:Eo,invoke_viid:gi,invoke_viidd:Ro,invoke_viidddii:Zi,invoke_viiddidd:ki,invoke_viiddii:Mi,invoke_viiddiii:yi,invoke_viidi:Ii,invoke_viidiiid:Fi,invoke_viidiiiiiiii:Oi,invoke_viif:Ei,invoke_viifii:ji,invoke_viifiii:ci,invoke_viii:mo,invoke_viiid:Ui,invoke_viiidd:fi,invoke_viiiddd:bi,invoke_viiiddi:hi,invoke_viiidi:mi,invoke_viiii:Po,invoke_viiiiddi:Pi,invoke_viiiidiid:Hi,invoke_viiiidiiii:Ai,invoke_viiiiffff:Ci,invoke_viiiifiiif:si,invoke_viiiii:Oo,invoke_viiiiiddi:Ri,invoke_viiiiii:bo,invoke_viiiiiiddi:Ti,invoke_viiiiiif:Yo,invoke_viiiiiiffiiiii:ai,invoke_viiiiiii:No,invoke_viiiiiiifiiii:Ko,invoke_viiiiiiii:zo,invoke_viiiiiiiii:Mo,invoke_viiiiiiiiii:Lo,invoke_viiiiiiiiiifii:Vo,invoke_viiiiiiiiiii:Go,invoke_viiiiiiiiiiii:qo,invoke_viiiiiiiiiiiii:$o,invoke_viiiiiiiiiiiiii:Wo,invoke_viiiiiiiiiiiiiii:Zo,invoke_viiiiiiiiiiiiiiii:ei,invoke_viiiiiiiiiiiiiiiiiii:Jo,invoke_viiiiiiiiiiiiiiiiiiii:ri,invoke_viiji:ta,invoke_viijiii:ea,invoke_viijj:qi,invoke_vij:Yi,llvm_eh_typeid_for:Dr,localtime_r:bt,setTempRet0:Rr,strftime_l:jr,time:Ir},Xr=(Xe(),t.___wasm_call_ctors=Ce("__wasm_call_ctors"),t._malloc=Ce("malloc")),zr=(t._saveSetjmp=Ce("saveSetjmp"),t._free=Ce("free")),Qr=(t._fflush=Ce("fflush"),t.___errno_location=Ce("__errno_location")),Br=(t._htonl=Ce("htonl"),t._htons=Ce("htons"),t.___getTypeName=Ce("__getTypeName")),Wr=(t.___embind_register_native_and_builtin_types=Ce("__embind_register_native_and_builtin_types"),t._emscripten_main_thread_process_queued_calls=Ce("emscripten_main_thread_process_queued_calls"),t._ntohs=Ce("ntohs"),t.___dl_seterr=Ce("__dl_seterr"),t.__get_tzname=Ce("_get_tzname")),Zr=t.__get_daylight=Ce("_get_daylight"),Gr=t.__get_timezone=Ce("_get_timezone"),Yr=t.stackSave=Ce("stackSave"),Vr=t.stackRestore=Ce("stackRestore"),Kr=(t.stackAlloc=Ce("stackAlloc"),t._emscripten_stack_init=function(){return(Kr=t._emscripten_stack_init=t.asm.emscripten_stack_init).apply(null,arguments)}),qr=(t._emscripten_stack_get_free=function(){return(t._emscripten_stack_get_free=t.asm.emscripten_stack_get_free).apply(null,arguments)},t._emscripten_stack_get_end=function(){return(qr=t._emscripten_stack_get_end=t.asm.emscripten_stack_get_end).apply(null,arguments)}),Jr=t._setThrew=Ce("setThrew"),$r=t.___cxa_can_catch=Ce("__cxa_can_catch"),eo=t.___cxa_is_pointer_type=Ce("__cxa_is_pointer_type"),to=t.dynCall_iij=Ce("dynCall_iij"),no=t.dynCall_vij=Ce("dynCall_vij"),ro=t.dynCall_iijj=Ce("dynCall_iijj"),oo=t.dynCall_iiji=Ce("dynCall_iiji"),io=t.dynCall_iiij=Ce("dynCall_iiij"),ao=t.dynCall_jii=Ce("dynCall_jii"),so=(t.dynCall_jjj=Ce("dynCall_jjj"),t.dynCall_viijiii=Ce("dynCall_viijiii")),co=(t.dynCall_viijii=Ce("dynCall_viijii"),t.dynCall_viij=Ce("dynCall_viij"),t.dynCall_jiji=Ce("dynCall_jiji"),t.dynCall_viiji=Ce("dynCall_viiji")),lo=t.dynCall_iiiiij=Ce("dynCall_iiiiij"),uo=t.dynCall_iiiiijj=Ce("dynCall_iiiiijj"),fo=t.dynCall_jiiii=Ce("dynCall_jiiii"),po=t.dynCall_j=Ce("dynCall_j"),_o=(t.dynCall_iiiiiijj=Ce("dynCall_iiiiiijj"),t.dynCall_viijj=Ce("dynCall_viijj"));function ho(e,t){var n=Yr();try{Ye(e)(t)}catch(e){if(Vr(n),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function go(e,t){var n=Yr();try{return Ye(e)(t)}catch(e){if(Vr(n),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function mo(e,t,n,r){var o=Yr();try{Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function wo(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Eo(e,t,n){var r=Yr();try{Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function yo(e,t,n,r,o){var i=Yr();try{return Ye(e)(t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function vo(e,t,n,r){var o=Yr();try{return Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Oo(e,t,n,r,o,i){var a=Yr();try{Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function bo(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function To(e,t,n,r,o,i,a,s,c,d){var l=Yr();try{return Ye(e)(t,n,r,o,i,a,s,c,d)}catch(e){if(Vr(l),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Do(e,t,n,r,o,i){var a=Yr();try{return Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ro(e,t,n,r,o){var i=Yr();try{Ye(e)(t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Po(e,t,n,r,o){var i=Yr();try{Ye(e)(t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Mo(e,t,n,r,o,i,a,s,c,d){var l=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d)}catch(e){if(Vr(l),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ko(e,t,n,r,o,i,a,s){var c=Yr();try{return Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function So(e,t,n,r,o,i,a){var s=Yr();try{return Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ao(e){var t=Yr();try{Ye(e)()}catch(e){if(Vr(t),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Fo(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function jo(e,t){var n=Yr();try{return Ye(e)(t)}catch(e){if(Vr(n),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Io(e,t){var n=Yr();try{return Ye(e)(t)}catch(e){if(Vr(n),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function xo(e,t,n){var r=Yr();try{Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Uo(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function No(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Co(e){var t=Yr();try{return Ye(e)()}catch(e){if(Vr(t),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ho(e,t,n,r,o,i,a,s,c){var d=Yr();try{return Ye(e)(t,n,r,o,i,a,s,c)}catch(e){if(Vr(d),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Lo(e,t,n,r,o,i,a,s,c,d,l){var u=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l)}catch(e){if(Vr(u),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Xo(e,t,n,r,o,i){var a=Yr();try{Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function zo(e,t,n,r,o,i,a,s,c){var d=Yr();try{Ye(e)(t,n,r,o,i,a,s,c)}catch(e){if(Vr(d),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Qo(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Bo(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Wo(e,t,n,r,o,i,a,s,c,d,l,u,f,p,_){var h=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p,_)}catch(e){if(Vr(h),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Zo(e,t,n,r,o,i,a,s,c,d,l,u,f,p,_,h){var g=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p,_,h)}catch(e){if(Vr(g),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Go(e,t,n,r,o,i,a,s,c,d,l,u){var f=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u)}catch(e){if(Vr(f),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Yo(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Vo(e,t,n,r,o,i,a,s,c,d,l,u,f,p){var _=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p)}catch(e){if(Vr(_),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ko(e,t,n,r,o,i,a,s,c,d,l,u,f){var p=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f)}catch(e){if(Vr(p),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function qo(e,t,n,r,o,i,a,s,c,d,l,u,f){var p=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f)}catch(e){if(Vr(p),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Jo(e,t,n,r,o,i,a,s,c,d,l,u,f,p,_,h,g,m,w,E){var y=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p,_,h,g,m,w,E)}catch(e){if(Vr(y),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function $o(e,t,n,r,o,i,a,s,c,d,l,u,f,p){var _=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p)}catch(e){if(Vr(_),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ei(e,t,n,r,o,i,a,s,c,d,l,u,f,p,_,h,g){var m=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p,_,h,g)}catch(e){if(Vr(m),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ti(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ni(e,t,n,r){var o=Yr();try{Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ri(e,t,n,r,o,i,a,s,c,d,l,u,f,p,_,h,g,m,w,E,y){var v=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p,_,h,g,m,w,E,y)}catch(e){if(Vr(v),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function oi(e,t,n,r,o,i,a,s,c,d,l){var u=Yr();try{return Ye(e)(t,n,r,o,i,a,s,c,d,l)}catch(e){if(Vr(u),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ii(e,t,n,r){var o=Yr();try{return Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ai(e,t,n,r,o,i,a,s,c,d,l,u,f,p){var _=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u,f,p)}catch(e){if(Vr(_),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function si(e,t,n,r,o,i,a,s,c,d){var l=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d)}catch(e){if(Vr(l),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ci(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function di(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function li(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ui(e,t,n,r,o,i,a,s,c,d,l,u){var f=Yr();try{return Ye(e)(t,n,r,o,i,a,s,c,d,l,u)}catch(e){if(Vr(f),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function fi(e,t,n,r,o,i){var a=Yr();try{Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function pi(e,t,n,r){var o=Yr();try{return Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function _i(e,t,n,r,o,i){var a=Yr();try{return Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function hi(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function gi(e,t,n,r){var o=Yr();try{Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function mi(e,t,n,r,o,i){var a=Yr();try{Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function wi(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ei(e,t,n,r){var o=Yr();try{Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function yi(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function vi(e,t,n,r,o,i){var a=Yr();try{return Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Oi(e,t,n,r,o,i,a,s,c,d,l,u){var f=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d,l,u)}catch(e){if(Vr(f),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function bi(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ti(e,t,n,r,o,i,a,s,c,d){var l=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d)}catch(e){if(Vr(l),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Di(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ri(e,t,n,r,o,i,a,s,c){var d=Yr();try{Ye(e)(t,n,r,o,i,a,s,c)}catch(e){if(Vr(d),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Pi(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Mi(e,t,n,r,o,i,a){var s=Yr();try{Ye(e)(t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ki(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Si(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ai(e,t,n,r,o,i,a,s,c,d){var l=Yr();try{Ye(e)(t,n,r,o,i,a,s,c,d)}catch(e){if(Vr(l),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Fi(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ji(e,t,n,r,o,i){var a=Yr();try{Ye(e)(t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ii(e,t,n,r,o){var i=Yr();try{Ye(e)(t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function xi(e,t,n,r,o,i,a,s){var c=Yr();try{return Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ui(e,t,n,r,o){var i=Yr();try{Ye(e)(t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ni(e,t,n,r){var o=Yr();try{Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ci(e,t,n,r,o,i,a,s,c){var d=Yr();try{Ye(e)(t,n,r,o,i,a,s,c)}catch(e){if(Vr(d),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Hi(e,t,n,r,o,i,a,s,c){var d=Yr();try{Ye(e)(t,n,r,o,i,a,s,c)}catch(e){if(Vr(d),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Li(e,t,n,r){var o=Yr();try{Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Xi(e,t,n){var r=Yr();try{Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function zi(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Qi(e,t,n){var r=Yr();try{return Ye(e)(t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Bi(e,t,n,r,o){var i=Yr();try{return Ye(e)(t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Wi(e,t,n,r){var o=Yr();try{return Ye(e)(t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Zi(e,t,n,r,o,i,a,s){var c=Yr();try{Ye(e)(t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Gi(e,t,n,r){var o=Yr();try{return to(e,t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Yi(e,t,n,r){var o=Yr();try{no(e,t,n,r)}catch(e){if(Vr(o),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Vi(e,t,n,r,o,i){var a=Yr();try{return ro(e,t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ki(e,t,n,r,o){var i=Yr();try{return oo(e,t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function qi(e,t,n,r,o,i,a){var s=Yr();try{_o(e,t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function Ji(e,t,n,r,o){var i=Yr();try{return io(e,t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function $i(e,t,n){var r=Yr();try{return ao(e,t,n)}catch(e){if(Vr(r),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ea(e,t,n,r,o,i,a,s){var c=Yr();try{so(e,t,n,r,o,i,a,s)}catch(e){if(Vr(c),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ta(e,t,n,r,o,i){var a=Yr();try{co(e,t,n,r,o,i)}catch(e){if(Vr(a),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function na(e,t,n,r,o,i,a){var s=Yr();try{return lo(e,t,n,r,o,i,a)}catch(e){if(Vr(s),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ra(e,t,n,r,o,i,a,s,c){var d=Yr();try{return uo(e,t,n,r,o,i,a,s,c)}catch(e){if(Vr(d),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function oa(e,t,n,r,o){var i=Yr();try{return fo(e,t,n,r,o)}catch(e){if(Vr(i),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function ia(e){var t=Yr();try{return po(e)}catch(e){if(Vr(t),e!==e+0&&"longjmp"!==e)throw e;Jr(1,0)}}function aa(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function sa(){Kr(),ce()}function ca(e){function n(){Hr||(Hr=!0,t.calledRun=!0,S||(we(),o(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),A(!t._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),ye()))}e=e||c,Te>0||(sa(),me(),Te>0||(t.setStatus?(t.setStatus("Running..."),setTimeout((function(){setTimeout((function(){t.setStatus("")}),1),n()}),1)):n(),de()))}function da(){var e=v,n=O,r=!1;v=O=function(e){r=!0};try{var o=t._fflush;o&&o(0),["stdout","stderr"].forEach((function(e){var t=xt.analyzePath("/dev/"+e);if(t){var n=t.object.rdev,o=Mt.ttys[n];o&&o.output&&o.output.length&&(r=!0)}}))}catch(e){}v=e,O=n,r&&b("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.")}function la(e,t){if(da(),ge()){if(!t){var n="program exited (with status: "+e+"), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)";i(n),O(n)}}else Ee();ua(e)}function ua(e){ge()||(t.onExit&&t.onExit(e),S=!0),l(e,new aa(e))}if(Object.getOwnPropertyDescriptor(t,"intArrayFromString")||(t.intArrayFromString=function(){Ae("'intArrayFromString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"intArrayToString")||(t.intArrayToString=function(){Ae("'intArrayToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ccall")||(t.ccall=function(){Ae("'ccall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"cwrap")||(t.cwrap=function(){Ae("'cwrap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setValue")||(t.setValue=function(){Ae("'setValue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getValue")||(t.getValue=function(){Ae("'getValue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"allocate")||(t.allocate=function(){Ae("'allocate' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"UTF8ArrayToString")||(t.UTF8ArrayToString=function(){Ae("'UTF8ArrayToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"UTF8ToString")||(t.UTF8ToString=function(){Ae("'UTF8ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stringToUTF8Array")||(t.stringToUTF8Array=function(){Ae("'stringToUTF8Array' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stringToUTF8")||(t.stringToUTF8=function(){Ae("'stringToUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"lengthBytesUTF8")||(t.lengthBytesUTF8=function(){Ae("'lengthBytesUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stackTrace")||(t.stackTrace=function(){Ae("'stackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"addOnPreRun")||(t.addOnPreRun=function(){Ae("'addOnPreRun' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"addOnInit")||(t.addOnInit=function(){Ae("'addOnInit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"addOnPreMain")||(t.addOnPreMain=function(){Ae("'addOnPreMain' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"addOnExit")||(t.addOnExit=function(){Ae("'addOnExit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"addOnPostRun")||(t.addOnPostRun=function(){Ae("'addOnPostRun' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeStringToMemory")||(t.writeStringToMemory=function(){Ae("'writeStringToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeArrayToMemory")||(t.writeArrayToMemory=function(){Ae("'writeArrayToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeAsciiToMemory")||(t.writeAsciiToMemory=function(){Ae("'writeAsciiToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),t.addRunDependency=ke,t.removeRunDependency=Se,Object.getOwnPropertyDescriptor(t,"FS_createFolder")||(t.FS_createFolder=function(){Ae("'FS_createFolder' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),t.FS_createPath=xt.createPath,t.FS_createDataFile=xt.createDataFile,t.FS_createPreloadedFile=xt.createPreloadedFile,t.FS_createLazyFile=xt.createLazyFile,Object.getOwnPropertyDescriptor(t,"FS_createLink")||(t.FS_createLink=function(){Ae("'FS_createLink' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),t.FS_createDevice=xt.createDevice,t.FS_unlink=xt.unlink,Object.getOwnPropertyDescriptor(t,"getLEB")||(t.getLEB=function(){Ae("'getLEB' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getFunctionTables")||(t.getFunctionTables=function(){Ae("'getFunctionTables' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"alignFunctionTables")||(t.alignFunctionTables=function(){Ae("'alignFunctionTables' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerFunctions")||(t.registerFunctions=function(){Ae("'registerFunctions' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"addFunction")||(t.addFunction=function(){Ae("'addFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"removeFunction")||(t.removeFunction=function(){Ae("'removeFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getFuncWrapper")||(t.getFuncWrapper=function(){Ae("'getFuncWrapper' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"prettyPrint")||(t.prettyPrint=function(){Ae("'prettyPrint' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"dynCall")||(t.dynCall=function(){Ae("'dynCall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getCompilerSetting")||(t.getCompilerSetting=function(){Ae("'getCompilerSetting' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"print")||(t.print=function(){Ae("'print' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"printErr")||(t.printErr=function(){Ae("'printErr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getTempRet0")||(t.getTempRet0=function(){Ae("'getTempRet0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setTempRet0")||(t.setTempRet0=function(){Ae("'setTempRet0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"callMain")||(t.callMain=function(){Ae("'callMain' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"abort")||(t.abort=function(){Ae("'abort' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"keepRuntimeAlive")||(t.keepRuntimeAlive=function(){Ae("'keepRuntimeAlive' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"zeroMemory")||(t.zeroMemory=function(){Ae("'zeroMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stringToNewUTF8")||(t.stringToNewUTF8=function(){Ae("'stringToNewUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setFileTime")||(t.setFileTime=function(){Ae("'setFileTime' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emscripten_realloc_buffer")||(t.emscripten_realloc_buffer=function(){Ae("'emscripten_realloc_buffer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ENV")||(t.ENV=function(){Ae("'ENV' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"withStackSave")||(t.withStackSave=function(){Ae("'withStackSave' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ERRNO_CODES")||(t.ERRNO_CODES=function(){Ae("'ERRNO_CODES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ERRNO_MESSAGES")||(t.ERRNO_MESSAGES=function(){Ae("'ERRNO_MESSAGES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setErrNo")||(t.setErrNo=function(){Ae("'setErrNo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"inetPton4")||(t.inetPton4=function(){Ae("'inetPton4' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"inetNtop4")||(t.inetNtop4=function(){Ae("'inetNtop4' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"inetPton6")||(t.inetPton6=function(){Ae("'inetPton6' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"inetNtop6")||(t.inetNtop6=function(){Ae("'inetNtop6' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"readSockaddr")||(t.readSockaddr=function(){Ae("'readSockaddr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeSockaddr")||(t.writeSockaddr=function(){Ae("'writeSockaddr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"DNS")||(t.DNS=function(){Ae("'DNS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getHostByName")||(t.getHostByName=function(){Ae("'getHostByName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"GAI_ERRNO_MESSAGES")||(t.GAI_ERRNO_MESSAGES=function(){Ae("'GAI_ERRNO_MESSAGES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"Protocols")||(t.Protocols=function(){Ae("'Protocols' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"Sockets")||(t.Sockets=function(){Ae("'Sockets' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getRandomDevice")||(t.getRandomDevice=function(){Ae("'getRandomDevice' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"traverseStack")||(t.traverseStack=function(){Ae("'traverseStack' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"UNWIND_CACHE")||(t.UNWIND_CACHE=function(){Ae("'UNWIND_CACHE' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"readAsmConstArgsArray")||(t.readAsmConstArgsArray=function(){Ae("'readAsmConstArgsArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"readAsmConstArgs")||(t.readAsmConstArgs=function(){Ae("'readAsmConstArgs' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"mainThreadEM_ASM")||(t.mainThreadEM_ASM=function(){Ae("'mainThreadEM_ASM' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"jstoi_q")||(t.jstoi_q=function(){Ae("'jstoi_q' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"jstoi_s")||(t.jstoi_s=function(){Ae("'jstoi_s' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getExecutableName")||(t.getExecutableName=function(){Ae("'getExecutableName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"listenOnce")||(t.listenOnce=function(){Ae("'listenOnce' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"autoResumeAudioContext")||(t.autoResumeAudioContext=function(){Ae("'autoResumeAudioContext' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"dynCallLegacy")||(t.dynCallLegacy=function(){Ae("'dynCallLegacy' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getDynCaller")||(t.getDynCaller=function(){Ae("'getDynCaller' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"dynCall")||(t.dynCall=function(){Ae("'dynCall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"callRuntimeCallbacks")||(t.callRuntimeCallbacks=function(){Ae("'callRuntimeCallbacks' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"wasmTableMirror")||(t.wasmTableMirror=function(){Ae("'wasmTableMirror' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setWasmTableEntry")||(t.setWasmTableEntry=function(){Ae("'setWasmTableEntry' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getWasmTableEntry")||(t.getWasmTableEntry=function(){Ae("'getWasmTableEntry' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"handleException")||(t.handleException=function(){Ae("'handleException' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"runtimeKeepalivePush")||(t.runtimeKeepalivePush=function(){Ae("'runtimeKeepalivePush' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"runtimeKeepalivePop")||(t.runtimeKeepalivePop=function(){Ae("'runtimeKeepalivePop' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"callUserCallback")||(t.callUserCallback=function(){Ae("'callUserCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"maybeExit")||(t.maybeExit=function(){Ae("'maybeExit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"safeSetTimeout")||(t.safeSetTimeout=function(){Ae("'safeSetTimeout' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"asmjsMangle")||(t.asmjsMangle=function(){Ae("'asmjsMangle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"asyncLoad")||(t.asyncLoad=function(){Ae("'asyncLoad' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"alignMemory")||(t.alignMemory=function(){Ae("'alignMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"mmapAlloc")||(t.mmapAlloc=function(){Ae("'mmapAlloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"reallyNegative")||(t.reallyNegative=function(){Ae("'reallyNegative' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"unSign")||(t.unSign=function(){Ae("'unSign' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"reSign")||(t.reSign=function(){Ae("'reSign' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"formatString")||(t.formatString=function(){Ae("'formatString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"PATH")||(t.PATH=function(){Ae("'PATH' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"PATH_FS")||(t.PATH_FS=function(){Ae("'PATH_FS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SYSCALLS")||(t.SYSCALLS=function(){Ae("'SYSCALLS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"syscallMmap2")||(t.syscallMmap2=function(){Ae("'syscallMmap2' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"syscallMunmap")||(t.syscallMunmap=function(){Ae("'syscallMunmap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getSocketFromFD")||(t.getSocketFromFD=function(){Ae("'getSocketFromFD' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getSocketAddress")||(t.getSocketAddress=function(){Ae("'getSocketAddress' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"JSEvents")||(t.JSEvents=function(){Ae("'JSEvents' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerKeyEventCallback")||(t.registerKeyEventCallback=function(){Ae("'registerKeyEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"specialHTMLTargets")||(t.specialHTMLTargets=function(){Ae("'specialHTMLTargets' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"maybeCStringToJsString")||(t.maybeCStringToJsString=function(){Ae("'maybeCStringToJsString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"findEventTarget")||(t.findEventTarget=function(){Ae("'findEventTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"findCanvasEventTarget")||(t.findCanvasEventTarget=function(){Ae("'findCanvasEventTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getBoundingClientRect")||(t.getBoundingClientRect=function(){Ae("'getBoundingClientRect' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillMouseEventData")||(t.fillMouseEventData=function(){Ae("'fillMouseEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerMouseEventCallback")||(t.registerMouseEventCallback=function(){Ae("'registerMouseEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerWheelEventCallback")||(t.registerWheelEventCallback=function(){Ae("'registerWheelEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerUiEventCallback")||(t.registerUiEventCallback=function(){Ae("'registerUiEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerFocusEventCallback")||(t.registerFocusEventCallback=function(){Ae("'registerFocusEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillDeviceOrientationEventData")||(t.fillDeviceOrientationEventData=function(){Ae("'fillDeviceOrientationEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerDeviceOrientationEventCallback")||(t.registerDeviceOrientationEventCallback=function(){Ae("'registerDeviceOrientationEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillDeviceMotionEventData")||(t.fillDeviceMotionEventData=function(){Ae("'fillDeviceMotionEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerDeviceMotionEventCallback")||(t.registerDeviceMotionEventCallback=function(){Ae("'registerDeviceMotionEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"screenOrientation")||(t.screenOrientation=function(){Ae("'screenOrientation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillOrientationChangeEventData")||(t.fillOrientationChangeEventData=function(){Ae("'fillOrientationChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerOrientationChangeEventCallback")||(t.registerOrientationChangeEventCallback=function(){Ae("'registerOrientationChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillFullscreenChangeEventData")||(t.fillFullscreenChangeEventData=function(){Ae("'fillFullscreenChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerFullscreenChangeEventCallback")||(t.registerFullscreenChangeEventCallback=function(){Ae("'registerFullscreenChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerRestoreOldStyle")||(t.registerRestoreOldStyle=function(){Ae("'registerRestoreOldStyle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"hideEverythingExceptGivenElement")||(t.hideEverythingExceptGivenElement=function(){Ae("'hideEverythingExceptGivenElement' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"restoreHiddenElements")||(t.restoreHiddenElements=function(){Ae("'restoreHiddenElements' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setLetterbox")||(t.setLetterbox=function(){Ae("'setLetterbox' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"currentFullscreenStrategy")||(t.currentFullscreenStrategy=function(){Ae("'currentFullscreenStrategy' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"restoreOldWindowedStyle")||(t.restoreOldWindowedStyle=function(){Ae("'restoreOldWindowedStyle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"softFullscreenResizeWebGLRenderTarget")||(t.softFullscreenResizeWebGLRenderTarget=function(){Ae("'softFullscreenResizeWebGLRenderTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"doRequestFullscreen")||(t.doRequestFullscreen=function(){Ae("'doRequestFullscreen' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillPointerlockChangeEventData")||(t.fillPointerlockChangeEventData=function(){Ae("'fillPointerlockChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerPointerlockChangeEventCallback")||(t.registerPointerlockChangeEventCallback=function(){Ae("'registerPointerlockChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerPointerlockErrorEventCallback")||(t.registerPointerlockErrorEventCallback=function(){Ae("'registerPointerlockErrorEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"requestPointerLock")||(t.requestPointerLock=function(){Ae("'requestPointerLock' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillVisibilityChangeEventData")||(t.fillVisibilityChangeEventData=function(){Ae("'fillVisibilityChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerVisibilityChangeEventCallback")||(t.registerVisibilityChangeEventCallback=function(){Ae("'registerVisibilityChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerTouchEventCallback")||(t.registerTouchEventCallback=function(){Ae("'registerTouchEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillGamepadEventData")||(t.fillGamepadEventData=function(){Ae("'fillGamepadEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerGamepadEventCallback")||(t.registerGamepadEventCallback=function(){Ae("'registerGamepadEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerBeforeUnloadEventCallback")||(t.registerBeforeUnloadEventCallback=function(){Ae("'registerBeforeUnloadEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"fillBatteryEventData")||(t.fillBatteryEventData=function(){Ae("'fillBatteryEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"battery")||(t.battery=function(){Ae("'battery' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerBatteryEventCallback")||(t.registerBatteryEventCallback=function(){Ae("'registerBatteryEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setCanvasElementSize")||(t.setCanvasElementSize=function(){Ae("'setCanvasElementSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getCanvasElementSize")||(t.getCanvasElementSize=function(){Ae("'getCanvasElementSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"demangle")||(t.demangle=function(){Ae("'demangle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"demangleAll")||(t.demangleAll=function(){Ae("'demangleAll' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"jsStackTrace")||(t.jsStackTrace=function(){Ae("'jsStackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stackTrace")||(t.stackTrace=function(){Ae("'stackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getEnvStrings")||(t.getEnvStrings=function(){Ae("'getEnvStrings' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"checkWasiClock")||(t.checkWasiClock=function(){Ae("'checkWasiClock' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeI53ToI64")||(t.writeI53ToI64=function(){Ae("'writeI53ToI64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeI53ToI64Clamped")||(t.writeI53ToI64Clamped=function(){Ae("'writeI53ToI64Clamped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeI53ToI64Signaling")||(t.writeI53ToI64Signaling=function(){Ae("'writeI53ToI64Signaling' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeI53ToU64Clamped")||(t.writeI53ToU64Clamped=function(){Ae("'writeI53ToU64Clamped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeI53ToU64Signaling")||(t.writeI53ToU64Signaling=function(){Ae("'writeI53ToU64Signaling' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"readI53FromI64")||(t.readI53FromI64=function(){Ae("'readI53FromI64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"readI53FromU64")||(t.readI53FromU64=function(){Ae("'readI53FromU64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"convertI32PairToI53")||(t.convertI32PairToI53=function(){Ae("'convertI32PairToI53' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"convertU32PairToI53")||(t.convertU32PairToI53=function(){Ae("'convertU32PairToI53' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setImmediateWrapped")||(t.setImmediateWrapped=function(){Ae("'setImmediateWrapped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"clearImmediateWrapped")||(t.clearImmediateWrapped=function(){Ae("'clearImmediateWrapped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"polyfillSetImmediate")||(t.polyfillSetImmediate=function(){Ae("'polyfillSetImmediate' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"uncaughtExceptionCount")||(t.uncaughtExceptionCount=function(){Ae("'uncaughtExceptionCount' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"exceptionLast")||(t.exceptionLast=function(){Ae("'exceptionLast' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"exceptionCaught")||(t.exceptionCaught=function(){Ae("'exceptionCaught' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ExceptionInfo")||(t.ExceptionInfo=function(){Ae("'ExceptionInfo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"CatchInfo")||(t.CatchInfo=function(){Ae("'CatchInfo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"exception_addRef")||(t.exception_addRef=function(){Ae("'exception_addRef' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"exception_decRef")||(t.exception_decRef=function(){Ae("'exception_decRef' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"Browser")||(t.Browser=function(){Ae("'Browser' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"funcWrappers")||(t.funcWrappers=function(){Ae("'funcWrappers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getFuncWrapper")||(t.getFuncWrapper=function(){Ae("'getFuncWrapper' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setMainLoop")||(t.setMainLoop=function(){Ae("'setMainLoop' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"wget")||(t.wget=function(){Ae("'wget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"FS")||(t.FS=function(){Ae("'FS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"MEMFS")||(t.MEMFS=function(){Ae("'MEMFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"TTY")||(t.TTY=function(){Ae("'TTY' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"PIPEFS")||(t.PIPEFS=function(){Ae("'PIPEFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SOCKFS")||(t.SOCKFS=function(){Ae("'SOCKFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"_setNetworkCallback")||(t._setNetworkCallback=function(){Ae("'_setNetworkCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"tempFixedLengthArray")||(t.tempFixedLengthArray=function(){Ae("'tempFixedLengthArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"miniTempWebGLFloatBuffers")||(t.miniTempWebGLFloatBuffers=function(){Ae("'miniTempWebGLFloatBuffers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"heapObjectForWebGLType")||(t.heapObjectForWebGLType=function(){Ae("'heapObjectForWebGLType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"heapAccessShiftForWebGLHeap")||(t.heapAccessShiftForWebGLHeap=function(){Ae("'heapAccessShiftForWebGLHeap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"GL")||(t.GL=function(){Ae("'GL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emscriptenWebGLGet")||(t.emscriptenWebGLGet=function(){Ae("'emscriptenWebGLGet' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"computeUnpackAlignedImageSize")||(t.computeUnpackAlignedImageSize=function(){Ae("'computeUnpackAlignedImageSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emscriptenWebGLGetTexPixelData")||(t.emscriptenWebGLGetTexPixelData=function(){Ae("'emscriptenWebGLGetTexPixelData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emscriptenWebGLGetUniform")||(t.emscriptenWebGLGetUniform=function(){Ae("'emscriptenWebGLGetUniform' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"webglGetUniformLocation")||(t.webglGetUniformLocation=function(){Ae("'webglGetUniformLocation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"webglPrepareUniformLocationsBeforeFirstUse")||(t.webglPrepareUniformLocationsBeforeFirstUse=function(){Ae("'webglPrepareUniformLocationsBeforeFirstUse' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"webglGetLeftBracePos")||(t.webglGetLeftBracePos=function(){Ae("'webglGetLeftBracePos' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emscriptenWebGLGetVertexAttrib")||(t.emscriptenWebGLGetVertexAttrib=function(){Ae("'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"writeGLArray")||(t.writeGLArray=function(){Ae("'writeGLArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"AL")||(t.AL=function(){Ae("'AL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SDL_unicode")||(t.SDL_unicode=function(){Ae("'SDL_unicode' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SDL_ttfContext")||(t.SDL_ttfContext=function(){Ae("'SDL_ttfContext' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SDL_audio")||(t.SDL_audio=function(){Ae("'SDL_audio' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SDL")||(t.SDL=function(){Ae("'SDL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"SDL_gfx")||(t.SDL_gfx=function(){Ae("'SDL_gfx' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"GLUT")||(t.GLUT=function(){Ae("'GLUT' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"EGL")||(t.EGL=function(){Ae("'EGL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"GLFW_Window")||(t.GLFW_Window=function(){Ae("'GLFW_Window' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"GLFW")||(t.GLFW=function(){Ae("'GLFW' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"GLEW")||(t.GLEW=function(){Ae("'GLEW' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"IDBStore")||(t.IDBStore=function(){Ae("'IDBStore' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"runAndAbortIfError")||(t.runAndAbortIfError=function(){Ae("'runAndAbortIfError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emval_handle_array")||(t.emval_handle_array=function(){Ae("'emval_handle_array' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emval_free_list")||(t.emval_free_list=function(){Ae("'emval_free_list' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emval_symbols")||(t.emval_symbols=function(){Ae("'emval_symbols' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"init_emval")||(t.init_emval=function(){Ae("'init_emval' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"count_emval_handles")||(t.count_emval_handles=function(){Ae("'count_emval_handles' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"get_first_emval")||(t.get_first_emval=function(){Ae("'get_first_emval' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getStringOrSymbol")||(t.getStringOrSymbol=function(){Ae("'getStringOrSymbol' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"Emval")||(t.Emval=function(){Ae("'Emval' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emval_newers")||(t.emval_newers=function(){Ae("'emval_newers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"craftEmvalAllocator")||(t.craftEmvalAllocator=function(){Ae("'craftEmvalAllocator' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emval_get_global")||(t.emval_get_global=function(){Ae("'emval_get_global' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"emval_methodCallers")||(t.emval_methodCallers=function(){Ae("'emval_methodCallers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"InternalError")||(t.InternalError=function(){Ae("'InternalError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"BindingError")||(t.BindingError=function(){Ae("'BindingError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"UnboundTypeError")||(t.UnboundTypeError=function(){Ae("'UnboundTypeError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"PureVirtualError")||(t.PureVirtualError=function(){Ae("'PureVirtualError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"init_embind")||(t.init_embind=function(){Ae("'init_embind' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"throwInternalError")||(t.throwInternalError=function(){Ae("'throwInternalError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"throwBindingError")||(t.throwBindingError=function(){Ae("'throwBindingError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"throwUnboundTypeError")||(t.throwUnboundTypeError=function(){Ae("'throwUnboundTypeError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ensureOverloadTable")||(t.ensureOverloadTable=function(){Ae("'ensureOverloadTable' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"exposePublicSymbol")||(t.exposePublicSymbol=function(){Ae("'exposePublicSymbol' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"replacePublicSymbol")||(t.replacePublicSymbol=function(){Ae("'replacePublicSymbol' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"extendError")||(t.extendError=function(){Ae("'extendError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"createNamedFunction")||(t.createNamedFunction=function(){Ae("'createNamedFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registeredInstances")||(t.registeredInstances=function(){Ae("'registeredInstances' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getBasestPointer")||(t.getBasestPointer=function(){Ae("'getBasestPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerInheritedInstance")||(t.registerInheritedInstance=function(){Ae("'registerInheritedInstance' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"unregisterInheritedInstance")||(t.unregisterInheritedInstance=function(){Ae("'unregisterInheritedInstance' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getInheritedInstance")||(t.getInheritedInstance=function(){Ae("'getInheritedInstance' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getInheritedInstanceCount")||(t.getInheritedInstanceCount=function(){Ae("'getInheritedInstanceCount' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getLiveInheritedInstances")||(t.getLiveInheritedInstances=function(){Ae("'getLiveInheritedInstances' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registeredTypes")||(t.registeredTypes=function(){Ae("'registeredTypes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"awaitingDependencies")||(t.awaitingDependencies=function(){Ae("'awaitingDependencies' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"typeDependencies")||(t.typeDependencies=function(){Ae("'typeDependencies' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registeredPointers")||(t.registeredPointers=function(){Ae("'registeredPointers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"registerType")||(t.registerType=function(){Ae("'registerType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"whenDependentTypesAreResolved")||(t.whenDependentTypesAreResolved=function(){Ae("'whenDependentTypesAreResolved' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"embind_charCodes")||(t.embind_charCodes=function(){Ae("'embind_charCodes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"embind_init_charCodes")||(t.embind_init_charCodes=function(){Ae("'embind_init_charCodes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"readLatin1String")||(t.readLatin1String=function(){Ae("'readLatin1String' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getTypeName")||(t.getTypeName=function(){Ae("'getTypeName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"heap32VectorToArray")||(t.heap32VectorToArray=function(){Ae("'heap32VectorToArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"requireRegisteredType")||(t.requireRegisteredType=function(){Ae("'requireRegisteredType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"getShiftFromSize")||(t.getShiftFromSize=function(){Ae("'getShiftFromSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"integerReadValueFromPointer")||(t.integerReadValueFromPointer=function(){Ae("'integerReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"enumReadValueFromPointer")||(t.enumReadValueFromPointer=function(){Ae("'enumReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"floatReadValueFromPointer")||(t.floatReadValueFromPointer=function(){Ae("'floatReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"simpleReadValueFromPointer")||(t.simpleReadValueFromPointer=function(){Ae("'simpleReadValueFromPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"runDestructors")||(t.runDestructors=function(){Ae("'runDestructors' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"new_")||(t.new_=function(){Ae("'new_' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"craftInvokerFunction")||(t.craftInvokerFunction=function(){Ae("'craftInvokerFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"embind__requireFunction")||(t.embind__requireFunction=function(){Ae("'embind__requireFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"tupleRegistrations")||(t.tupleRegistrations=function(){Ae("'tupleRegistrations' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"structRegistrations")||(t.structRegistrations=function(){Ae("'structRegistrations' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"genericPointerToWireType")||(t.genericPointerToWireType=function(){Ae("'genericPointerToWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"constNoSmartPtrRawPointerToWireType")||(t.constNoSmartPtrRawPointerToWireType=function(){Ae("'constNoSmartPtrRawPointerToWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"nonConstNoSmartPtrRawPointerToWireType")||(t.nonConstNoSmartPtrRawPointerToWireType=function(){Ae("'nonConstNoSmartPtrRawPointerToWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"init_RegisteredPointer")||(t.init_RegisteredPointer=function(){Ae("'init_RegisteredPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"RegisteredPointer")||(t.RegisteredPointer=function(){Ae("'RegisteredPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"RegisteredPointer_getPointee")||(t.RegisteredPointer_getPointee=function(){Ae("'RegisteredPointer_getPointee' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"RegisteredPointer_destructor")||(t.RegisteredPointer_destructor=function(){Ae("'RegisteredPointer_destructor' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"RegisteredPointer_deleteObject")||(t.RegisteredPointer_deleteObject=function(){Ae("'RegisteredPointer_deleteObject' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"RegisteredPointer_fromWireType")||(t.RegisteredPointer_fromWireType=function(){Ae("'RegisteredPointer_fromWireType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"runDestructor")||(t.runDestructor=function(){Ae("'runDestructor' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"releaseClassHandle")||(t.releaseClassHandle=function(){Ae("'releaseClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"finalizationRegistry")||(t.finalizationRegistry=function(){Ae("'finalizationRegistry' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"detachFinalizer_deps")||(t.detachFinalizer_deps=function(){Ae("'detachFinalizer_deps' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"detachFinalizer")||(t.detachFinalizer=function(){Ae("'detachFinalizer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"attachFinalizer")||(t.attachFinalizer=function(){Ae("'attachFinalizer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"makeClassHandle")||(t.makeClassHandle=function(){Ae("'makeClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"init_ClassHandle")||(t.init_ClassHandle=function(){Ae("'init_ClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ClassHandle")||(t.ClassHandle=function(){Ae("'ClassHandle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ClassHandle_isAliasOf")||(t.ClassHandle_isAliasOf=function(){Ae("'ClassHandle_isAliasOf' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"throwInstanceAlreadyDeleted")||(t.throwInstanceAlreadyDeleted=function(){Ae("'throwInstanceAlreadyDeleted' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ClassHandle_clone")||(t.ClassHandle_clone=function(){Ae("'ClassHandle_clone' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ClassHandle_delete")||(t.ClassHandle_delete=function(){Ae("'ClassHandle_delete' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"deletionQueue")||(t.deletionQueue=function(){Ae("'deletionQueue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ClassHandle_isDeleted")||(t.ClassHandle_isDeleted=function(){Ae("'ClassHandle_isDeleted' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"ClassHandle_deleteLater")||(t.ClassHandle_deleteLater=function(){Ae("'ClassHandle_deleteLater' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"flushPendingDeletes")||(t.flushPendingDeletes=function(){Ae("'flushPendingDeletes' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"delayFunction")||(t.delayFunction=function(){Ae("'delayFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"setDelayFunction")||(t.setDelayFunction=function(){Ae("'setDelayFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"RegisteredClass")||(t.RegisteredClass=function(){Ae("'RegisteredClass' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"shallowCopyInternalPointer")||(t.shallowCopyInternalPointer=function(){Ae("'shallowCopyInternalPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"downcastPointer")||(t.downcastPointer=function(){Ae("'downcastPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"upcastPointer")||(t.upcastPointer=function(){Ae("'upcastPointer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"validateThis")||(t.validateThis=function(){Ae("'validateThis' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"char_0")||(t.char_0=function(){Ae("'char_0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"char_9")||(t.char_9=function(){Ae("'char_9' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"makeLegalFunctionName")||(t.makeLegalFunctionName=function(){Ae("'makeLegalFunctionName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),t.LZ4=It,Object.getOwnPropertyDescriptor(t,"warnOnce")||(t.warnOnce=function(){Ae("'warnOnce' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stackSave")||(t.stackSave=function(){Ae("'stackSave' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stackRestore")||(t.stackRestore=function(){Ae("'stackRestore' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stackAlloc")||(t.stackAlloc=function(){Ae("'stackAlloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"AsciiToString")||(t.AsciiToString=function(){Ae("'AsciiToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stringToAscii")||(t.stringToAscii=function(){Ae("'stringToAscii' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"UTF16ToString")||(t.UTF16ToString=function(){Ae("'UTF16ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stringToUTF16")||(t.stringToUTF16=function(){Ae("'stringToUTF16' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"lengthBytesUTF16")||(t.lengthBytesUTF16=function(){Ae("'lengthBytesUTF16' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"UTF32ToString")||(t.UTF32ToString=function(){Ae("'UTF32ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"stringToUTF32")||(t.stringToUTF32=function(){Ae("'stringToUTF32' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"lengthBytesUTF32")||(t.lengthBytesUTF32=function(){Ae("'lengthBytesUTF32' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"allocateUTF8")||(t.allocateUTF8=function(){Ae("'allocateUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(t,"allocateUTF8OnStack")||(t.allocateUTF8OnStack=function(){Ae("'allocateUTF8OnStack' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}),t.writeStackCookie=ce,t.checkStackCookie=de,Object.getOwnPropertyDescriptor(t,"ALLOC_NORMAL")||Object.defineProperty(t,"ALLOC_NORMAL",{configurable:!0,get:function(){Ae("'ALLOC_NORMAL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),Object.getOwnPropertyDescriptor(t,"ALLOC_STACK")||Object.defineProperty(t,"ALLOC_STACK",{configurable:!0,get:function(){Ae("'ALLOC_STACK' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),Re=function e(){Hr||ca(),Hr||(Re=e)},t.run=ca,t.preInit)for("function"==typeof t.preInit&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();return ca(),e.ready});e.exports=o},9061:()=>{}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var i=r[e]={exports:{}};return n[e](i,i.exports,o),i.exports}t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,o.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var i=Object.create(null);o.r(i);var a={};e=e||[null,t({}),t([]),t(t)];for(var s=2&r&&n;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach((e=>a[e]=()=>n[e]));return a.default=()=>n,o.d(i,a),i},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{"use strict";o.r(i),o.d(i,{default:()=>Vn});var e,t=(e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}),n=function(e){function n(t,n,r){var o=e.call(this)||this;return o.name="ValidationException",o.message=null==n?t:t+": "+n,o.code=n,o.errorBody=r,o.toString=function(){return"".concat(o.name,': "').concat(o.message,'"')},o}return t(n,e),n}(Error),r=(function(e){function n(t){var n=e.call(this,"There was a problem loading a resource",s.BARBARIAN_PACKET,t)||this;return n.name="PacketException",n}t(n,e)}(n),function(e){function n(t){var n=e.call(this,"There was a problem loading a resource",s.BARBARIAN_INDEX,t)||this;return n.name="IndexException",n}t(n,e)}(n),function(e){function n(t){var n=e.call(this,"There was a problem fetching a resource",s.WASM_FETCH,t)||this;return n.name="FetchException",n}return t(n,e),n}(n)),a=function(e){function n(t){var n=e.call(this,"There was a problem fetching a resource",s.WASM_LOAD,t)||this;return n.name="LoadException",n}return t(n,e),n}(n);var s,c=new Map([["OTHER",0],["REPORTING",1],["CORE",2],["ENCRYPTION",3],["OPERATION",4],["TF_JS",5],["TF",6],["WORKER",7],["WORKER_FS",8],["FRAME",9]]);!function(e){e[e.BARBARIAN=6001]="BARBARIAN",e[e.BARBARIAN_PACKET=6002]="BARBARIAN_PACKET",e[e.BARBARIAN_INDEX=6003]="BARBARIAN_INDEX",e[e.WASM_FETCH=7001]="WASM_FETCH",e[e.WASM_LOAD=7002]="WASM_LOAD"}(s||(s={}));var d,l,u=["Process Image Core","Start to result","Inference"],f=function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},p=(d=new Date).getDate()+"."+d.getMonth()+"."+d.getFullYear()+"-"+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()+":"+d.getMilliseconds();!function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARNING=2]="WARNING",e[e.ERROR=3]="ERROR",e[e.OFF=255]="OFF"}(l||(l={}));var _=l.INFO,h={debug:{color:"grey",level:0,event:"debug"},info:{color:"green",level:1,event:"info"},warn:{color:"yellow",level:2,event:"warning"},error:{color:"red",level:3,event:"error"}},g={};function m(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n="%c%s   ";return e.forEach((function(e){switch(typeof e){case"bigint":case"number":case"boolean":n+="%d   ";break;case"string":n+="%s   ";break;default:n+="%o   "}})),n}function w(){var e=function(e){g[e]=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];if(h[e].level>=_){var r=m.apply(void 0,t);console.log.apply(console,f([r,"color: "+h[e].color,p],t,!1))}}};for(var t in h)e(t)}function E(e){_=e}var y=function(){function e(){this.performanceLogArray_=new Array,this.perfomanceLogTime_=new Map}return Object.defineProperty(e.prototype,"performanceLogArray",{get:function(){return this.performanceLogArray},enumerable:!1,configurable:!0}),e.prototype.start=function(e,t){var n=c.get(e);null!=n&&this.perfomanceLogTime_.set(n+t,Math.round(Date.now()))},e.prototype.stop=function(e,t){var n,r=c.get(e);if(null!=r){var o=null!==(n=this.perfomanceLogTime_.get(r+t))&&void 0!==n?n:Math.round(Date.now()),i=Math.round(Date.now())-o;this.performanceLogArray_.push({m:"O",c:r,n:t,d:i,a:o})}},e}();function v(e){let t=e.length;for(;--t>=0;)e[t]=0}const O=256,b=286,T=30,D=15,R=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),P=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),M=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),k=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),S=new Array(576);v(S);const A=new Array(60);v(A);const F=new Array(512);v(F);const j=new Array(256);v(j);const I=new Array(29);v(I);const x=new Array(T);function U(e,t,n,r,o){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=o,this.has_stree=e&&e.length}let N,C,H;function L(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}v(x);const X=e=>e<256?F[e]:F[256+(e>>>7)],z=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},Q=(e,t,n)=>{e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,z(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},B=(e,t,n)=>{Q(e,n[2*t],n[2*t+1])},W=(e,t)=>{let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1},Z=(e,t,n)=>{const r=new Array(16);let o,i,a=0;for(o=1;o<=D;o++)a=a+n[o-1]<<1,r[o]=a;for(i=0;i<=t;i++){let t=e[2*i+1];0!==t&&(e[2*i]=W(r[t]++,t))}},G=e=>{let t;for(t=0;t<b;t++)e.dyn_ltree[2*t]=0;for(t=0;t<T;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},Y=e=>{e.bi_valid>8?z(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},V=(e,t,n,r)=>{const o=2*t,i=2*n;return e[o]<e[i]||e[o]===e[i]&&r[t]<=r[n]},K=(e,t,n)=>{const r=e.heap[n];let o=n<<1;for(;o<=e.heap_len&&(o<e.heap_len&&V(t,e.heap[o+1],e.heap[o],e.depth)&&o++,!V(t,r,e.heap[o],e.depth));)e.heap[n]=e.heap[o],n=o,o<<=1;e.heap[n]=r},q=(e,t,n)=>{let r,o,i,a,s=0;if(0!==e.sym_next)do{r=255&e.pending_buf[e.sym_buf+s++],r+=(255&e.pending_buf[e.sym_buf+s++])<<8,o=e.pending_buf[e.sym_buf+s++],0===r?B(e,o,t):(i=j[o],B(e,i+O+1,t),a=R[i],0!==a&&(o-=I[i],Q(e,o,a)),r--,i=X(r),B(e,i,n),a=P[i],0!==a&&(r-=x[i],Q(e,r,a)))}while(s<e.sym_next);B(e,256,t)},J=(e,t)=>{const n=t.dyn_tree,r=t.stat_desc.static_tree,o=t.stat_desc.has_stree,i=t.stat_desc.elems;let a,s,c,d=-1;for(e.heap_len=0,e.heap_max=573,a=0;a<i;a++)0!==n[2*a]?(e.heap[++e.heap_len]=d=a,e.depth[a]=0):n[2*a+1]=0;for(;e.heap_len<2;)c=e.heap[++e.heap_len]=d<2?++d:0,n[2*c]=1,e.depth[c]=0,e.opt_len--,o&&(e.static_len-=r[2*c+1]);for(t.max_code=d,a=e.heap_len>>1;a>=1;a--)K(e,n,a);c=i;do{a=e.heap[1],e.heap[1]=e.heap[e.heap_len--],K(e,n,1),s=e.heap[1],e.heap[--e.heap_max]=a,e.heap[--e.heap_max]=s,n[2*c]=n[2*a]+n[2*s],e.depth[c]=(e.depth[a]>=e.depth[s]?e.depth[a]:e.depth[s])+1,n[2*a+1]=n[2*s+1]=c,e.heap[1]=c++,K(e,n,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const n=t.dyn_tree,r=t.max_code,o=t.stat_desc.static_tree,i=t.stat_desc.has_stree,a=t.stat_desc.extra_bits,s=t.stat_desc.extra_base,c=t.stat_desc.max_length;let d,l,u,f,p,_,h=0;for(f=0;f<=D;f++)e.bl_count[f]=0;for(n[2*e.heap[e.heap_max]+1]=0,d=e.heap_max+1;d<573;d++)l=e.heap[d],f=n[2*n[2*l+1]+1]+1,f>c&&(f=c,h++),n[2*l+1]=f,l>r||(e.bl_count[f]++,p=0,l>=s&&(p=a[l-s]),_=n[2*l],e.opt_len+=_*(f+p),i&&(e.static_len+=_*(o[2*l+1]+p)));if(0!==h){do{for(f=c-1;0===e.bl_count[f];)f--;e.bl_count[f]--,e.bl_count[f+1]+=2,e.bl_count[c]--,h-=2}while(h>0);for(f=c;0!==f;f--)for(l=e.bl_count[f];0!==l;)u=e.heap[--d],u>r||(n[2*u+1]!==f&&(e.opt_len+=(f-n[2*u+1])*n[2*u],n[2*u+1]=f),l--)}})(e,t),Z(n,d,e.bl_count)},$=(e,t,n)=>{let r,o,i=-1,a=t[1],s=0,c=7,d=4;for(0===a&&(c=138,d=3),t[2*(n+1)+1]=65535,r=0;r<=n;r++)o=a,a=t[2*(r+1)+1],++s<c&&o===a||(s<d?e.bl_tree[2*o]+=s:0!==o?(o!==i&&e.bl_tree[2*o]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,i=o,0===a?(c=138,d=3):o===a?(c=6,d=3):(c=7,d=4))},ee=(e,t,n)=>{let r,o,i=-1,a=t[1],s=0,c=7,d=4;for(0===a&&(c=138,d=3),r=0;r<=n;r++)if(o=a,a=t[2*(r+1)+1],!(++s<c&&o===a)){if(s<d)do{B(e,o,e.bl_tree)}while(0!=--s);else 0!==o?(o!==i&&(B(e,o,e.bl_tree),s--),B(e,16,e.bl_tree),Q(e,s-3,2)):s<=10?(B(e,17,e.bl_tree),Q(e,s-3,3)):(B(e,18,e.bl_tree),Q(e,s-11,7));s=0,i=o,0===a?(c=138,d=3):o===a?(c=6,d=3):(c=7,d=4)}};let te=!1;const ne=(e,t,n,r)=>{Q(e,0+(r?1:0),3),Y(e),z(e,n),z(e,~n),n&&e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n};var re=(e,t,n,r)=>{let o,i,a=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<O;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),J(e,e.l_desc),J(e,e.d_desc),a=(e=>{let t;for($(e,e.dyn_ltree,e.l_desc.max_code),$(e,e.dyn_dtree,e.d_desc.max_code),J(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*k[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),o=e.opt_len+3+7>>>3,i=e.static_len+3+7>>>3,i<=o&&(o=i)):o=i=n+5,n+4<=o&&-1!==t?ne(e,t,n,r):4===e.strategy||i===o?(Q(e,2+(r?1:0),3),q(e,S,A)):(Q(e,4+(r?1:0),3),((e,t,n,r)=>{let o;for(Q(e,t-257,5),Q(e,n-1,5),Q(e,r-4,4),o=0;o<r;o++)Q(e,e.bl_tree[2*k[o]+1],3);ee(e,e.dyn_ltree,t-1),ee(e,e.dyn_dtree,n-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),q(e,e.dyn_ltree,e.dyn_dtree)),G(e),r&&Y(e)},oe={_tr_init:e=>{te||((()=>{let e,t,n,r,o;const i=new Array(16);for(n=0,r=0;r<28;r++)for(I[r]=n,e=0;e<1<<R[r];e++)j[n++]=r;for(j[n-1]=r,o=0,r=0;r<16;r++)for(x[r]=o,e=0;e<1<<P[r];e++)F[o++]=r;for(o>>=7;r<T;r++)for(x[r]=o<<7,e=0;e<1<<P[r]-7;e++)F[256+o++]=r;for(t=0;t<=D;t++)i[t]=0;for(e=0;e<=143;)S[2*e+1]=8,e++,i[8]++;for(;e<=255;)S[2*e+1]=9,e++,i[9]++;for(;e<=279;)S[2*e+1]=7,e++,i[7]++;for(;e<=287;)S[2*e+1]=8,e++,i[8]++;for(Z(S,287,i),e=0;e<T;e++)A[2*e+1]=5,A[2*e]=W(e,5);N=new U(S,R,257,b,D),C=new U(A,P,0,T,D),H=new U(new Array(0),M,0,19,7)})(),te=!0),e.l_desc=new L(e.dyn_ltree,N),e.d_desc=new L(e.dyn_dtree,C),e.bl_desc=new L(e.bl_tree,H),e.bi_buf=0,e.bi_valid=0,G(e)},_tr_stored_block:ne,_tr_flush_block:re,_tr_tally:(e,t,n)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=n,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(j[n]+O+1)]++,e.dyn_dtree[2*X(t)]++),e.sym_next===e.sym_end),_tr_align:e=>{Q(e,2,3),B(e,256,S),(e=>{16===e.bi_valid?(z(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var ie=(e,t,n,r)=>{let o=65535&e|0,i=e>>>16&65535|0,a=0;for(;0!==n;){a=n>2e3?2e3:n,n-=a;do{o=o+t[r++]|0,i=i+o|0}while(--a);o%=65521,i%=65521}return o|i<<16|0};const ae=new Uint32Array((()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t})());var se=(e,t,n,r)=>{const o=ae,i=r+n;e^=-1;for(let n=r;n<i;n++)e=e>>>8^o[255&(e^t[n])];return-1^e},ce={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},de={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:le,_tr_stored_block:ue,_tr_flush_block:fe,_tr_tally:pe,_tr_align:_e}=oe,{Z_NO_FLUSH:he,Z_PARTIAL_FLUSH:ge,Z_FULL_FLUSH:me,Z_FINISH:we,Z_BLOCK:Ee,Z_OK:ye,Z_STREAM_END:ve,Z_STREAM_ERROR:Oe,Z_DATA_ERROR:be,Z_BUF_ERROR:Te,Z_DEFAULT_COMPRESSION:De,Z_FILTERED:Re,Z_HUFFMAN_ONLY:Pe,Z_RLE:Me,Z_FIXED:ke,Z_DEFAULT_STRATEGY:Se,Z_UNKNOWN:Ae,Z_DEFLATED:Fe}=de,je=258,Ie=262,xe=42,Ue=113,Ne=666,Ce=(e,t)=>(e.msg=ce[t],t),He=e=>2*e-(e>4?9:0),Le=e=>{let t=e.length;for(;--t>=0;)e[t]=0},Xe=e=>{let t,n,r,o=e.w_size;t=e.hash_size,r=t;do{n=e.head[--r],e.head[r]=n>=o?n-o:0}while(--t);t=o,r=t;do{n=e.prev[--r],e.prev[r]=n>=o?n-o:0}while(--t)};let ze=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask;const Qe=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))},Be=(e,t)=>{fe(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Qe(e.strm)},We=(e,t)=>{e.pending_buf[e.pending++]=t},Ze=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Ge=(e,t,n,r)=>{let o=e.avail_in;return o>r&&(o=r),0===o?0:(e.avail_in-=o,t.set(e.input.subarray(e.next_in,e.next_in+o),n),1===e.state.wrap?e.adler=ie(e.adler,t,o,n):2===e.state.wrap&&(e.adler=se(e.adler,t,o,n)),e.next_in+=o,e.total_in+=o,o)},Ye=(e,t)=>{let n,r,o=e.max_chain_length,i=e.strstart,a=e.prev_length,s=e.nice_match;const c=e.strstart>e.w_size-Ie?e.strstart-(e.w_size-Ie):0,d=e.window,l=e.w_mask,u=e.prev,f=e.strstart+je;let p=d[i+a-1],_=d[i+a];e.prev_length>=e.good_match&&(o>>=2),s>e.lookahead&&(s=e.lookahead);do{if(n=t,d[n+a]===_&&d[n+a-1]===p&&d[n]===d[i]&&d[++n]===d[i+1]){i+=2,n++;do{}while(d[++i]===d[++n]&&d[++i]===d[++n]&&d[++i]===d[++n]&&d[++i]===d[++n]&&d[++i]===d[++n]&&d[++i]===d[++n]&&d[++i]===d[++n]&&d[++i]===d[++n]&&i<f);if(r=je-(f-i),i=f-je,r>a){if(e.match_start=t,a=r,r>=s)break;p=d[i+a-1],_=d[i+a]}}}while((t=u[t&l])>c&&0!=--o);return a<=e.lookahead?a:e.lookahead},Ve=e=>{const t=e.w_size;let n,r,o;do{if(r=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Ie)&&(e.window.set(e.window.subarray(t,t+t-r),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),Xe(e),r+=t),0===e.strm.avail_in)break;if(n=Ge(e.strm,e.window,e.strstart+e.lookahead,r),e.lookahead+=n,e.lookahead+e.insert>=3)for(o=e.strstart-e.insert,e.ins_h=e.window[o],e.ins_h=ze(e,e.ins_h,e.window[o+1]);e.insert&&(e.ins_h=ze(e,e.ins_h,e.window[o+3-1]),e.prev[o&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=o,o++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<Ie&&0!==e.strm.avail_in)},Ke=(e,t)=>{let n,r,o,i=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,a=0,s=e.strm.avail_in;do{if(n=65535,o=e.bi_valid+42>>3,e.strm.avail_out<o)break;if(o=e.strm.avail_out-o,r=e.strstart-e.block_start,n>r+e.strm.avail_in&&(n=r+e.strm.avail_in),n>o&&(n=o),n<i&&(0===n&&t!==we||t===he||n!==r+e.strm.avail_in))break;a=t===we&&n===r+e.strm.avail_in?1:0,ue(e,0,0,a),e.pending_buf[e.pending-4]=n,e.pending_buf[e.pending-3]=n>>8,e.pending_buf[e.pending-2]=~n,e.pending_buf[e.pending-1]=~n>>8,Qe(e.strm),r&&(r>n&&(r=n),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+r),e.strm.next_out),e.strm.next_out+=r,e.strm.avail_out-=r,e.strm.total_out+=r,e.block_start+=r,n-=r),n&&(Ge(e.strm,e.strm.output,e.strm.next_out,n),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n)}while(0===a);return s-=e.strm.avail_in,s&&(s>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=s&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-s,e.strm.next_in),e.strstart),e.strstart+=s,e.insert+=s>e.w_size-e.insert?e.w_size-e.insert:s),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),a?4:t!==he&&t!==we&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(o=e.window_size-e.strstart,e.strm.avail_in>o&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,o+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),o>e.strm.avail_in&&(o=e.strm.avail_in),o&&(Ge(e.strm,e.window,e.strstart,o),e.strstart+=o,e.insert+=o>e.w_size-e.insert?e.w_size-e.insert:o),e.high_water<e.strstart&&(e.high_water=e.strstart),o=e.bi_valid+42>>3,o=e.pending_buf_size-o>65535?65535:e.pending_buf_size-o,i=o>e.w_size?e.w_size:o,r=e.strstart-e.block_start,(r>=i||(r||t===we)&&t!==he&&0===e.strm.avail_in&&r<=o)&&(n=r>o?o:r,a=t===we&&0===e.strm.avail_in&&n===r?1:0,ue(e,e.block_start,n,a),e.block_start+=n,Qe(e.strm)),a?3:1)},qe=(e,t)=>{let n,r;for(;;){if(e.lookahead<Ie){if(Ve(e),e.lookahead<Ie&&t===he)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=ze(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-Ie&&(e.match_length=Ye(e,n)),e.match_length>=3)if(r=pe(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=ze(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=ze(e,e.ins_h,e.window[e.strstart+1]);else r=pe(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Be(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===we?(Be(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Be(e,!1),0===e.strm.avail_out)?1:2},Je=(e,t)=>{let n,r,o;for(;;){if(e.lookahead<Ie){if(Ve(e),e.lookahead<Ie&&t===he)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=ze(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Ie&&(e.match_length=Ye(e,n),e.match_length<=5&&(e.strategy===Re||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){o=e.strstart+e.lookahead-3,r=pe(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=o&&(e.ins_h=ze(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,r&&(Be(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(r=pe(e,0,e.window[e.strstart-1]),r&&Be(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=pe(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===we?(Be(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Be(e,!1),0===e.strm.avail_out)?1:2};function $e(e,t,n,r,o){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=o}const et=[new $e(0,0,0,0,Ke),new $e(4,4,8,4,qe),new $e(4,5,16,8,qe),new $e(4,6,32,32,qe),new $e(4,4,16,16,Je),new $e(8,16,32,32,Je),new $e(8,16,128,128,Je),new $e(8,32,128,256,Je),new $e(32,128,258,1024,Je),new $e(32,258,258,4096,Je)];function tt(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Fe,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Le(this.dyn_ltree),Le(this.dyn_dtree),Le(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Le(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Le(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const nt=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==xe&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==Ue&&t.status!==Ne?1:0},rt=e=>{if(nt(e))return Ce(e,Oe);e.total_in=e.total_out=0,e.data_type=Ae;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?xe:Ue,e.adler=2===t.wrap?0:1,t.last_flush=-2,le(t),ye},ot=e=>{const t=rt(e);var n;return t===ye&&((n=e.state).window_size=2*n.w_size,Le(n.head),n.max_lazy_match=et[n.level].max_lazy,n.good_match=et[n.level].good_length,n.nice_match=et[n.level].nice_length,n.max_chain_length=et[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),t},it=(e,t,n,r,o,i)=>{if(!e)return Oe;let a=1;if(t===De&&(t=6),r<0?(a=0,r=-r):r>15&&(a=2,r-=16),o<1||o>9||n!==Fe||r<8||r>15||t<0||t>9||i<0||i>ke||8===r&&1!==a)return Ce(e,Oe);8===r&&(r=9);const s=new tt;return e.state=s,s.strm=e,s.status=xe,s.wrap=a,s.gzhead=null,s.w_bits=r,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=o+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new Uint8Array(2*s.w_size),s.head=new Uint16Array(s.hash_size),s.prev=new Uint16Array(s.w_size),s.lit_bufsize=1<<o+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new Uint8Array(s.pending_buf_size),s.sym_buf=s.lit_bufsize,s.sym_end=3*(s.lit_bufsize-1),s.level=t,s.strategy=i,s.method=n,ot(e)};var at={deflateInit:(e,t)=>it(e,t,Fe,15,8,Se),deflateInit2:it,deflateReset:ot,deflateResetKeep:rt,deflateSetHeader:(e,t)=>nt(e)||2!==e.state.wrap?Oe:(e.state.gzhead=t,ye),deflate:(e,t)=>{if(nt(e)||t>Ee||t<0)return e?Ce(e,Oe):Oe;const n=e.state;if(!e.output||0!==e.avail_in&&!e.input||n.status===Ne&&t!==we)return Ce(e,0===e.avail_out?Te:Oe);const r=n.last_flush;if(n.last_flush=t,0!==n.pending){if(Qe(e),0===e.avail_out)return n.last_flush=-1,ye}else if(0===e.avail_in&&He(t)<=He(r)&&t!==we)return Ce(e,Te);if(n.status===Ne&&0!==e.avail_in)return Ce(e,Te);if(n.status===xe&&0===n.wrap&&(n.status=Ue),n.status===xe){let t=Fe+(n.w_bits-8<<4)<<8,r=-1;if(r=n.strategy>=Pe||n.level<2?0:n.level<6?1:6===n.level?2:3,t|=r<<6,0!==n.strstart&&(t|=32),t+=31-t%31,Ze(n,t),0!==n.strstart&&(Ze(n,e.adler>>>16),Ze(n,65535&e.adler)),e.adler=1,n.status=Ue,Qe(e),0!==n.pending)return n.last_flush=-1,ye}if(57===n.status)if(e.adler=0,We(n,31),We(n,139),We(n,8),n.gzhead)We(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),We(n,255&n.gzhead.time),We(n,n.gzhead.time>>8&255),We(n,n.gzhead.time>>16&255),We(n,n.gzhead.time>>24&255),We(n,9===n.level?2:n.strategy>=Pe||n.level<2?4:0),We(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(We(n,255&n.gzhead.extra.length),We(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=se(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69;else if(We(n,0),We(n,0),We(n,0),We(n,0),We(n,0),We(n,9===n.level?2:n.strategy>=Pe||n.level<2?4:0),We(n,3),n.status=Ue,Qe(e),0!==n.pending)return n.last_flush=-1,ye;if(69===n.status){if(n.gzhead.extra){let t=n.pending,r=(65535&n.gzhead.extra.length)-n.gzindex;for(;n.pending+r>n.pending_buf_size;){let o=n.pending_buf_size-n.pending;if(n.pending_buf.set(n.gzhead.extra.subarray(n.gzindex,n.gzindex+o),n.pending),n.pending=n.pending_buf_size,n.gzhead.hcrc&&n.pending>t&&(e.adler=se(e.adler,n.pending_buf,n.pending-t,t)),n.gzindex+=o,Qe(e),0!==n.pending)return n.last_flush=-1,ye;t=0,r-=o}let o=new Uint8Array(n.gzhead.extra);n.pending_buf.set(o.subarray(n.gzindex,n.gzindex+r),n.pending),n.pending+=r,n.gzhead.hcrc&&n.pending>t&&(e.adler=se(e.adler,n.pending_buf,n.pending-t,t)),n.gzindex=0}n.status=73}if(73===n.status){if(n.gzhead.name){let t,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(e.adler=se(e.adler,n.pending_buf,n.pending-r,r)),Qe(e),0!==n.pending)return n.last_flush=-1,ye;r=0}t=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,We(n,t)}while(0!==t);n.gzhead.hcrc&&n.pending>r&&(e.adler=se(e.adler,n.pending_buf,n.pending-r,r)),n.gzindex=0}n.status=91}if(91===n.status){if(n.gzhead.comment){let t,r=n.pending;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>r&&(e.adler=se(e.adler,n.pending_buf,n.pending-r,r)),Qe(e),0!==n.pending)return n.last_flush=-1,ye;r=0}t=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,We(n,t)}while(0!==t);n.gzhead.hcrc&&n.pending>r&&(e.adler=se(e.adler,n.pending_buf,n.pending-r,r))}n.status=103}if(103===n.status){if(n.gzhead.hcrc){if(n.pending+2>n.pending_buf_size&&(Qe(e),0!==n.pending))return n.last_flush=-1,ye;We(n,255&e.adler),We(n,e.adler>>8&255),e.adler=0}if(n.status=Ue,Qe(e),0!==n.pending)return n.last_flush=-1,ye}if(0!==e.avail_in||0!==n.lookahead||t!==he&&n.status!==Ne){let r=0===n.level?Ke(n,t):n.strategy===Pe?((e,t)=>{let n;for(;;){if(0===e.lookahead&&(Ve(e),0===e.lookahead)){if(t===he)return 1;break}if(e.match_length=0,n=pe(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Be(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===we?(Be(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Be(e,!1),0===e.strm.avail_out)?1:2})(n,t):n.strategy===Me?((e,t)=>{let n,r,o,i;const a=e.window;for(;;){if(e.lookahead<=je){if(Ve(e),e.lookahead<=je&&t===he)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(o=e.strstart-1,r=a[o],r===a[++o]&&r===a[++o]&&r===a[++o])){i=e.strstart+je;do{}while(r===a[++o]&&r===a[++o]&&r===a[++o]&&r===a[++o]&&r===a[++o]&&r===a[++o]&&r===a[++o]&&r===a[++o]&&o<i);e.match_length=je-(i-o),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=pe(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=pe(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Be(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===we?(Be(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(Be(e,!1),0===e.strm.avail_out)?1:2})(n,t):et[n.level].func(n,t);if(3!==r&&4!==r||(n.status=Ne),1===r||3===r)return 0===e.avail_out&&(n.last_flush=-1),ye;if(2===r&&(t===ge?_e(n):t!==Ee&&(ue(n,0,0,!1),t===me&&(Le(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),Qe(e),0===e.avail_out))return n.last_flush=-1,ye}return t!==we?ye:n.wrap<=0?ve:(2===n.wrap?(We(n,255&e.adler),We(n,e.adler>>8&255),We(n,e.adler>>16&255),We(n,e.adler>>24&255),We(n,255&e.total_in),We(n,e.total_in>>8&255),We(n,e.total_in>>16&255),We(n,e.total_in>>24&255)):(Ze(n,e.adler>>>16),Ze(n,65535&e.adler)),Qe(e),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?ye:ve)},deflateEnd:e=>{if(nt(e))return Oe;const t=e.state.status;return e.state=null,t===Ue?Ce(e,be):ye},deflateSetDictionary:(e,t)=>{let n=t.length;if(nt(e))return Oe;const r=e.state,o=r.wrap;if(2===o||1===o&&r.status!==xe||r.lookahead)return Oe;if(1===o&&(e.adler=ie(e.adler,t,n,0)),r.wrap=0,n>=r.w_size){0===o&&(Le(r.head),r.strstart=0,r.block_start=0,r.insert=0);let e=new Uint8Array(r.w_size);e.set(t.subarray(n-r.w_size,n),0),t=e,n=r.w_size}const i=e.avail_in,a=e.next_in,s=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,Ve(r);r.lookahead>=3;){let e=r.strstart,t=r.lookahead-2;do{r.ins_h=ze(r,r.ins_h,r.window[e+3-1]),r.prev[e&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=e,e++}while(--t);r.strstart=e,r.lookahead=2,Ve(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=2,r.match_available=0,e.next_in=a,e.input=s,e.avail_in=i,r.wrap=o,ye},deflateInfo:"pako deflate (from Nodeca project)"};const st=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var ct=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const t in n)st(n,t)&&(e[t]=n[t])}}return e},dt=e=>{let t=0;for(let n=0,r=e.length;n<r;n++)t+=e[n].length;const n=new Uint8Array(t);for(let t=0,r=0,o=e.length;t<o;t++){let o=e[t];n.set(o,r),r+=o.length}return n};let lt=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){lt=!1}const ut=new Uint8Array(256);for(let e=0;e<256;e++)ut[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;ut[254]=ut[254]=1;var ft=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,n,r,o,i,a=e.length,s=0;for(o=0;o<a;o++)n=e.charCodeAt(o),55296==(64512&n)&&o+1<a&&(r=e.charCodeAt(o+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),o++)),s+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(s),i=0,o=0;i<s;o++)n=e.charCodeAt(o),55296==(64512&n)&&o+1<a&&(r=e.charCodeAt(o+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),o++)),n<128?t[i++]=n:n<2048?(t[i++]=192|n>>>6,t[i++]=128|63&n):n<65536?(t[i++]=224|n>>>12,t[i++]=128|n>>>6&63,t[i++]=128|63&n):(t[i++]=240|n>>>18,t[i++]=128|n>>>12&63,t[i++]=128|n>>>6&63,t[i++]=128|63&n);return t},pt=(e,t)=>{const n=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let r,o;const i=new Array(2*n);for(o=0,r=0;r<n;){let t=e[r++];if(t<128){i[o++]=t;continue}let a=ut[t];if(a>4)i[o++]=65533,r+=a-1;else{for(t&=2===a?31:3===a?15:7;a>1&&r<n;)t=t<<6|63&e[r++],a--;a>1?i[o++]=65533:t<65536?i[o++]=t:(t-=65536,i[o++]=55296|t>>10&1023,i[o++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&lt)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n})(i,o)},_t=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let n=t-1;for(;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+ut[e[n]]>t?n:t};var ht=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const gt=Object.prototype.toString,{Z_NO_FLUSH:mt,Z_SYNC_FLUSH:wt,Z_FULL_FLUSH:Et,Z_FINISH:yt,Z_OK:vt,Z_STREAM_END:Ot,Z_DEFAULT_COMPRESSION:bt,Z_DEFAULT_STRATEGY:Tt,Z_DEFLATED:Dt}=de;function Rt(e){this.options=ct({level:bt,method:Dt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Tt},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new ht,this.strm.avail_out=0;let n=at.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==vt)throw new Error(ce[n]);if(t.header&&at.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?ft(t.dictionary):"[object ArrayBuffer]"===gt.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,n=at.deflateSetDictionary(this.strm,e),n!==vt)throw new Error(ce[n]);this._dict_set=!0}}function Pt(e,t){const n=new Rt(t);if(n.push(e,!0),n.err)throw n.msg||ce[n.err];return n.result}Rt.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize;let o,i;if(this.ended)return!1;for(i=t===~~t?t:!0===t?yt:mt,"string"==typeof e?n.input=ft(e):"[object ArrayBuffer]"===gt.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),(i===wt||i===Et)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(o=at.deflate(n,i),o===Ot)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),o=at.deflateEnd(this.strm),this.onEnd(o),this.ended=!0,o===vt;if(0!==n.avail_out){if(i>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},Rt.prototype.onData=function(e){this.chunks.push(e)},Rt.prototype.onEnd=function(e){e===vt&&(this.result=dt(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Mt={Deflate:Rt,deflate:Pt,deflateRaw:function(e,t){return(t=t||{}).raw=!0,Pt(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,Pt(e,t)},constants:de};const kt=16209;var St=function(e,t){let n,r,o,i,a,s,c,d,l,u,f,p,_,h,g,m,w,E,y,v,O,b,T,D;const R=e.state;n=e.next_in,T=e.input,r=n+(e.avail_in-5),o=e.next_out,D=e.output,i=o-(t-e.avail_out),a=o+(e.avail_out-257),s=R.dmax,c=R.wsize,d=R.whave,l=R.wnext,u=R.window,f=R.hold,p=R.bits,_=R.lencode,h=R.distcode,g=(1<<R.lenbits)-1,m=(1<<R.distbits)-1;e:do{p<15&&(f+=T[n++]<<p,p+=8,f+=T[n++]<<p,p+=8),w=_[f&g];t:for(;;){if(E=w>>>24,f>>>=E,p-=E,E=w>>>16&255,0===E)D[o++]=65535&w;else{if(!(16&E)){if(0==(64&E)){w=_[(65535&w)+(f&(1<<E)-1)];continue t}if(32&E){R.mode=16191;break e}e.msg="invalid literal/length code",R.mode=kt;break e}y=65535&w,E&=15,E&&(p<E&&(f+=T[n++]<<p,p+=8),y+=f&(1<<E)-1,f>>>=E,p-=E),p<15&&(f+=T[n++]<<p,p+=8,f+=T[n++]<<p,p+=8),w=h[f&m];n:for(;;){if(E=w>>>24,f>>>=E,p-=E,E=w>>>16&255,!(16&E)){if(0==(64&E)){w=h[(65535&w)+(f&(1<<E)-1)];continue n}e.msg="invalid distance code",R.mode=kt;break e}if(v=65535&w,E&=15,p<E&&(f+=T[n++]<<p,p+=8,p<E&&(f+=T[n++]<<p,p+=8)),v+=f&(1<<E)-1,v>s){e.msg="invalid distance too far back",R.mode=kt;break e}if(f>>>=E,p-=E,E=o-i,v>E){if(E=v-E,E>d&&R.sane){e.msg="invalid distance too far back",R.mode=kt;break e}if(O=0,b=u,0===l){if(O+=c-E,E<y){y-=E;do{D[o++]=u[O++]}while(--E);O=o-v,b=D}}else if(l<E){if(O+=c+l-E,E-=l,E<y){y-=E;do{D[o++]=u[O++]}while(--E);if(O=0,l<y){E=l,y-=E;do{D[o++]=u[O++]}while(--E);O=o-v,b=D}}}else if(O+=l-E,E<y){y-=E;do{D[o++]=u[O++]}while(--E);O=o-v,b=D}for(;y>2;)D[o++]=b[O++],D[o++]=b[O++],D[o++]=b[O++],y-=3;y&&(D[o++]=b[O++],y>1&&(D[o++]=b[O++]))}else{O=o-v;do{D[o++]=D[O++],D[o++]=D[O++],D[o++]=D[O++],y-=3}while(y>2);y&&(D[o++]=D[O++],y>1&&(D[o++]=D[O++]))}break}}break}}while(n<r&&o<a);y=p>>3,n-=y,p-=y<<3,f&=(1<<p)-1,e.next_in=n,e.next_out=o,e.avail_in=n<r?r-n+5:5-(n-r),e.avail_out=o<a?a-o+257:257-(o-a),R.hold=f,R.bits=p};const At=15,Ft=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),jt=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),It=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),xt=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var Ut=(e,t,n,r,o,i,a,s)=>{const c=s.bits;let d,l,u,f,p,_,h=0,g=0,m=0,w=0,E=0,y=0,v=0,O=0,b=0,T=0,D=null;const R=new Uint16Array(16),P=new Uint16Array(16);let M,k,S,A=null;for(h=0;h<=At;h++)R[h]=0;for(g=0;g<r;g++)R[t[n+g]]++;for(E=c,w=At;w>=1&&0===R[w];w--);if(E>w&&(E=w),0===w)return o[i++]=20971520,o[i++]=20971520,s.bits=1,0;for(m=1;m<w&&0===R[m];m++);for(E<m&&(E=m),O=1,h=1;h<=At;h++)if(O<<=1,O-=R[h],O<0)return-1;if(O>0&&(0===e||1!==w))return-1;for(P[1]=0,h=1;h<At;h++)P[h+1]=P[h]+R[h];for(g=0;g<r;g++)0!==t[n+g]&&(a[P[t[n+g]]++]=g);if(0===e?(D=A=a,_=20):1===e?(D=Ft,A=jt,_=257):(D=It,A=xt,_=0),T=0,g=0,h=m,p=i,y=E,v=0,u=-1,b=1<<E,f=b-1,1===e&&b>852||2===e&&b>592)return 1;for(;;){M=h-v,a[g]+1<_?(k=0,S=a[g]):a[g]>=_?(k=A[a[g]-_],S=D[a[g]-_]):(k=96,S=0),d=1<<h-v,l=1<<y,m=l;do{l-=d,o[p+(T>>v)+l]=M<<24|k<<16|S|0}while(0!==l);for(d=1<<h-1;T&d;)d>>=1;if(0!==d?(T&=d-1,T+=d):T=0,g++,0==--R[h]){if(h===w)break;h=t[n+a[g]]}if(h>E&&(T&f)!==u){for(0===v&&(v=E),p+=m,y=h-v,O=1<<y;y+v<w&&(O-=R[y+v],!(O<=0));)y++,O<<=1;if(b+=1<<y,1===e&&b>852||2===e&&b>592)return 1;u=T&f,o[u]=E<<24|y<<16|p-i|0}}return 0!==T&&(o[p+T]=h-v<<24|64<<16|0),s.bits=E,0};const{Z_FINISH:Nt,Z_BLOCK:Ct,Z_TREES:Ht,Z_OK:Lt,Z_STREAM_END:Xt,Z_NEED_DICT:zt,Z_STREAM_ERROR:Qt,Z_DATA_ERROR:Bt,Z_MEM_ERROR:Wt,Z_BUF_ERROR:Zt,Z_DEFLATED:Gt}=de,Yt=16180,Vt=16190,Kt=16191,qt=16192,Jt=16194,$t=16199,en=16200,tn=16206,nn=16209,rn=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function on(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const an=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<Yt||t.mode>16211?1:0},sn=e=>{if(an(e))return Qt;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=Yt,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,Lt},cn=e=>{if(an(e))return Qt;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,sn(e)},dn=(e,t)=>{let n;if(an(e))return Qt;const r=e.state;return t<0?(n=0,t=-t):(n=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?Qt:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,cn(e))},ln=(e,t)=>{if(!e)return Qt;const n=new on;e.state=n,n.strm=e,n.window=null,n.mode=Yt;const r=dn(e,t);return r!==Lt&&(e.state=null),r};let un,fn,pn=!0;const _n=e=>{if(pn){un=new Int32Array(512),fn=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Ut(1,e.lens,0,288,un,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Ut(2,e.lens,0,32,fn,0,e.work,{bits:5}),pn=!1}e.lencode=un,e.lenbits=9,e.distcode=fn,e.distbits=5},hn=(e,t,n,r)=>{let o;const i=e.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),r>=i.wsize?(i.window.set(t.subarray(n-i.wsize,n),0),i.wnext=0,i.whave=i.wsize):(o=i.wsize-i.wnext,o>r&&(o=r),i.window.set(t.subarray(n-r,n-r+o),i.wnext),(r-=o)?(i.window.set(t.subarray(n-r,n),0),i.wnext=r,i.whave=i.wsize):(i.wnext+=o,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=o))),0};var gn={inflateReset:cn,inflateReset2:dn,inflateResetKeep:sn,inflateInit:e=>ln(e,15),inflateInit2:ln,inflate:(e,t)=>{let n,r,o,i,a,s,c,d,l,u,f,p,_,h,g,m,w,E,y,v,O,b,T=0;const D=new Uint8Array(4);let R,P;const M=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(an(e)||!e.output||!e.input&&0!==e.avail_in)return Qt;n=e.state,n.mode===Kt&&(n.mode=qt),a=e.next_out,o=e.output,c=e.avail_out,i=e.next_in,r=e.input,s=e.avail_in,d=n.hold,l=n.bits,u=s,f=c,b=Lt;e:for(;;)switch(n.mode){case Yt:if(0===n.wrap){n.mode=qt;break}for(;l<16;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(2&n.wrap&&35615===d){0===n.wbits&&(n.wbits=15),n.check=0,D[0]=255&d,D[1]=d>>>8&255,n.check=se(n.check,D,2,0),d=0,l=0,n.mode=16181;break}if(n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&d)<<8)+(d>>8))%31){e.msg="incorrect header check",n.mode=nn;break}if((15&d)!==Gt){e.msg="unknown compression method",n.mode=nn;break}if(d>>>=4,l-=4,O=8+(15&d),0===n.wbits&&(n.wbits=O),O>15||O>n.wbits){e.msg="invalid window size",n.mode=nn;break}n.dmax=1<<n.wbits,n.flags=0,e.adler=n.check=1,n.mode=512&d?16189:Kt,d=0,l=0;break;case 16181:for(;l<16;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(n.flags=d,(255&n.flags)!==Gt){e.msg="unknown compression method",n.mode=nn;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=nn;break}n.head&&(n.head.text=d>>8&1),512&n.flags&&4&n.wrap&&(D[0]=255&d,D[1]=d>>>8&255,n.check=se(n.check,D,2,0)),d=0,l=0,n.mode=16182;case 16182:for(;l<32;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}n.head&&(n.head.time=d),512&n.flags&&4&n.wrap&&(D[0]=255&d,D[1]=d>>>8&255,D[2]=d>>>16&255,D[3]=d>>>24&255,n.check=se(n.check,D,4,0)),d=0,l=0,n.mode=16183;case 16183:for(;l<16;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}n.head&&(n.head.xflags=255&d,n.head.os=d>>8),512&n.flags&&4&n.wrap&&(D[0]=255&d,D[1]=d>>>8&255,n.check=se(n.check,D,2,0)),d=0,l=0,n.mode=16184;case 16184:if(1024&n.flags){for(;l<16;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}n.length=d,n.head&&(n.head.extra_len=d),512&n.flags&&4&n.wrap&&(D[0]=255&d,D[1]=d>>>8&255,n.check=se(n.check,D,2,0)),d=0,l=0}else n.head&&(n.head.extra=null);n.mode=16185;case 16185:if(1024&n.flags&&(p=n.length,p>s&&(p=s),p&&(n.head&&(O=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(r.subarray(i,i+p),O)),512&n.flags&&4&n.wrap&&(n.check=se(n.check,r,p,i)),s-=p,i+=p,n.length-=p),n.length))break e;n.length=0,n.mode=16186;case 16186:if(2048&n.flags){if(0===s)break e;p=0;do{O=r[i+p++],n.head&&O&&n.length<65536&&(n.head.name+=String.fromCharCode(O))}while(O&&p<s);if(512&n.flags&&4&n.wrap&&(n.check=se(n.check,r,p,i)),s-=p,i+=p,O)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=16187;case 16187:if(4096&n.flags){if(0===s)break e;p=0;do{O=r[i+p++],n.head&&O&&n.length<65536&&(n.head.comment+=String.fromCharCode(O))}while(O&&p<s);if(512&n.flags&&4&n.wrap&&(n.check=se(n.check,r,p,i)),s-=p,i+=p,O)break e}else n.head&&(n.head.comment=null);n.mode=16188;case 16188:if(512&n.flags){for(;l<16;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(4&n.wrap&&d!==(65535&n.check)){e.msg="header crc mismatch",n.mode=nn;break}d=0,l=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Kt;break;case 16189:for(;l<32;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}e.adler=n.check=rn(d),d=0,l=0,n.mode=Vt;case Vt:if(0===n.havedict)return e.next_out=a,e.avail_out=c,e.next_in=i,e.avail_in=s,n.hold=d,n.bits=l,zt;e.adler=n.check=1,n.mode=Kt;case Kt:if(t===Ct||t===Ht)break e;case qt:if(n.last){d>>>=7&l,l-=7&l,n.mode=tn;break}for(;l<3;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}switch(n.last=1&d,d>>>=1,l-=1,3&d){case 0:n.mode=16193;break;case 1:if(_n(n),n.mode=$t,t===Ht){d>>>=2,l-=2;break e}break;case 2:n.mode=16196;break;case 3:e.msg="invalid block type",n.mode=nn}d>>>=2,l-=2;break;case 16193:for(d>>>=7&l,l-=7&l;l<32;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if((65535&d)!=(d>>>16^65535)){e.msg="invalid stored block lengths",n.mode=nn;break}if(n.length=65535&d,d=0,l=0,n.mode=Jt,t===Ht)break e;case Jt:n.mode=16195;case 16195:if(p=n.length,p){if(p>s&&(p=s),p>c&&(p=c),0===p)break e;o.set(r.subarray(i,i+p),a),s-=p,i+=p,c-=p,a+=p,n.length-=p;break}n.mode=Kt;break;case 16196:for(;l<14;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(n.nlen=257+(31&d),d>>>=5,l-=5,n.ndist=1+(31&d),d>>>=5,l-=5,n.ncode=4+(15&d),d>>>=4,l-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=nn;break}n.have=0,n.mode=16197;case 16197:for(;n.have<n.ncode;){for(;l<3;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}n.lens[M[n.have++]]=7&d,d>>>=3,l-=3}for(;n.have<19;)n.lens[M[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,R={bits:n.lenbits},b=Ut(0,n.lens,0,19,n.lencode,0,n.work,R),n.lenbits=R.bits,b){e.msg="invalid code lengths set",n.mode=nn;break}n.have=0,n.mode=16198;case 16198:for(;n.have<n.nlen+n.ndist;){for(;T=n.lencode[d&(1<<n.lenbits)-1],g=T>>>24,m=T>>>16&255,w=65535&T,!(g<=l);){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(w<16)d>>>=g,l-=g,n.lens[n.have++]=w;else{if(16===w){for(P=g+2;l<P;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(d>>>=g,l-=g,0===n.have){e.msg="invalid bit length repeat",n.mode=nn;break}O=n.lens[n.have-1],p=3+(3&d),d>>>=2,l-=2}else if(17===w){for(P=g+3;l<P;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}d>>>=g,l-=g,O=0,p=3+(7&d),d>>>=3,l-=3}else{for(P=g+7;l<P;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}d>>>=g,l-=g,O=0,p=11+(127&d),d>>>=7,l-=7}if(n.have+p>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=nn;break}for(;p--;)n.lens[n.have++]=O}}if(n.mode===nn)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=nn;break}if(n.lenbits=9,R={bits:n.lenbits},b=Ut(1,n.lens,0,n.nlen,n.lencode,0,n.work,R),n.lenbits=R.bits,b){e.msg="invalid literal/lengths set",n.mode=nn;break}if(n.distbits=6,n.distcode=n.distdyn,R={bits:n.distbits},b=Ut(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,R),n.distbits=R.bits,b){e.msg="invalid distances set",n.mode=nn;break}if(n.mode=$t,t===Ht)break e;case $t:n.mode=en;case en:if(s>=6&&c>=258){e.next_out=a,e.avail_out=c,e.next_in=i,e.avail_in=s,n.hold=d,n.bits=l,St(e,f),a=e.next_out,o=e.output,c=e.avail_out,i=e.next_in,r=e.input,s=e.avail_in,d=n.hold,l=n.bits,n.mode===Kt&&(n.back=-1);break}for(n.back=0;T=n.lencode[d&(1<<n.lenbits)-1],g=T>>>24,m=T>>>16&255,w=65535&T,!(g<=l);){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(m&&0==(240&m)){for(E=g,y=m,v=w;T=n.lencode[v+((d&(1<<E+y)-1)>>E)],g=T>>>24,m=T>>>16&255,w=65535&T,!(E+g<=l);){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}d>>>=E,l-=E,n.back+=E}if(d>>>=g,l-=g,n.back+=g,n.length=w,0===m){n.mode=16205;break}if(32&m){n.back=-1,n.mode=Kt;break}if(64&m){e.msg="invalid literal/length code",n.mode=nn;break}n.extra=15&m,n.mode=16201;case 16201:if(n.extra){for(P=n.extra;l<P;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}n.length+=d&(1<<n.extra)-1,d>>>=n.extra,l-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=16202;case 16202:for(;T=n.distcode[d&(1<<n.distbits)-1],g=T>>>24,m=T>>>16&255,w=65535&T,!(g<=l);){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(0==(240&m)){for(E=g,y=m,v=w;T=n.distcode[v+((d&(1<<E+y)-1)>>E)],g=T>>>24,m=T>>>16&255,w=65535&T,!(E+g<=l);){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}d>>>=E,l-=E,n.back+=E}if(d>>>=g,l-=g,n.back+=g,64&m){e.msg="invalid distance code",n.mode=nn;break}n.offset=w,n.extra=15&m,n.mode=16203;case 16203:if(n.extra){for(P=n.extra;l<P;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}n.offset+=d&(1<<n.extra)-1,d>>>=n.extra,l-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=nn;break}n.mode=16204;case 16204:if(0===c)break e;if(p=f-c,n.offset>p){if(p=n.offset-p,p>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=nn;break}p>n.wnext?(p-=n.wnext,_=n.wsize-p):_=n.wnext-p,p>n.length&&(p=n.length),h=n.window}else h=o,_=a-n.offset,p=n.length;p>c&&(p=c),c-=p,n.length-=p;do{o[a++]=h[_++]}while(--p);0===n.length&&(n.mode=en);break;case 16205:if(0===c)break e;o[a++]=n.length,c--,n.mode=en;break;case tn:if(n.wrap){for(;l<32;){if(0===s)break e;s--,d|=r[i++]<<l,l+=8}if(f-=c,e.total_out+=f,n.total+=f,4&n.wrap&&f&&(e.adler=n.check=n.flags?se(n.check,o,f,a-f):ie(n.check,o,f,a-f)),f=c,4&n.wrap&&(n.flags?d:rn(d))!==n.check){e.msg="incorrect data check",n.mode=nn;break}d=0,l=0}n.mode=16207;case 16207:if(n.wrap&&n.flags){for(;l<32;){if(0===s)break e;s--,d+=r[i++]<<l,l+=8}if(4&n.wrap&&d!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=nn;break}d=0,l=0}n.mode=16208;case 16208:b=Xt;break e;case nn:b=Bt;break e;case 16210:return Wt;default:return Qt}return e.next_out=a,e.avail_out=c,e.next_in=i,e.avail_in=s,n.hold=d,n.bits=l,(n.wsize||f!==e.avail_out&&n.mode<nn&&(n.mode<tn||t!==Nt))&&hn(e,e.output,e.next_out,f-e.avail_out),u-=e.avail_in,f-=e.avail_out,e.total_in+=u,e.total_out+=f,n.total+=f,4&n.wrap&&f&&(e.adler=n.check=n.flags?se(n.check,o,f,e.next_out-f):ie(n.check,o,f,e.next_out-f)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Kt?128:0)+(n.mode===$t||n.mode===Jt?256:0),(0===u&&0===f||t===Nt)&&b===Lt&&(b=Zt),b},inflateEnd:e=>{if(an(e))return Qt;let t=e.state;return t.window&&(t.window=null),e.state=null,Lt},inflateGetHeader:(e,t)=>{if(an(e))return Qt;const n=e.state;return 0==(2&n.wrap)?Qt:(n.head=t,t.done=!1,Lt)},inflateSetDictionary:(e,t)=>{const n=t.length;let r,o,i;return an(e)?Qt:(r=e.state,0!==r.wrap&&r.mode!==Vt?Qt:r.mode===Vt&&(o=1,o=ie(o,t,n,0),o!==r.check)?Bt:(i=hn(e,t,n,n),i?(r.mode=16210,Wt):(r.havedict=1,Lt)))},inflateInfo:"pako inflate (from Nodeca project)"};var mn=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const wn=Object.prototype.toString,{Z_NO_FLUSH:En,Z_FINISH:yn,Z_OK:vn,Z_STREAM_END:On,Z_NEED_DICT:bn,Z_STREAM_ERROR:Tn,Z_DATA_ERROR:Dn,Z_MEM_ERROR:Rn}=de;function Pn(e){this.options=ct({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new ht,this.strm.avail_out=0;let n=gn.inflateInit2(this.strm,t.windowBits);if(n!==vn)throw new Error(ce[n]);if(this.header=new mn,gn.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=ft(t.dictionary):"[object ArrayBuffer]"===wn.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=gn.inflateSetDictionary(this.strm,t.dictionary),n!==vn)))throw new Error(ce[n])}function Mn(e,t){const n=new Pn(t);if(n.push(e),n.err)throw n.msg||ce[n.err];return n.result}Pn.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize,o=this.options.dictionary;let i,a,s;if(this.ended)return!1;for(a=t===~~t?t:!0===t?yn:En,"[object ArrayBuffer]"===wn.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),i=gn.inflate(n,a),i===bn&&o&&(i=gn.inflateSetDictionary(n,o),i===vn?i=gn.inflate(n,a):i===Dn&&(i=bn));n.avail_in>0&&i===On&&n.state.wrap>0&&0!==e[n.next_in];)gn.inflateReset(n),i=gn.inflate(n,a);switch(i){case Tn:case Dn:case bn:case Rn:return this.onEnd(i),this.ended=!0,!1}if(s=n.avail_out,n.next_out&&(0===n.avail_out||i===On))if("string"===this.options.to){let e=_t(n.output,n.next_out),t=n.next_out-e,o=pt(n.output,e);n.next_out=t,n.avail_out=r-t,t&&n.output.set(n.output.subarray(e,e+t),0),this.onData(o)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(i!==vn||0!==s){if(i===On)return i=gn.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},Pn.prototype.onData=function(e){this.chunks.push(e)},Pn.prototype.onEnd=function(e){e===vn&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=dt(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var kn={Inflate:Pn,inflate:Mn,inflateRaw:function(e,t){return(t=t||{}).raw=!0,Mn(e,t)},ungzip:Mn,constants:de};const{Deflate:Sn,deflate:An,deflateRaw:Fn,gzip:jn}=Mt,{Inflate:In,inflate:xn,inflateRaw:Un,ungzip:Nn}=kn;var Cn={Deflate:Sn,deflate:An,deflateRaw:Fn,gzip:jn,Inflate:In,inflate:xn,inflateRaw:Un,ungzip:Nn,constants:de},Hn=function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},Ln=function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},Xn=new y;w();var zn=function(){function e(){this.wasmLocation_="",this.isBarbarian_=!1,this.webAssembly_=WebAssembly}return e.prototype.fetchBinary=function(e,t){return Hn(this,void 0,void 0,(function(){var n=this;return Ln(this,(function(o){return g.debug("Fetching file........... ",this.wasmLocation_),[2,fetch(this.wasmLocation_,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw g.error(" *** Anyline Error 4001:\nFailed to load wasm binary file at '"+n.wasmLocation_+"'.\nStatus code: "+e.status+"\nMake sure the file is accessible for AnylineJS. Aborting."),new r;return g.debug("Loaded binary"),e.arrayBuffer()})).then((function(e){return n._deBar_(e)})).then((function(t){return n.webAssembly_.instantiate(t,e)})).then((function(e){g.debug("Loaded webasm"),t(e.instance)})).catch((function(e){throw g.error(" *** Anyline Error:\nFailed to load wasm binary file at '"+n.wasmLocation_+"'.\nMake sure the file is accessible for AnylineJS. Aborting."),postMessage({type:"error",value:{code:e.code,message:e.message}}),new a}))]}))}))},e.prototype._deBar_=function(e){return Hn(this,void 0,void 0,(function(){return Ln(this,(function(t){return[2,Cn.inflate(e)]}))}))},e.prototype.load=function(e,t,n){return Hn(this,void 0,void 0,(function(){var r;return Ln(this,(function(o){switch(o.label){case 0:return Xn.start("WORKER","Load Module"),this.wasmLocation_=e,(r={anyline:void 0,instantiateWasm:void 0}).anyline=t,r.instantiateWasm=this.fetchBinary.bind(this),this.isBarbarian_=t.isBarbarian,[4,this.wasmLoader(this.isBarbarian_)];case 1:return o.sent()(r).then((function(e){Xn.stop("WORKER","Load Module"),n(e)})),[2]}}))}))},e.prototype.wasmLoader=function(e){return Hn(this,void 0,void 0,(function(){return Ln(this,(function(e){switch(e.label){case 0:return[4,Promise.resolve().then(o.t.bind(o,2045,23))];case 1:return[2,e.sent().default]}}))}))},e}();function Qn(e,t){var n=Object.getPrototypeOf(Uint8Array);return e instanceof n&&t instanceof n&&e.length===t.length&&e.every((function(e,n){return e===t[n]}))}function Bn(e){return 0|e}!function(){function e(e,t,n){if(this.dateTime_=null!=t&&"number"==typeof t?t:Bn(null!=t&&"number"!=typeof t?t.getTime()/1e3:Math.floor(Date.now()/1e3)),this.random_=void 0!==n?n:Math.floor(Math.random()*Number.MAX_SAFE_INTEGER),"string"==typeof e){var r=new TextEncoder;this.hash_=r.encode(e.substring(0,16))}else this.hash_=e}Object.defineProperty(e.prototype,"dateTime",{get:function(){return Bn(this.dateTime_)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"random",{get:function(){return this.random_},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"hash",{get:function(){return this.hash_},enumerable:!1,configurable:!0}),e.prototype.isEqual=function(e){return this.dateTime===e.dateTime&&this.random===e.random&&Qn(this.hash,e.hash)},e.prototype.isEquivalent=function(e,t){var n,r,o;return n=this.dateTime,r=e.dateTime-t,o=e.dateTime+t,!(n<r||o<n)&&Qn(this.hash,e.hash)}}();!function(){function e(e){e instanceof Uint8Array?this.data_=e:this.data_=new Uint8Array(24)}Object.defineProperty(e.prototype,"data",{get:function(){return this.data_},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"length",{get:function(){return this.data_.length},enumerable:!1,configurable:!0}),e.prototype.toByteArray=function(e,t){if(void 0===e&&(e=0),void 0===t&&(t=24),e>t||t>24)throw new n("The inputs are wrong.");return this.data_.slice(e,t)},e.prototype.isNull=function(){return void 0===this.data_.find((function(e){return e>0}))},e.prototype.isEqual=function(t){if(t instanceof e)return this.data_===t.data_;throw new n("The input is wrong.")}}();class Wn{constructor(){this.version_major=42,this.version_minor=1,this.version_patch=3,this.version_core=3505,this.version_ui=3085,this.version_name="42.1.3-a6e9bcc-6323f54-5602afad0-a6e9bcc-221222-170738-tflite-4-stack",this.version_date="Thu Dec 22 17:07:38 UTC 2022",this.version="ANYLINE "+this.version_major+"."+this.version_minor+"."+this.version_patch+" "+this.version_core+" "+this.version_ui+" "+this.version_date}logVersion(){console.log((new Wn).version)}}var Zn=Wn;w();const Gn=new y,Yn=new zn;class Vn{constructor(){Gn.start("WORKER","AnylineBackend constructor"),this.version=new Zn,this.version.logVersion(),this.lastMessage=void 0,this.lastReportJson=void 0,this.lastReportURL=void 0,this.__any_workerIdentifier=Math.round(100*Math.random()),this.cropRect=void 0,this.resizeWidth=void 0,this.scanningStopped=!1,this.modulePreloaded=!1,this.cancel_on_result=!0,this.__backendReported=!1,this.mockedImageTestName="",this.msg=void 0,this.isBarbarian=!1,this.barbarian=void 0,this.barbarianResult=void 0,Gn.stop("WORKER","AnylineBackend constructor")}destruct(){this.scanningStopped=!0,this.__any_module&&(this.__any_module.anyline=void 0),this.__any_module=void 0}postMessageToMain(e){void 0===this.msgHandler?"undefined"==typeof postMessage?this.lastMessage=e:postMessage(e):this.msgHandler(e)}onReportFunction(e){g.debug("Reported Variable: ",e),void 0!==this.onReport&&this.onReport(e)}onResultFunction(e){void 0!==this.onResult&&this.onResult(e)}_a44_j(){const e=location.origin.split(":"),t=e[0]+":"+e[1],n=this.fullUrlBundleId||t;this.__any_module._a44_(n)}___abort_with_error(){const e=this.__any_module.__any_get_exc_code(),t=this.__any_module.__any_get_exc_msg();this.abort_with_error_message(e,t)}abort_with_error_message(e,t){this.postMessageToMain({type:"error",value:{code:e,message:t}})}__snd_d_d(){const e=this.__any_module.__g_p();try{let t="",n="";"undefined"!=typeof navigator&&(t=navigator.userAgent),"undefined"!=typeof location&&(n=location.href);const r=JSON.parse(e),o=[...Gn.performanceLogArray,...r],i=Date.now();let a={trackedMarkers:u,testNameGlobal:this.version.version_name,testNameGlobalUUID:this.version.version_name+"_"+i,performanceLog:o,userAgent:t,tfBackend:"tflite",version:this.version,location:n};this.postMessageToMain({type:"performanceLog",value:a})}catch(e){g.error("Error constructing debuglog",e)}}__snd_d(){const e=this.__any_module.__lpd_s(),t=this.__any_module.__lpd_u(),n=JSON.parse(e);if(this.lastReportJson=n,this.lastReportURL=t,void 0===n)return;if(!0===this.disableReporting)return void g.warn(" TESTING, NOT REPORTING ");const r=this.version;n.anylineBuildNumber=r.version_core,n.anylineVersionNumber=r.version_major+"."+r.version_minor+"."+r.version_patch,n.appBuildNumber=r.version_ui,n.appVersionNumber=r.version_ui,n.deviceType="browser",n.platform="js",n.apiUrl="https://trainer-api.anyline.com/",this.postMessageToMain({type:"sendJSON",value:{url:t,content:n}})}___any_reports(){const e=this.__any_module.__any_get_reported_var();var t=JSON.parse(e);const n=t.name;Gn.start("REPORTING","Reporting "+n),g.debug("Reported Variable: ",t);const r=t.name.toLowerCase(),o=t.value;if("$resizeWidth"===n&&(this.resizeWidth=o),"$cropRect"===n&&(this.cropRect=t),"$square"==n||"$textRectDotMatrix"==n){let e=this.__any_module.__any_get_image_width()/this.resizeWidth,t=0,n=0;this.cropRect&&this.cropRect.value&&this.cropRect.value.x&&(n=this.cropRect.value.x*e),this.cropRect&&this.cropRect.value&&this.cropRect.value.y&&(t=this.cropRect.value.y*e);let r=[];const i=parseInt(o.height*e),a=parseInt(o.width*e),s=parseInt(o.x*e+n),c=parseInt(o.y*e+t),d=[[s,c],[s+a,c],[s+a,c+i],[s,c+i]];r.push({points:d}),this.postMessageToMain({type:"contours",value:r})}if("$barcodeCoordinates"==n){const e=o;this.postMessageToMain({type:"scannedBarcodes",value:{result:e}});let t=1;if(void 0!==this.resizeWidth){t=this.__any_module.__any_get_image_width()/this.resizeWidth}let n=0,r=0;this.cropRect&&this.cropRect.value&&this.cropRect.value.x&&(r=this.cropRect.value.x*t),this.cropRect&&this.cropRect.value&&this.cropRect.value.y&&(n=this.cropRect.value.y*t);const a=e.barcodes;let s=[];for(var i=0;i<a.length;i++){const e=a[i];if(e.coordinates){const o=e.coordinates,i=[[parseInt(o.x2*t+r),parseInt(o.y2*t+n)],[parseInt(o.x1*t+r),parseInt(o.y1*t+n)],[parseInt(o.x3*t+r),parseInt(o.y3*t+n)],[parseInt(o.x4*t+r),parseInt(o.y4*t+n)]];s.push({points:i})}}this.postMessageToMain({type:"contours",value:s})}if(r.includes("contour")){const e=this.__any_module.__any_get_image_width();let t=1;void 0!==this.resizeWidth&&(t=e/this.resizeWidth);let n=0,r=0;this.cropRect&&this.cropRect.value&&this.cropRect.value.x&&(r=this.cropRect.value.x*t),this.cropRect&&this.cropRect.value&&this.cropRect.value.y&&(n=this.cropRect.value.y*t);const a=o;let s=[];const c=a.length;for(i=0;i<c;i++){const e=a[i],o=parseInt(e.height*t),c=parseInt(e.width*t),d=parseInt(e.x*t+r),l=parseInt(e.y*t+n),u=[[d,l],[d+c,l],[d+c,l+o],[d,l+o]];s.push({points:u})}this.postMessageToMain({type:"contours",value:s})}Gn.stop("REPORTING","Reporting "+n)}___any_next_image(){Gn.stop("FRAME","Frame Run"),Gn.start("FRAME","Request Image Cycle"),g.debug("\n\n\nJS -- posting next image request \n\n\n"),this.postMessageToMain({type:"imagereq"})}__any_module_loc_f(e){g.debug("Loading file ",e);let t=this.__any_module_loc+e;return g.debug("Loading file ",t),t}messageInbox(e){if(this.msg=e,"image"===this.msg.type){if(Gn.stop("FRAME","Request Image Cycle"),g.debug("Image received"),1==this.scanningStopped)return;const e=this.msg.value;if(void 0===e||e.length<900)return void this.___any_next_image();Gn.start("FRAME","Frame Run"),this.mockedImageTestName.length>0?this.__any_module.__any_process_image_b64(this.mockedImageTestName,"{}"):this.__any_module.__any_process_image_b64(e,"{}")}else{if("echo"===this.msg.type)return void this.postMessageToMain({type:"echo",value:"echo"});if("test"===this.msg.type)this.disableReporting=!0,this.mockedImageTestName=this.msg.value;else if("disableReporting"===this.msg.type)this.disableReporting=this.msg.value;else if("stop"===this.msg.type)this.scanningStopped=!0;else if("resume"===this.msg.type)this.scanningStopped=!1,this.___any_next_image();else if("launch"===this.msg.type||"preload"===this.msg.type){if("launch"===this.msg.type&&1==this.modulePreloaded)return void this.__worker_done_loading();this.loadModule()}}}async loadModule(){Gn.start("WORKER","Anyline launch"),Gn.start("WORKER","Start to result"),Gn.start("WORKER","Anyline to First Frame");const e=this.msg.json,t=this.msg.license;if(this.fullUrlBundleId=this.msg.fullUrlBundleId,this.cancel_on_result=this.msg.viewConfig.cutouts[0].cancelOnResult,function(e,t){if(!1===e)throw t}(void 0!==t," *** AnylineJS Error 5001\nLicense error: License is not defined. \nPlease pass a license using the 'license' option when initialising AnylineJS."),void 0===this.cancel_on_result&&(this.cancel_on_result=!0),this.__any_module_id=e.module,void 0===e.module)throw"AnylineJS scan plugin is not defined. Please use a preset or load a scan plugin manually";var n,r;this.msg.debugAnyline?(E(l.DEBUG),g.debug("The log level changed to DEBUG")):(E(l.INFO),g.debug("The log level changed to INFO")),this.__any_module_loc=(n=this.msg.location,void 0===(r="undefined"!=typeof WorkerGlobalScope)&&(r=!1),r&&n&&!n.startsWith("https://")&&(n="."),n&&!n.endsWith("/")&&(n+="/"),n);let o="".concat(this.__any_module_loc,"anylinejs.wgx");try{Yn.load(o,this,this.initAnyline.bind(this))}catch(e){return g.error(e),void this.abort_with_error_message(e.code,e.message)}}initAnyline(e){Gn.start("WORKER","Init Anyline"),this.__any_module=e,this.__any_module._anymodels={},this.__any_module.__any_module_id=this.__any_module_id;try{this.initWasm(JSON.stringify(this.msg.json),this.msg.license)}catch(e){return e.message?(g.error(e),void this.abort_with_error_message(e.code,e.message)):(g.error(e),void this.___abort_with_error())}Gn.stop("WORKER","Init Anyline"),Gn.stop("WORKER","Anyline launch"),"preload"===this.msg.type?this.__worker_done_preloading():this.__worker_done_loading()}initWasm(e,t){const n=this.__any_module.__init_anyline(e,t);if(-1===n.result)throw new Error(n.message);return n}__worker_done_loading(){this.postMessageToMain({type:"loaded"}),this.___any_next_image()}__worker_done_preloading(){this.postMessageToMain({type:"preloaded"})}___any_result_reached(){Gn.start("WORKER","Get result from Core");const e=this.__any_module.__any_get_last_result();var t=JSON.parse(e),n=t.value;g.debug("Result: ",t),g.debug("Result: ",e),Gn.stop("WORKER","Get result from Core"),Gn.stop("WORKER","Start to result"),this.postMessageToMain({type:"result",value:{result:n}}),1==this.cancel_on_result&&(this.scanningStopped=!0)}}let Kn;onmessage=function(e){void 0===Kn&&(Kn=new Vn),Kn.messageInbox(e.data)}})(),i})()));